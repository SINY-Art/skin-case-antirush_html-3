/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e72) { throw _e72; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e73) { didErr = true; err = _e73; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n// import Splide from '@splidejs/splide'\n/**\r\n * Swiper 9.4.1\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * https://swiperjs.com\r\n *\r\n * Copyright 2014-2023 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: June 13, 2023\r\n */\n\n!function (e, t) {\n  \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = \"undefined\" != typeof globalThis ? globalThis : e || self).Swiper = t();\n}(undefined, function () {\n  \"use strict\";\n\n  function e(e) {\n    return null !== e && \"object\" == _typeof(e) && \"constructor\" in e && e.constructor === Object;\n  }\n  function t(s, a) {\n    void 0 === s && (s = {}), void 0 === a && (a = {}), Object.keys(a).forEach(function (i) {\n      void 0 === s[i] ? s[i] = a[i] : e(a[i]) && e(s[i]) && Object.keys(a[i]).length > 0 && t(s[i], a[i]);\n    });\n  }\n  var s = {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: \"\"\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {}\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        }\n      };\n    },\n    createElementNS: function createElementNS() {\n      return {};\n    },\n    importNode: function importNode() {\n      return null;\n    },\n    location: {\n      hash: \"\",\n      host: \"\",\n      hostname: \"\",\n      href: \"\",\n      origin: \"\",\n      pathname: \"\",\n      protocol: \"\",\n      search: \"\"\n    }\n  };\n  function a() {\n    var e = \"undefined\" != typeof document ? document : {};\n    return t(e, s), e;\n  }\n  var i = {\n    document: s,\n    navigator: {\n      userAgent: \"\"\n    },\n    location: {\n      hash: \"\",\n      host: \"\",\n      hostname: \"\",\n      href: \"\",\n      origin: \"\",\n      pathname: \"\",\n      protocol: \"\",\n      search: \"\"\n    },\n    history: {\n      replaceState: function replaceState() {},\n      pushState: function pushState() {},\n      go: function go() {},\n      back: function back() {}\n    },\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return \"\";\n        }\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n    matchMedia: function matchMedia() {\n      return {};\n    },\n    requestAnimationFrame: function requestAnimationFrame(e) {\n      return \"undefined\" == typeof setTimeout ? (e(), null) : setTimeout(e, 0);\n    },\n    cancelAnimationFrame: function cancelAnimationFrame(e) {\n      \"undefined\" != typeof setTimeout && clearTimeout(e);\n    }\n  };\n  function r() {\n    var e = \"undefined\" != typeof window ? window : {};\n    return t(e, i), e;\n  }\n  function n(e, t) {\n    return void 0 === t && (t = 0), setTimeout(e, t);\n  }\n  function l() {\n    return Date.now();\n  }\n  function o(e, t) {\n    void 0 === t && (t = \"x\");\n    var s = r();\n    var a, i, n;\n    var l = function (e) {\n      var t = r();\n      var s;\n      return t.getComputedStyle && (s = t.getComputedStyle(e, null)), !s && e.currentStyle && (s = e.currentStyle), s || (s = e.style), s;\n    }(e);\n    return s.WebKitCSSMatrix ? (i = l.transform || l.webkitTransform, i.split(\",\").length > 6 && (i = i.split(\", \").map(function (e) {\n      return e.replace(\",\", \".\");\n    }).join(\", \")), n = new s.WebKitCSSMatrix(\"none\" === i ? \"\" : i)) : (n = l.MozTransform || l.OTransform || l.MsTransform || l.msTransform || l.transform || l.getPropertyValue(\"transform\").replace(\"translate(\", \"matrix(1, 0, 0, 1,\"), a = n.toString().split(\",\")), \"x\" === t && (i = s.WebKitCSSMatrix ? n.m41 : 16 === a.length ? parseFloat(a[12]) : parseFloat(a[4])), \"y\" === t && (i = s.WebKitCSSMatrix ? n.m42 : 16 === a.length ? parseFloat(a[13]) : parseFloat(a[5])), i || 0;\n  }\n  function d(e) {\n    return \"object\" == _typeof(e) && null !== e && e.constructor && \"Object\" === Object.prototype.toString.call(e).slice(8, -1);\n  }\n  function c(e) {\n    return \"undefined\" != typeof window && void 0 !== window.HTMLElement ? e instanceof HTMLElement : e && (1 === e.nodeType || 11 === e.nodeType);\n  }\n  function p() {\n    var e = Object(arguments.length <= 0 ? void 0 : arguments[0]),\n      t = [\"__proto__\", \"constructor\", \"prototype\"];\n    for (var _s = 1; _s < arguments.length; _s += 1) {\n      var _a = _s < 0 || arguments.length <= _s ? void 0 : arguments[_s];\n      if (null != _a && !c(_a)) {\n        var _s2 = Object.keys(Object(_a)).filter(function (e) {\n          return t.indexOf(e) < 0;\n        });\n        for (var _t = 0, _i = _s2.length; _t < _i; _t += 1) {\n          var _i2 = _s2[_t],\n            _r = Object.getOwnPropertyDescriptor(_a, _i2);\n          void 0 !== _r && _r.enumerable && (d(e[_i2]) && d(_a[_i2]) ? _a[_i2].__swiper__ ? e[_i2] = _a[_i2] : p(e[_i2], _a[_i2]) : !d(e[_i2]) && d(_a[_i2]) ? (e[_i2] = {}, _a[_i2].__swiper__ ? e[_i2] = _a[_i2] : p(e[_i2], _a[_i2])) : e[_i2] = _a[_i2]);\n        }\n      }\n    }\n    return e;\n  }\n  function u(e, t, s) {\n    e.style.setProperty(t, s);\n  }\n  function m(e) {\n    var t = e.swiper,\n      s = e.targetPosition,\n      a = e.side;\n    var i = r(),\n      n = -t.translate;\n    var l,\n      o = null;\n    var d = t.params.speed;\n    t.wrapperEl.style.scrollSnapType = \"none\", i.cancelAnimationFrame(t.cssModeFrameID);\n    var c = s > n ? \"next\" : \"prev\",\n      p = function p(e, t) {\n        return \"next\" === c && e >= t || \"prev\" === c && e <= t;\n      },\n      u = function u() {\n        l = new Date().getTime(), null === o && (o = l);\n        var e = Math.max(Math.min((l - o) / d, 1), 0),\n          r = .5 - Math.cos(e * Math.PI) / 2;\n        var c = n + r * (s - n);\n        if (p(c, s) && (c = s), t.wrapperEl.scrollTo(_defineProperty({}, a, c)), p(c, s)) return t.wrapperEl.style.overflow = \"hidden\", t.wrapperEl.style.scrollSnapType = \"\", setTimeout(function () {\n          t.wrapperEl.style.overflow = \"\", t.wrapperEl.scrollTo(_defineProperty({}, a, c));\n        }), void i.cancelAnimationFrame(t.cssModeFrameID);\n        t.cssModeFrameID = i.requestAnimationFrame(u);\n      };\n    u();\n  }\n  function h(e) {\n    return e.querySelector(\".swiper-slide-transform\") || e.shadowEl && e.shadowEl.querySelector(\".swiper-slide-transform\") || e;\n  }\n  function f(e, t) {\n    return void 0 === t && (t = \"\"), _toConsumableArray(e.children).filter(function (e) {\n      return e.matches(t);\n    });\n  }\n  function g(e, t) {\n    var _s$classList;\n    void 0 === t && (t = []);\n    var s = document.createElement(e);\n    return (_s$classList = s.classList).add.apply(_s$classList, _toConsumableArray(Array.isArray(t) ? t : [t])), s;\n  }\n  function v(e) {\n    var t = r(),\n      s = a(),\n      i = e.getBoundingClientRect(),\n      n = s.body,\n      l = e.clientTop || n.clientTop || 0,\n      o = e.clientLeft || n.clientLeft || 0,\n      d = e === t ? t.scrollY : e.scrollTop,\n      c = e === t ? t.scrollX : e.scrollLeft;\n    return {\n      top: i.top + d - l,\n      left: i.left + c - o\n    };\n  }\n  function w(e, t) {\n    return r().getComputedStyle(e, null).getPropertyValue(t);\n  }\n  function b(e) {\n    var t,\n      s = e;\n    if (s) {\n      for (t = 0; null !== (s = s.previousSibling);) 1 === s.nodeType && (t += 1);\n      return t;\n    }\n  }\n  function y(e, t) {\n    var s = [];\n    var a = e.parentElement;\n    for (; a;) t ? a.matches(t) && s.push(a) : s.push(a), a = a.parentElement;\n    return s;\n  }\n  function E(e, t) {\n    t && e.addEventListener(\"transitionend\", function s(a) {\n      a.target === e && (t.call(e, a), e.removeEventListener(\"transitionend\", s));\n    });\n  }\n  function x(e, t, s) {\n    var a = r();\n    return s ? e[\"width\" === t ? \"offsetWidth\" : \"offsetHeight\"] + parseFloat(a.getComputedStyle(e, null).getPropertyValue(\"width\" === t ? \"margin-right\" : \"margin-top\")) + parseFloat(a.getComputedStyle(e, null).getPropertyValue(\"width\" === t ? \"margin-left\" : \"margin-bottom\")) : e.offsetWidth;\n  }\n  var S, T, M;\n  function C() {\n    return S || (S = function () {\n      var e = r(),\n        t = a();\n      return {\n        smoothScroll: t.documentElement && t.documentElement.style && \"scrollBehavior\" in t.documentElement.style,\n        touch: !!(\"ontouchstart\" in e || e.DocumentTouch && t instanceof e.DocumentTouch)\n      };\n    }()), S;\n  }\n  function P(e) {\n    return void 0 === e && (e = {}), T || (T = function (e) {\n      var _ref = void 0 === e ? {} : e,\n        t = _ref.userAgent;\n      var s = C(),\n        a = r(),\n        i = a.navigator.platform,\n        n = t || a.navigator.userAgent,\n        l = {\n          ios: !1,\n          android: !1\n        },\n        o = a.screen.width,\n        d = a.screen.height,\n        c = n.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n      var p = n.match(/(iPad).*OS\\s([\\d_]+)/);\n      var u = n.match(/(iPod)(.*OS\\s([\\d_]+))?/),\n        m = !p && n.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/),\n        h = \"Win32\" === i;\n      var f = \"MacIntel\" === i;\n      return !p && f && s.touch && [\"1024x1366\", \"1366x1024\", \"834x1194\", \"1194x834\", \"834x1112\", \"1112x834\", \"768x1024\", \"1024x768\", \"820x1180\", \"1180x820\", \"810x1080\", \"1080x810\"].indexOf(\"\".concat(o, \"x\").concat(d)) >= 0 && (p = n.match(/(Version)\\/([\\d.]+)/), p || (p = [0, 1, \"13_0_0\"]), f = !1), c && !h && (l.os = \"android\", l.android = !0), (p || m || u) && (l.os = \"ios\", l.ios = !0), l;\n    }(e)), T;\n  }\n  function L() {\n    return M || (M = function () {\n      var e = r();\n      var t = !1;\n      function s() {\n        var t = e.navigator.userAgent.toLowerCase();\n        return t.indexOf(\"safari\") >= 0 && t.indexOf(\"chrome\") < 0 && t.indexOf(\"android\") < 0;\n      }\n      if (s()) {\n        var _s3 = String(e.navigator.userAgent);\n        if (_s3.includes(\"Version/\")) {\n          var _s3$split$1$split$0$s = _s3.split(\"Version/\")[1].split(\" \")[0].split(\".\").map(function (e) {\n              return Number(e);\n            }),\n            _s3$split$1$split$0$s2 = _slicedToArray(_s3$split$1$split$0$s, 2),\n            _e = _s3$split$1$split$0$s2[0],\n            _a2 = _s3$split$1$split$0$s2[1];\n          t = _e < 16 || 16 === _e && _a2 < 2;\n        }\n      }\n      return {\n        isSafari: t || s(),\n        needPerspectiveFix: t,\n        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(e.navigator.userAgent)\n      };\n    }()), M;\n  }\n  var z = {\n    on: function on(e, t, s) {\n      var a = this;\n      if (!a.eventsListeners || a.destroyed) return a;\n      if (\"function\" != typeof t) return a;\n      var i = s ? \"unshift\" : \"push\";\n      return e.split(\" \").forEach(function (e) {\n        a.eventsListeners[e] || (a.eventsListeners[e] = []), a.eventsListeners[e][i](t);\n      }), a;\n    },\n    once: function once(e, t, s) {\n      var a = this;\n      if (!a.eventsListeners || a.destroyed) return a;\n      if (\"function\" != typeof t) return a;\n      function i() {\n        a.off(e, i), i.__emitterProxy && delete i.__emitterProxy;\n        for (var s = arguments.length, r = new Array(s), n = 0; n < s; n++) r[n] = arguments[n];\n        t.apply(a, r);\n      }\n      return i.__emitterProxy = t, a.on(e, i, s);\n    },\n    onAny: function onAny(e, t) {\n      var s = this;\n      if (!s.eventsListeners || s.destroyed) return s;\n      if (\"function\" != typeof e) return s;\n      var a = t ? \"unshift\" : \"push\";\n      return s.eventsAnyListeners.indexOf(e) < 0 && s.eventsAnyListeners[a](e), s;\n    },\n    offAny: function offAny(e) {\n      var t = this;\n      if (!t.eventsListeners || t.destroyed) return t;\n      if (!t.eventsAnyListeners) return t;\n      var s = t.eventsAnyListeners.indexOf(e);\n      return s >= 0 && t.eventsAnyListeners.splice(s, 1), t;\n    },\n    off: function off(e, t) {\n      var s = this;\n      return !s.eventsListeners || s.destroyed ? s : s.eventsListeners ? (e.split(\" \").forEach(function (e) {\n        void 0 === t ? s.eventsListeners[e] = [] : s.eventsListeners[e] && s.eventsListeners[e].forEach(function (a, i) {\n          (a === t || a.__emitterProxy && a.__emitterProxy === t) && s.eventsListeners[e].splice(i, 1);\n        });\n      }), s) : s;\n    },\n    emit: function emit() {\n      var e = this;\n      if (!e.eventsListeners || e.destroyed) return e;\n      if (!e.eventsListeners) return e;\n      var t, s, a;\n      for (var i = arguments.length, r = new Array(i), n = 0; n < i; n++) r[n] = arguments[n];\n      \"string\" == typeof r[0] || Array.isArray(r[0]) ? (t = r[0], s = r.slice(1, r.length), a = e) : (t = r[0].events, s = r[0].data, a = r[0].context || e), s.unshift(a);\n      return (Array.isArray(t) ? t : t.split(\" \")).forEach(function (t) {\n        e.eventsAnyListeners && e.eventsAnyListeners.length && e.eventsAnyListeners.forEach(function (e) {\n          e.apply(a, [t].concat(_toConsumableArray(s)));\n        }), e.eventsListeners && e.eventsListeners[t] && e.eventsListeners[t].forEach(function (e) {\n          e.apply(a, s);\n        });\n      }), e;\n    }\n  };\n  var A = function A(e, t) {\n      if (!e || e.destroyed || !e.params) return;\n      var s = t.closest(e.isElement ? \"swiper-slide\" : \".\".concat(e.params.slideClass));\n      if (s) {\n        var _t2 = s.querySelector(\".\".concat(e.params.lazyPreloaderClass));\n        _t2 && _t2.remove();\n      }\n    },\n    $ = function $(e, t) {\n      if (!e.slides[t]) return;\n      var s = e.slides[t].querySelector('[loading=\"lazy\"]');\n      s && s.removeAttribute(\"loading\");\n    },\n    I = function I(e) {\n      if (!e || e.destroyed || !e.params) return;\n      var t = e.params.lazyPreloadPrevNext;\n      var s = e.slides.length;\n      if (!s || !t || t < 0) return;\n      t = Math.min(t, s);\n      var a = \"auto\" === e.params.slidesPerView ? e.slidesPerViewDynamic() : Math.ceil(e.params.slidesPerView),\n        i = e.activeIndex;\n      if (e.params.grid && e.params.grid.rows > 1) {\n        var _s4 = i,\n          _r2 = [_s4 - t];\n        return _r2.push.apply(_r2, _toConsumableArray(Array.from({\n          length: t\n        }).map(function (e, t) {\n          return _s4 + a + t;\n        }))), void e.slides.forEach(function (t, s) {\n          _r2.includes(t.column) && $(e, s);\n        });\n      }\n      var r = i + a - 1;\n      if (e.params.rewind || e.params.loop) for (var _a3 = i - t; _a3 <= r + t; _a3 += 1) {\n        var _t3 = (_a3 % s + s) % s;\n        (_t3 < i || _t3 > r) && $(e, _t3);\n      } else for (var _a4 = Math.max(i - t, 0); _a4 <= Math.min(r + t, s - 1); _a4 += 1) _a4 !== i && (_a4 > r || _a4 < i) && $(e, _a4);\n    };\n  var k = {\n    updateSize: function updateSize() {\n      var e = this;\n      var t, s;\n      var a = e.el;\n      t = void 0 !== e.params.width && null !== e.params.width ? e.params.width : a.clientWidth, s = void 0 !== e.params.height && null !== e.params.height ? e.params.height : a.clientHeight, 0 === t && e.isHorizontal() || 0 === s && e.isVertical() || (t = t - parseInt(w(a, \"padding-left\") || 0, 10) - parseInt(w(a, \"padding-right\") || 0, 10), s = s - parseInt(w(a, \"padding-top\") || 0, 10) - parseInt(w(a, \"padding-bottom\") || 0, 10), Number.isNaN(t) && (t = 0), Number.isNaN(s) && (s = 0), Object.assign(e, {\n        width: t,\n        height: s,\n        size: e.isHorizontal() ? t : s\n      }));\n    },\n    updateSlides: function updateSlides() {\n      var e = this;\n      function t(t) {\n        return e.isHorizontal() ? t : {\n          width: \"height\",\n          \"margin-top\": \"margin-left\",\n          \"margin-bottom \": \"margin-right\",\n          \"margin-left\": \"margin-top\",\n          \"margin-right\": \"margin-bottom\",\n          \"padding-left\": \"padding-top\",\n          \"padding-right\": \"padding-bottom\",\n          marginRight: \"marginBottom\"\n        }[t];\n      }\n      function s(e, s) {\n        return parseFloat(e.getPropertyValue(t(s)) || 0);\n      }\n      var a = e.params,\n        i = e.wrapperEl,\n        r = e.slidesEl,\n        n = e.size,\n        l = e.rtlTranslate,\n        o = e.wrongRTL,\n        d = e.virtual && a.virtual.enabled,\n        c = d ? e.virtual.slides.length : e.slides.length,\n        p = f(r, \".\".concat(e.params.slideClass, \", swiper-slide\")),\n        m = d ? e.virtual.slides.length : p.length;\n      var h = [];\n      var g = [],\n        v = [];\n      var b = a.slidesOffsetBefore;\n      \"function\" == typeof b && (b = a.slidesOffsetBefore.call(e));\n      var y = a.slidesOffsetAfter;\n      \"function\" == typeof y && (y = a.slidesOffsetAfter.call(e));\n      var E = e.snapGrid.length,\n        S = e.slidesGrid.length;\n      var T = a.spaceBetween,\n        M = -b,\n        C = 0,\n        P = 0;\n      if (void 0 === n) return;\n      \"string\" == typeof T && T.indexOf(\"%\") >= 0 ? T = parseFloat(T.replace(\"%\", \"\")) / 100 * n : \"string\" == typeof T && (T = parseFloat(T)), e.virtualSize = -T, p.forEach(function (e) {\n        l ? e.style.marginLeft = \"\" : e.style.marginRight = \"\", e.style.marginBottom = \"\", e.style.marginTop = \"\";\n      }), a.centeredSlides && a.cssMode && (u(i, \"--swiper-centered-offset-before\", \"\"), u(i, \"--swiper-centered-offset-after\", \"\"));\n      var L = a.grid && a.grid.rows > 1 && e.grid;\n      var z;\n      L && e.grid.initSlides(m);\n      var A = \"auto\" === a.slidesPerView && a.breakpoints && Object.keys(a.breakpoints).filter(function (e) {\n        return void 0 !== a.breakpoints[e].slidesPerView;\n      }).length > 0;\n      for (var _i3 = 0; _i3 < m; _i3 += 1) {\n        var _r3 = void 0;\n        if (z = 0, p[_i3] && (_r3 = p[_i3]), L && e.grid.updateSlide(_i3, _r3, m, t), !p[_i3] || \"none\" !== w(_r3, \"display\")) {\n          if (\"auto\" === a.slidesPerView) {\n            A && (p[_i3].style[t(\"width\")] = \"\");\n            var _n = getComputedStyle(_r3),\n              _l = _r3.style.transform,\n              _o = _r3.style.webkitTransform;\n            if (_l && (_r3.style.transform = \"none\"), _o && (_r3.style.webkitTransform = \"none\"), a.roundLengths) z = e.isHorizontal() ? x(_r3, \"width\", !0) : x(_r3, \"height\", !0);else {\n              var _e2 = s(_n, \"width\"),\n                _t4 = s(_n, \"padding-left\"),\n                _a5 = s(_n, \"padding-right\"),\n                _i4 = s(_n, \"margin-left\"),\n                _l2 = s(_n, \"margin-right\"),\n                _o2 = _n.getPropertyValue(\"box-sizing\");\n              if (_o2 && \"border-box\" === _o2) z = _e2 + _i4 + _l2;else {\n                var _r4 = _r3,\n                  _s5 = _r4.clientWidth,\n                  _n2 = _r4.offsetWidth;\n                z = _e2 + _t4 + _a5 + _i4 + _l2 + (_n2 - _s5);\n              }\n            }\n            _l && (_r3.style.transform = _l), _o && (_r3.style.webkitTransform = _o), a.roundLengths && (z = Math.floor(z));\n          } else z = (n - (a.slidesPerView - 1) * T) / a.slidesPerView, a.roundLengths && (z = Math.floor(z)), p[_i3] && (p[_i3].style[t(\"width\")] = \"\".concat(z, \"px\"));\n          p[_i3] && (p[_i3].swiperSlideSize = z), v.push(z), a.centeredSlides ? (M = M + z / 2 + C / 2 + T, 0 === C && 0 !== _i3 && (M = M - n / 2 - T), 0 === _i3 && (M = M - n / 2 - T), Math.abs(M) < .001 && (M = 0), a.roundLengths && (M = Math.floor(M)), P % a.slidesPerGroup == 0 && h.push(M), g.push(M)) : (a.roundLengths && (M = Math.floor(M)), (P - Math.min(e.params.slidesPerGroupSkip, P)) % e.params.slidesPerGroup == 0 && h.push(M), g.push(M), M = M + z + T), e.virtualSize += z + T, C = z, P += 1;\n        }\n      }\n      if (e.virtualSize = Math.max(e.virtualSize, n) + y, l && o && (\"slide\" === a.effect || \"coverflow\" === a.effect) && (i.style.width = \"\".concat(e.virtualSize + T, \"px\")), a.setWrapperSize && (i.style[t(\"width\")] = \"\".concat(e.virtualSize + T, \"px\")), L && e.grid.updateWrapperSize(z, h, t), !a.centeredSlides) {\n        var _t5 = [];\n        for (var _s6 = 0; _s6 < h.length; _s6 += 1) {\n          var _i5 = h[_s6];\n          a.roundLengths && (_i5 = Math.floor(_i5)), h[_s6] <= e.virtualSize - n && _t5.push(_i5);\n        }\n        h = _t5, Math.floor(e.virtualSize - n) - Math.floor(h[h.length - 1]) > 1 && h.push(e.virtualSize - n);\n      }\n      if (d && a.loop) {\n        var _t6 = v[0] + T;\n        if (a.slidesPerGroup > 1) {\n          var _s7 = Math.ceil((e.virtual.slidesBefore + e.virtual.slidesAfter) / a.slidesPerGroup),\n            _i6 = _t6 * a.slidesPerGroup;\n          for (var _e3 = 0; _e3 < _s7; _e3 += 1) h.push(h[h.length - 1] + _i6);\n        }\n        for (var _s8 = 0; _s8 < e.virtual.slidesBefore + e.virtual.slidesAfter; _s8 += 1) 1 === a.slidesPerGroup && h.push(h[h.length - 1] + _t6), g.push(g[g.length - 1] + _t6), e.virtualSize += _t6;\n      }\n      if (0 === h.length && (h = [0]), 0 !== T) {\n        var _s9 = e.isHorizontal() && l ? \"marginLeft\" : t(\"marginRight\");\n        p.filter(function (e, t) {\n          return !(a.cssMode && !a.loop) || t !== p.length - 1;\n        }).forEach(function (e) {\n          e.style[_s9] = \"\".concat(T, \"px\");\n        });\n      }\n      if (a.centeredSlides && a.centeredSlidesBounds) {\n        var _e4 = 0;\n        v.forEach(function (t) {\n          _e4 += t + (T || 0);\n        }), _e4 -= T;\n        var _t7 = _e4 - n;\n        h = h.map(function (e) {\n          return e <= 0 ? -b : e > _t7 ? _t7 + y : e;\n        });\n      }\n      if (a.centerInsufficientSlides) {\n        var _e5 = 0;\n        if (v.forEach(function (t) {\n          _e5 += t + (T || 0);\n        }), _e5 -= T, _e5 < n) {\n          var _t8 = (n - _e5) / 2;\n          h.forEach(function (e, s) {\n            h[s] = e - _t8;\n          }), g.forEach(function (e, s) {\n            g[s] = e + _t8;\n          });\n        }\n      }\n      if (Object.assign(e, {\n        slides: p,\n        snapGrid: h,\n        slidesGrid: g,\n        slidesSizesGrid: v\n      }), a.centeredSlides && a.cssMode && !a.centeredSlidesBounds) {\n        u(i, \"--swiper-centered-offset-before\", -h[0] + \"px\"), u(i, \"--swiper-centered-offset-after\", e.size / 2 - v[v.length - 1] / 2 + \"px\");\n        var _t9 = -e.snapGrid[0],\n          _s10 = -e.slidesGrid[0];\n        e.snapGrid = e.snapGrid.map(function (e) {\n          return e + _t9;\n        }), e.slidesGrid = e.slidesGrid.map(function (e) {\n          return e + _s10;\n        });\n      }\n      if (m !== c && e.emit(\"slidesLengthChange\"), h.length !== E && (e.params.watchOverflow && e.checkOverflow(), e.emit(\"snapGridLengthChange\")), g.length !== S && e.emit(\"slidesGridLengthChange\"), a.watchSlidesProgress && e.updateSlidesOffset(), !(d || a.cssMode || \"slide\" !== a.effect && \"fade\" !== a.effect)) {\n        var _t10 = \"\".concat(a.containerModifierClass, \"backface-hidden\"),\n          _s11 = e.el.classList.contains(_t10);\n        m <= a.maxBackfaceHiddenSlides ? _s11 || e.el.classList.add(_t10) : _s11 && e.el.classList.remove(_t10);\n      }\n    },\n    updateAutoHeight: function updateAutoHeight(e) {\n      var t = this,\n        s = [],\n        a = t.virtual && t.params.virtual.enabled;\n      var i,\n        r = 0;\n      \"number\" == typeof e ? t.setTransition(e) : !0 === e && t.setTransition(t.params.speed);\n      var n = function n(e) {\n        return a ? t.slides[t.getSlideIndexByData(e)] : t.slides[e];\n      };\n      if (\"auto\" !== t.params.slidesPerView && t.params.slidesPerView > 1) {\n        if (t.params.centeredSlides) (t.visibleSlides || []).forEach(function (e) {\n          s.push(e);\n        });else for (i = 0; i < Math.ceil(t.params.slidesPerView); i += 1) {\n          var _e6 = t.activeIndex + i;\n          if (_e6 > t.slides.length && !a) break;\n          s.push(n(_e6));\n        }\n      } else s.push(n(t.activeIndex));\n      for (i = 0; i < s.length; i += 1) if (void 0 !== s[i]) {\n        var _e7 = s[i].offsetHeight;\n        r = _e7 > r ? _e7 : r;\n      }\n      (r || 0 === r) && (t.wrapperEl.style.height = \"\".concat(r, \"px\"));\n    },\n    updateSlidesOffset: function updateSlidesOffset() {\n      var e = this,\n        t = e.slides,\n        s = e.isElement ? e.isHorizontal() ? e.wrapperEl.offsetLeft : e.wrapperEl.offsetTop : 0;\n      for (var _a6 = 0; _a6 < t.length; _a6 += 1) t[_a6].swiperSlideOffset = (e.isHorizontal() ? t[_a6].offsetLeft : t[_a6].offsetTop) - s - e.cssOverflowAdjustment();\n    },\n    updateSlidesProgress: function updateSlidesProgress(e) {\n      void 0 === e && (e = this && this.translate || 0);\n      var t = this,\n        s = t.params,\n        a = t.slides,\n        i = t.rtlTranslate,\n        r = t.snapGrid;\n      if (0 === a.length) return;\n      void 0 === a[0].swiperSlideOffset && t.updateSlidesOffset();\n      var n = -e;\n      i && (n = e), a.forEach(function (e) {\n        e.classList.remove(s.slideVisibleClass);\n      }), t.visibleSlidesIndexes = [], t.visibleSlides = [];\n      var l = s.spaceBetween;\n      \"string\" == typeof l && l.indexOf(\"%\") >= 0 ? l = parseFloat(l.replace(\"%\", \"\")) / 100 * t.size : \"string\" == typeof l && (l = parseFloat(l));\n      for (var _e8 = 0; _e8 < a.length; _e8 += 1) {\n        var _o3 = a[_e8];\n        var _d = _o3.swiperSlideOffset;\n        s.cssMode && s.centeredSlides && (_d -= a[0].swiperSlideOffset);\n        var _c = (n + (s.centeredSlides ? t.minTranslate() : 0) - _d) / (_o3.swiperSlideSize + l),\n          _p = (n - r[0] + (s.centeredSlides ? t.minTranslate() : 0) - _d) / (_o3.swiperSlideSize + l),\n          _u = -(n - _d),\n          _m = _u + t.slidesSizesGrid[_e8];\n        (_u >= 0 && _u < t.size - 1 || _m > 1 && _m <= t.size || _u <= 0 && _m >= t.size) && (t.visibleSlides.push(_o3), t.visibleSlidesIndexes.push(_e8), a[_e8].classList.add(s.slideVisibleClass)), _o3.progress = i ? -_c : _c, _o3.originalProgress = i ? -_p : _p;\n      }\n    },\n    updateProgress: function updateProgress(e) {\n      var t = this;\n      if (void 0 === e) {\n        var _s12 = t.rtlTranslate ? -1 : 1;\n        e = t && t.translate && t.translate * _s12 || 0;\n      }\n      var s = t.params,\n        a = t.maxTranslate() - t.minTranslate();\n      var i = t.progress,\n        r = t.isBeginning,\n        n = t.isEnd,\n        l = t.progressLoop;\n      var o = r,\n        d = n;\n      if (0 === a) i = 0, r = !0, n = !0;else {\n        i = (e - t.minTranslate()) / a;\n        var _s13 = Math.abs(e - t.minTranslate()) < 1,\n          _l3 = Math.abs(e - t.maxTranslate()) < 1;\n        r = _s13 || i <= 0, n = _l3 || i >= 1, _s13 && (i = 0), _l3 && (i = 1);\n      }\n      if (s.loop) {\n        var _s14 = t.getSlideIndexByData(0),\n          _a7 = t.getSlideIndexByData(t.slides.length - 1),\n          _i7 = t.slidesGrid[_s14],\n          _r5 = t.slidesGrid[_a7],\n          _n3 = t.slidesGrid[t.slidesGrid.length - 1],\n          _o4 = Math.abs(e);\n        l = _o4 >= _i7 ? (_o4 - _i7) / _n3 : (_o4 + _n3 - _r5) / _n3, l > 1 && (l -= 1);\n      }\n      Object.assign(t, {\n        progress: i,\n        progressLoop: l,\n        isBeginning: r,\n        isEnd: n\n      }), (s.watchSlidesProgress || s.centeredSlides && s.autoHeight) && t.updateSlidesProgress(e), r && !o && t.emit(\"reachBeginning toEdge\"), n && !d && t.emit(\"reachEnd toEdge\"), (o && !r || d && !n) && t.emit(\"fromEdge\"), t.emit(\"progress\", i);\n    },\n    updateSlidesClasses: function updateSlidesClasses() {\n      var e = this,\n        t = e.slides,\n        s = e.params,\n        a = e.slidesEl,\n        i = e.activeIndex,\n        r = e.virtual && s.virtual.enabled,\n        n = function n(e) {\n          return f(a, \".\".concat(s.slideClass).concat(e, \", swiper-slide\").concat(e))[0];\n        };\n      var l;\n      if (t.forEach(function (e) {\n        e.classList.remove(s.slideActiveClass, s.slideNextClass, s.slidePrevClass);\n      }), r) {\n        if (s.loop) {\n          var _t11 = i - e.virtual.slidesBefore;\n          _t11 < 0 && (_t11 = e.virtual.slides.length + _t11), _t11 >= e.virtual.slides.length && (_t11 -= e.virtual.slides.length), l = n(\"[data-swiper-slide-index=\\\"\".concat(_t11, \"\\\"]\"));\n        } else l = n(\"[data-swiper-slide-index=\\\"\".concat(i, \"\\\"]\"));\n      } else l = t[i];\n      if (l) {\n        l.classList.add(s.slideActiveClass);\n        var _e9 = function (e, t) {\n          var s = [];\n          for (; e.nextElementSibling;) {\n            var _a8 = e.nextElementSibling;\n            t ? _a8.matches(t) && s.push(_a8) : s.push(_a8), e = _a8;\n          }\n          return s;\n        }(l, \".\".concat(s.slideClass, \", swiper-slide\"))[0];\n        s.loop && !_e9 && (_e9 = t[0]), _e9 && _e9.classList.add(s.slideNextClass);\n        var _a9 = function (e, t) {\n          var s = [];\n          for (; e.previousElementSibling;) {\n            var _a10 = e.previousElementSibling;\n            t ? _a10.matches(t) && s.push(_a10) : s.push(_a10), e = _a10;\n          }\n          return s;\n        }(l, \".\".concat(s.slideClass, \", swiper-slide\"))[0];\n        s.loop && 0 === !_a9 && (_a9 = t[t.length - 1]), _a9 && _a9.classList.add(s.slidePrevClass);\n      }\n      e.emitSlidesClasses();\n    },\n    updateActiveIndex: function updateActiveIndex(e) {\n      var t = this,\n        s = t.rtlTranslate ? t.translate : -t.translate,\n        a = t.snapGrid,\n        i = t.params,\n        r = t.activeIndex,\n        n = t.realIndex,\n        l = t.snapIndex;\n      var o,\n        d = e;\n      var c = function c(e) {\n        var s = e - t.virtual.slidesBefore;\n        return s < 0 && (s = t.virtual.slides.length + s), s >= t.virtual.slides.length && (s -= t.virtual.slides.length), s;\n      };\n      if (void 0 === d && (d = function (e) {\n        var t = e.slidesGrid,\n          s = e.params,\n          a = e.rtlTranslate ? e.translate : -e.translate;\n        var i;\n        for (var _e10 = 0; _e10 < t.length; _e10 += 1) void 0 !== t[_e10 + 1] ? a >= t[_e10] && a < t[_e10 + 1] - (t[_e10 + 1] - t[_e10]) / 2 ? i = _e10 : a >= t[_e10] && a < t[_e10 + 1] && (i = _e10 + 1) : a >= t[_e10] && (i = _e10);\n        return s.normalizeSlideIndex && (i < 0 || void 0 === i) && (i = 0), i;\n      }(t)), a.indexOf(s) >= 0) o = a.indexOf(s);else {\n        var _e11 = Math.min(i.slidesPerGroupSkip, d);\n        o = _e11 + Math.floor((d - _e11) / i.slidesPerGroup);\n      }\n      if (o >= a.length && (o = a.length - 1), d === r) return o !== l && (t.snapIndex = o, t.emit(\"snapIndexChange\")), void (t.params.loop && t.virtual && t.params.virtual.enabled && (t.realIndex = c(d)));\n      var p;\n      p = t.virtual && i.virtual.enabled && i.loop ? c(d) : t.slides[d] ? parseInt(t.slides[d].getAttribute(\"data-swiper-slide-index\") || d, 10) : d, Object.assign(t, {\n        previousSnapIndex: l,\n        snapIndex: o,\n        previousRealIndex: n,\n        realIndex: p,\n        previousIndex: r,\n        activeIndex: d\n      }), t.initialized && I(t), t.emit(\"activeIndexChange\"), t.emit(\"snapIndexChange\"), n !== p && t.emit(\"realIndexChange\"), (t.initialized || t.params.runCallbacksOnInit) && t.emit(\"slideChange\");\n    },\n    updateClickedSlide: function updateClickedSlide(e) {\n      var t = this,\n        s = t.params,\n        a = e.closest(\".\".concat(s.slideClass, \", swiper-slide\"));\n      var i,\n        r = !1;\n      if (a) for (var _e12 = 0; _e12 < t.slides.length; _e12 += 1) if (t.slides[_e12] === a) {\n        r = !0, i = _e12;\n        break;\n      }\n      if (!a || !r) return t.clickedSlide = void 0, void (t.clickedIndex = void 0);\n      t.clickedSlide = a, t.virtual && t.params.virtual.enabled ? t.clickedIndex = parseInt(a.getAttribute(\"data-swiper-slide-index\"), 10) : t.clickedIndex = i, s.slideToClickedSlide && void 0 !== t.clickedIndex && t.clickedIndex !== t.activeIndex && t.slideToClickedSlide();\n    }\n  };\n  var O = {\n    getTranslate: function getTranslate(e) {\n      void 0 === e && (e = this.isHorizontal() ? \"x\" : \"y\");\n      var t = this.params,\n        s = this.rtlTranslate,\n        a = this.translate,\n        i = this.wrapperEl;\n      if (t.virtualTranslate) return s ? -a : a;\n      if (t.cssMode) return a;\n      var r = o(i, e);\n      return r += this.cssOverflowAdjustment(), s && (r = -r), r || 0;\n    },\n    setTranslate: function setTranslate(e, t) {\n      var s = this,\n        a = s.rtlTranslate,\n        i = s.params,\n        r = s.wrapperEl,\n        n = s.progress;\n      var l,\n        o = 0,\n        d = 0;\n      s.isHorizontal() ? o = a ? -e : e : d = e, i.roundLengths && (o = Math.floor(o), d = Math.floor(d)), s.previousTranslate = s.translate, s.translate = s.isHorizontal() ? o : d, i.cssMode ? r[s.isHorizontal() ? \"scrollLeft\" : \"scrollTop\"] = s.isHorizontal() ? -o : -d : i.virtualTranslate || (s.isHorizontal() ? o -= s.cssOverflowAdjustment() : d -= s.cssOverflowAdjustment(), r.style.transform = \"translate3d(\".concat(o, \"px, \").concat(d, \"px, 0px)\"));\n      var c = s.maxTranslate() - s.minTranslate();\n      l = 0 === c ? 0 : (e - s.minTranslate()) / c, l !== n && s.updateProgress(e), s.emit(\"setTranslate\", s.translate, t);\n    },\n    minTranslate: function minTranslate() {\n      return -this.snapGrid[0];\n    },\n    maxTranslate: function maxTranslate() {\n      return -this.snapGrid[this.snapGrid.length - 1];\n    },\n    translateTo: function translateTo(e, t, s, a, i) {\n      void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === s && (s = !0), void 0 === a && (a = !0);\n      var r = this,\n        n = r.params,\n        l = r.wrapperEl;\n      if (r.animating && n.preventInteractionOnTransition) return !1;\n      var o = r.minTranslate(),\n        d = r.maxTranslate();\n      var c;\n      if (c = a && e > o ? o : a && e < d ? d : e, r.updateProgress(c), n.cssMode) {\n        var _e13 = r.isHorizontal();\n        if (0 === t) l[_e13 ? \"scrollLeft\" : \"scrollTop\"] = -c;else {\n          if (!r.support.smoothScroll) return m({\n            swiper: r,\n            targetPosition: -c,\n            side: _e13 ? \"left\" : \"top\"\n          }), !0;\n          l.scrollTo(_defineProperty(_defineProperty({}, _e13 ? \"left\" : \"top\", -c), \"behavior\", \"smooth\"));\n        }\n        return !0;\n      }\n      return 0 === t ? (r.setTransition(0), r.setTranslate(c), s && (r.emit(\"beforeTransitionStart\", t, i), r.emit(\"transitionEnd\"))) : (r.setTransition(t), r.setTranslate(c), s && (r.emit(\"beforeTransitionStart\", t, i), r.emit(\"transitionStart\")), r.animating || (r.animating = !0, r.onTranslateToWrapperTransitionEnd || (r.onTranslateToWrapperTransitionEnd = function (e) {\n        r && !r.destroyed && e.target === this && (r.wrapperEl.removeEventListener(\"transitionend\", r.onTranslateToWrapperTransitionEnd), r.onTranslateToWrapperTransitionEnd = null, delete r.onTranslateToWrapperTransitionEnd, s && r.emit(\"transitionEnd\"));\n      }), r.wrapperEl.addEventListener(\"transitionend\", r.onTranslateToWrapperTransitionEnd))), !0;\n    }\n  };\n  function D(e) {\n    var t = e.swiper,\n      s = e.runCallbacks,\n      a = e.direction,\n      i = e.step;\n    var r = t.activeIndex,\n      n = t.previousIndex;\n    var l = a;\n    if (l || (l = r > n ? \"next\" : r < n ? \"prev\" : \"reset\"), t.emit(\"transition\".concat(i)), s && r !== n) {\n      if (\"reset\" === l) return void t.emit(\"slideResetTransition\".concat(i));\n      t.emit(\"slideChangeTransition\".concat(i)), \"next\" === l ? t.emit(\"slideNextTransition\".concat(i)) : t.emit(\"slidePrevTransition\".concat(i));\n    }\n  }\n  var G = {\n    slideTo: function slideTo(e, t, s, a, i) {\n      void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === s && (s = !0), \"string\" == typeof e && (e = parseInt(e, 10));\n      var r = this;\n      var n = e;\n      n < 0 && (n = 0);\n      var l = r.params,\n        o = r.snapGrid,\n        d = r.slidesGrid,\n        c = r.previousIndex,\n        p = r.activeIndex,\n        u = r.rtlTranslate,\n        h = r.wrapperEl,\n        f = r.enabled;\n      if (r.animating && l.preventInteractionOnTransition || !f && !a && !i) return !1;\n      var g = Math.min(r.params.slidesPerGroupSkip, n);\n      var v = g + Math.floor((n - g) / r.params.slidesPerGroup);\n      v >= o.length && (v = o.length - 1);\n      var w = -o[v];\n      if (l.normalizeSlideIndex) for (var _e14 = 0; _e14 < d.length; _e14 += 1) {\n        var _t12 = -Math.floor(100 * w),\n          _s15 = Math.floor(100 * d[_e14]),\n          _a11 = Math.floor(100 * d[_e14 + 1]);\n        void 0 !== d[_e14 + 1] ? _t12 >= _s15 && _t12 < _a11 - (_a11 - _s15) / 2 ? n = _e14 : _t12 >= _s15 && _t12 < _a11 && (n = _e14 + 1) : _t12 >= _s15 && (n = _e14);\n      }\n      if (r.initialized && n !== p) {\n        if (!r.allowSlideNext && (u ? w > r.translate && w > r.minTranslate() : w < r.translate && w < r.minTranslate())) return !1;\n        if (!r.allowSlidePrev && w > r.translate && w > r.maxTranslate() && (p || 0) !== n) return !1;\n      }\n      var b;\n      if (n !== (c || 0) && s && r.emit(\"beforeSlideChangeStart\"), r.updateProgress(w), b = n > p ? \"next\" : n < p ? \"prev\" : \"reset\", u && -w === r.translate || !u && w === r.translate) return r.updateActiveIndex(n), l.autoHeight && r.updateAutoHeight(), r.updateSlidesClasses(), \"slide\" !== l.effect && r.setTranslate(w), \"reset\" !== b && (r.transitionStart(s, b), r.transitionEnd(s, b)), !1;\n      if (l.cssMode) {\n        var _e15 = r.isHorizontal(),\n          _s16 = u ? w : -w;\n        if (0 === t) {\n          var _t13 = r.virtual && r.params.virtual.enabled;\n          _t13 && (r.wrapperEl.style.scrollSnapType = \"none\", r._immediateVirtual = !0), _t13 && !r._cssModeVirtualInitialSet && r.params.initialSlide > 0 ? (r._cssModeVirtualInitialSet = !0, requestAnimationFrame(function () {\n            h[_e15 ? \"scrollLeft\" : \"scrollTop\"] = _s16;\n          })) : h[_e15 ? \"scrollLeft\" : \"scrollTop\"] = _s16, _t13 && requestAnimationFrame(function () {\n            r.wrapperEl.style.scrollSnapType = \"\", r._immediateVirtual = !1;\n          });\n        } else {\n          if (!r.support.smoothScroll) return m({\n            swiper: r,\n            targetPosition: _s16,\n            side: _e15 ? \"left\" : \"top\"\n          }), !0;\n          h.scrollTo(_defineProperty(_defineProperty({}, _e15 ? \"left\" : \"top\", _s16), \"behavior\", \"smooth\"));\n        }\n        return !0;\n      }\n      return r.setTransition(t), r.setTranslate(w), r.updateActiveIndex(n), r.updateSlidesClasses(), r.emit(\"beforeTransitionStart\", t, a), r.transitionStart(s, b), 0 === t ? r.transitionEnd(s, b) : r.animating || (r.animating = !0, r.onSlideToWrapperTransitionEnd || (r.onSlideToWrapperTransitionEnd = function (e) {\n        r && !r.destroyed && e.target === this && (r.wrapperEl.removeEventListener(\"transitionend\", r.onSlideToWrapperTransitionEnd), r.onSlideToWrapperTransitionEnd = null, delete r.onSlideToWrapperTransitionEnd, r.transitionEnd(s, b));\n      }), r.wrapperEl.addEventListener(\"transitionend\", r.onSlideToWrapperTransitionEnd)), !0;\n    },\n    slideToLoop: function slideToLoop(e, t, s, a) {\n      if (void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === s && (s = !0), \"string\" == typeof e) {\n        e = parseInt(e, 10);\n      }\n      var i = this;\n      var r = e;\n      return i.params.loop && (i.virtual && i.params.virtual.enabled ? r += i.virtual.slidesBefore : r = i.getSlideIndexByData(r)), i.slideTo(r, t, s, a);\n    },\n    slideNext: function slideNext(e, t, s) {\n      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);\n      var a = this,\n        i = a.enabled,\n        r = a.params,\n        n = a.animating;\n      if (!i) return a;\n      var l = r.slidesPerGroup;\n      \"auto\" === r.slidesPerView && 1 === r.slidesPerGroup && r.slidesPerGroupAuto && (l = Math.max(a.slidesPerViewDynamic(\"current\", !0), 1));\n      var o = a.activeIndex < r.slidesPerGroupSkip ? 1 : l,\n        d = a.virtual && r.virtual.enabled;\n      if (r.loop) {\n        if (n && !d && r.loopPreventsSliding) return !1;\n        a.loopFix({\n          direction: \"next\"\n        }), a._clientLeft = a.wrapperEl.clientLeft;\n      }\n      return r.rewind && a.isEnd ? a.slideTo(0, e, t, s) : a.slideTo(a.activeIndex + o, e, t, s);\n    },\n    slidePrev: function slidePrev(e, t, s) {\n      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);\n      var a = this,\n        i = a.params,\n        r = a.snapGrid,\n        n = a.slidesGrid,\n        l = a.rtlTranslate,\n        o = a.enabled,\n        d = a.animating;\n      if (!o) return a;\n      var c = a.virtual && i.virtual.enabled;\n      if (i.loop) {\n        if (d && !c && i.loopPreventsSliding) return !1;\n        a.loopFix({\n          direction: \"prev\"\n        }), a._clientLeft = a.wrapperEl.clientLeft;\n      }\n      function p(e) {\n        return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);\n      }\n      var u = p(l ? a.translate : -a.translate),\n        m = r.map(function (e) {\n          return p(e);\n        });\n      var h = r[m.indexOf(u) - 1];\n      if (void 0 === h && i.cssMode) {\n        var _e16;\n        r.forEach(function (t, s) {\n          u >= t && (_e16 = s);\n        }), void 0 !== _e16 && (h = r[_e16 > 0 ? _e16 - 1 : _e16]);\n      }\n      var f = 0;\n      if (void 0 !== h && (f = n.indexOf(h), f < 0 && (f = a.activeIndex - 1), \"auto\" === i.slidesPerView && 1 === i.slidesPerGroup && i.slidesPerGroupAuto && (f = f - a.slidesPerViewDynamic(\"previous\", !0) + 1, f = Math.max(f, 0))), i.rewind && a.isBeginning) {\n        var _i8 = a.params.virtual && a.params.virtual.enabled && a.virtual ? a.virtual.slides.length - 1 : a.slides.length - 1;\n        return a.slideTo(_i8, e, t, s);\n      }\n      return a.slideTo(f, e, t, s);\n    },\n    slideReset: function slideReset(e, t, s) {\n      return void 0 === e && (e = this.params.speed), void 0 === t && (t = !0), this.slideTo(this.activeIndex, e, t, s);\n    },\n    slideToClosest: function slideToClosest(e, t, s, a) {\n      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0), void 0 === a && (a = .5);\n      var i = this;\n      var r = i.activeIndex;\n      var n = Math.min(i.params.slidesPerGroupSkip, r),\n        l = n + Math.floor((r - n) / i.params.slidesPerGroup),\n        o = i.rtlTranslate ? i.translate : -i.translate;\n      if (o >= i.snapGrid[l]) {\n        var _e17 = i.snapGrid[l];\n        o - _e17 > (i.snapGrid[l + 1] - _e17) * a && (r += i.params.slidesPerGroup);\n      } else {\n        var _e18 = i.snapGrid[l - 1];\n        o - _e18 <= (i.snapGrid[l] - _e18) * a && (r -= i.params.slidesPerGroup);\n      }\n      return r = Math.max(r, 0), r = Math.min(r, i.slidesGrid.length - 1), i.slideTo(r, e, t, s);\n    },\n    slideToClickedSlide: function slideToClickedSlide() {\n      var e = this,\n        t = e.params,\n        s = e.slidesEl,\n        a = \"auto\" === t.slidesPerView ? e.slidesPerViewDynamic() : t.slidesPerView;\n      var i,\n        r = e.clickedIndex;\n      var l = e.isElement ? \"swiper-slide\" : \".\".concat(t.slideClass);\n      if (t.loop) {\n        if (e.animating) return;\n        i = parseInt(e.clickedSlide.getAttribute(\"data-swiper-slide-index\"), 10), t.centeredSlides ? r < e.loopedSlides - a / 2 || r > e.slides.length - e.loopedSlides + a / 2 ? (e.loopFix(), r = e.getSlideIndex(f(s, \"\".concat(l, \"[data-swiper-slide-index=\\\"\").concat(i, \"\\\"]\"))[0]), n(function () {\n          e.slideTo(r);\n        })) : e.slideTo(r) : r > e.slides.length - a ? (e.loopFix(), r = e.getSlideIndex(f(s, \"\".concat(l, \"[data-swiper-slide-index=\\\"\").concat(i, \"\\\"]\"))[0]), n(function () {\n          e.slideTo(r);\n        })) : e.slideTo(r);\n      } else e.slideTo(r);\n    }\n  };\n  var H = {\n    loopCreate: function loopCreate(e) {\n      var t = this,\n        s = t.params,\n        a = t.slidesEl;\n      if (!s.loop || t.virtual && t.params.virtual.enabled) return;\n      f(a, \".\".concat(s.slideClass, \", swiper-slide\")).forEach(function (e, t) {\n        e.setAttribute(\"data-swiper-slide-index\", t);\n      }), t.loopFix({\n        slideRealIndex: e,\n        direction: s.centeredSlides ? void 0 : \"next\"\n      });\n    },\n    loopFix: function loopFix(e) {\n      var _ref2 = void 0 === e ? {} : e,\n        t = _ref2.slideRealIndex,\n        _ref2$slideTo = _ref2.slideTo,\n        s = _ref2$slideTo === void 0 ? !0 : _ref2$slideTo,\n        a = _ref2.direction,\n        i = _ref2.setTranslate,\n        r = _ref2.activeSlideIndex,\n        n = _ref2.byController,\n        l = _ref2.byMousewheel;\n      var o = this;\n      if (!o.params.loop) return;\n      o.emit(\"beforeLoopFix\");\n      var d = o.slides,\n        c = o.allowSlidePrev,\n        p = o.allowSlideNext,\n        u = o.slidesEl,\n        m = o.params;\n      if (o.allowSlidePrev = !0, o.allowSlideNext = !0, o.virtual && m.virtual.enabled) return s && (m.centeredSlides || 0 !== o.snapIndex ? m.centeredSlides && o.snapIndex < m.slidesPerView ? o.slideTo(o.virtual.slides.length + o.snapIndex, 0, !1, !0) : o.snapIndex === o.snapGrid.length - 1 && o.slideTo(o.virtual.slidesBefore, 0, !1, !0) : o.slideTo(o.virtual.slides.length, 0, !1, !0)), o.allowSlidePrev = c, o.allowSlideNext = p, void o.emit(\"loopFix\");\n      var h = \"auto\" === m.slidesPerView ? o.slidesPerViewDynamic() : Math.ceil(parseFloat(m.slidesPerView, 10));\n      var f = m.loopedSlides || h;\n      f % m.slidesPerGroup != 0 && (f += m.slidesPerGroup - f % m.slidesPerGroup), o.loopedSlides = f;\n      var g = [],\n        v = [];\n      var w = o.activeIndex;\n      void 0 === r ? r = o.getSlideIndex(o.slides.filter(function (e) {\n        return e.classList.contains(m.slideActiveClass);\n      })[0]) : w = r;\n      var b = \"next\" === a || !a,\n        y = \"prev\" === a || !a;\n      var E = 0,\n        x = 0;\n      if (r < f) {\n        E = Math.max(f - r, m.slidesPerGroup);\n        for (var _e19 = 0; _e19 < f - r; _e19 += 1) {\n          var _t14 = _e19 - Math.floor(_e19 / d.length) * d.length;\n          g.push(d.length - _t14 - 1);\n        }\n      } else if (r > o.slides.length - 2 * f) {\n        x = Math.max(r - (o.slides.length - 2 * f), m.slidesPerGroup);\n        for (var _e20 = 0; _e20 < x; _e20 += 1) {\n          var _t15 = _e20 - Math.floor(_e20 / d.length) * d.length;\n          v.push(_t15);\n        }\n      }\n      if (y && g.forEach(function (e) {\n        o.slides[e].swiperLoopMoveDOM = !0, u.prepend(o.slides[e]), o.slides[e].swiperLoopMoveDOM = !1;\n      }), b && v.forEach(function (e) {\n        o.slides[e].swiperLoopMoveDOM = !0, u.append(o.slides[e]), o.slides[e].swiperLoopMoveDOM = !1;\n      }), o.recalcSlides(), \"auto\" === m.slidesPerView && o.updateSlides(), m.watchSlidesProgress && o.updateSlidesOffset(), s) if (g.length > 0 && y) {\n        if (void 0 === t) {\n          var _e21 = o.slidesGrid[w],\n            _t16 = o.slidesGrid[w + E] - _e21;\n          l ? o.setTranslate(o.translate - _t16) : (o.slideTo(w + E, 0, !1, !0), i && (o.touches[o.isHorizontal() ? \"startX\" : \"startY\"] += _t16));\n        } else i && o.slideToLoop(t, 0, !1, !0);\n      } else if (v.length > 0 && b) if (void 0 === t) {\n        var _e22 = o.slidesGrid[w],\n          _t17 = o.slidesGrid[w - x] - _e22;\n        l ? o.setTranslate(o.translate - _t17) : (o.slideTo(w - x, 0, !1, !0), i && (o.touches[o.isHorizontal() ? \"startX\" : \"startY\"] += _t17));\n      } else o.slideToLoop(t, 0, !1, !0);\n      if (o.allowSlidePrev = c, o.allowSlideNext = p, o.controller && o.controller.control && !n) {\n        var _e23 = {\n          slideRealIndex: t,\n          slideTo: !1,\n          direction: a,\n          setTranslate: i,\n          activeSlideIndex: r,\n          byController: !0\n        };\n        Array.isArray(o.controller.control) ? o.controller.control.forEach(function (t) {\n          !t.destroyed && t.params.loop && t.loopFix(_e23);\n        }) : o.controller.control instanceof o.constructor && o.controller.control.params.loop && o.controller.control.loopFix(_e23);\n      }\n      o.emit(\"loopFix\");\n    },\n    loopDestroy: function loopDestroy() {\n      var e = this,\n        t = e.params,\n        s = e.slidesEl;\n      if (!t.loop || e.virtual && e.params.virtual.enabled) return;\n      e.recalcSlides();\n      var a = [];\n      e.slides.forEach(function (e) {\n        var t = void 0 === e.swiperSlideIndex ? 1 * e.getAttribute(\"data-swiper-slide-index\") : e.swiperSlideIndex;\n        a[t] = e;\n      }), e.slides.forEach(function (e) {\n        e.removeAttribute(\"data-swiper-slide-index\");\n      }), a.forEach(function (e) {\n        s.append(e);\n      }), e.recalcSlides(), e.slideTo(e.realIndex, 0);\n    }\n  };\n  function X(e) {\n    var t = this,\n      s = a(),\n      i = r(),\n      n = t.touchEventsData;\n    n.evCache.push(e);\n    var o = t.params,\n      d = t.touches,\n      c = t.enabled;\n    if (!c) return;\n    if (!o.simulateTouch && \"mouse\" === e.pointerType) return;\n    if (t.animating && o.preventInteractionOnTransition) return;\n    !t.animating && o.cssMode && o.loop && t.loopFix();\n    var p = e;\n    p.originalEvent && (p = p.originalEvent);\n    var u = p.target;\n    if (\"wrapper\" === o.touchEventsTarget && !t.wrapperEl.contains(u)) return;\n    if (\"which\" in p && 3 === p.which) return;\n    if (\"button\" in p && p.button > 0) return;\n    if (n.isTouched && n.isMoved) return;\n    var m = !!o.noSwipingClass && \"\" !== o.noSwipingClass,\n      h = e.composedPath ? e.composedPath() : e.path;\n    m && p.target && p.target.shadowRoot && h && (u = h[0]);\n    var f = o.noSwipingSelector ? o.noSwipingSelector : \".\".concat(o.noSwipingClass),\n      g = !(!p.target || !p.target.shadowRoot);\n    if (o.noSwiping && (g ? function (e, t) {\n      return void 0 === t && (t = this), function t(s) {\n        if (!s || s === a() || s === r()) return null;\n        s.assignedSlot && (s = s.assignedSlot);\n        var i = s.closest(e);\n        return i || s.getRootNode ? i || t(s.getRootNode().host) : null;\n      }(t);\n    }(f, u) : u.closest(f))) return void (t.allowClick = !0);\n    if (o.swipeHandler && !u.closest(o.swipeHandler)) return;\n    d.currentX = p.pageX, d.currentY = p.pageY;\n    var v = d.currentX,\n      w = d.currentY,\n      b = o.edgeSwipeDetection || o.iOSEdgeSwipeDetection,\n      y = o.edgeSwipeThreshold || o.iOSEdgeSwipeThreshold;\n    if (b && (v <= y || v >= i.innerWidth - y)) {\n      if (\"prevent\" !== b) return;\n      e.preventDefault();\n    }\n    Object.assign(n, {\n      isTouched: !0,\n      isMoved: !1,\n      allowTouchCallbacks: !0,\n      isScrolling: void 0,\n      startMoving: void 0\n    }), d.startX = v, d.startY = w, n.touchStartTime = l(), t.allowClick = !0, t.updateSize(), t.swipeDirection = void 0, o.threshold > 0 && (n.allowThresholdMove = !1);\n    var E = !0;\n    u.matches(n.focusableElements) && (E = !1, \"SELECT\" === u.nodeName && (n.isTouched = !1)), s.activeElement && s.activeElement.matches(n.focusableElements) && s.activeElement !== u && s.activeElement.blur();\n    var x = E && t.allowTouchMove && o.touchStartPreventDefault;\n    !o.touchStartForcePreventDefault && !x || u.isContentEditable || p.preventDefault(), o.freeMode && o.freeMode.enabled && t.freeMode && t.animating && !o.cssMode && t.freeMode.onTouchStart(), t.emit(\"touchStart\", p);\n  }\n  function Y(e) {\n    var t = a(),\n      s = this,\n      i = s.touchEventsData,\n      r = s.params,\n      n = s.touches,\n      o = s.rtlTranslate,\n      d = s.enabled;\n    if (!d) return;\n    if (!r.simulateTouch && \"mouse\" === e.pointerType) return;\n    var c = e;\n    if (c.originalEvent && (c = c.originalEvent), !i.isTouched) return void (i.startMoving && i.isScrolling && s.emit(\"touchMoveOpposite\", c));\n    var p = i.evCache.findIndex(function (e) {\n      return e.pointerId === c.pointerId;\n    });\n    p >= 0 && (i.evCache[p] = c);\n    var u = i.evCache.length > 1 ? i.evCache[0] : c,\n      m = u.pageX,\n      h = u.pageY;\n    if (c.preventedByNestedSwiper) return n.startX = m, void (n.startY = h);\n    if (!s.allowTouchMove) return c.target.matches(i.focusableElements) || (s.allowClick = !1), void (i.isTouched && (Object.assign(n, {\n      startX: m,\n      startY: h,\n      prevX: s.touches.currentX,\n      prevY: s.touches.currentY,\n      currentX: m,\n      currentY: h\n    }), i.touchStartTime = l()));\n    if (r.touchReleaseOnEdges && !r.loop) if (s.isVertical()) {\n      if (h < n.startY && s.translate <= s.maxTranslate() || h > n.startY && s.translate >= s.minTranslate()) return i.isTouched = !1, void (i.isMoved = !1);\n    } else if (m < n.startX && s.translate <= s.maxTranslate() || m > n.startX && s.translate >= s.minTranslate()) return;\n    if (t.activeElement && c.target === t.activeElement && c.target.matches(i.focusableElements)) return i.isMoved = !0, void (s.allowClick = !1);\n    if (i.allowTouchCallbacks && s.emit(\"touchMove\", c), c.targetTouches && c.targetTouches.length > 1) return;\n    n.currentX = m, n.currentY = h;\n    var f = n.currentX - n.startX,\n      g = n.currentY - n.startY;\n    if (s.params.threshold && Math.sqrt(Math.pow(f, 2) + Math.pow(g, 2)) < s.params.threshold) return;\n    if (void 0 === i.isScrolling) {\n      var _e24;\n      s.isHorizontal() && n.currentY === n.startY || s.isVertical() && n.currentX === n.startX ? i.isScrolling = !1 : f * f + g * g >= 25 && (_e24 = 180 * Math.atan2(Math.abs(g), Math.abs(f)) / Math.PI, i.isScrolling = s.isHorizontal() ? _e24 > r.touchAngle : 90 - _e24 > r.touchAngle);\n    }\n    if (i.isScrolling && s.emit(\"touchMoveOpposite\", c), void 0 === i.startMoving && (n.currentX === n.startX && n.currentY === n.startY || (i.startMoving = !0)), i.isScrolling || s.zoom && s.params.zoom && s.params.zoom.enabled && i.evCache.length > 1) return void (i.isTouched = !1);\n    if (!i.startMoving) return;\n    s.allowClick = !1, !r.cssMode && c.cancelable && c.preventDefault(), r.touchMoveStopPropagation && !r.nested && c.stopPropagation();\n    var v = s.isHorizontal() ? f : g,\n      w = s.isHorizontal() ? n.currentX - n.previousX : n.currentY - n.previousY;\n    r.oneWayMovement && (v = Math.abs(v) * (o ? 1 : -1), w = Math.abs(w) * (o ? 1 : -1)), n.diff = v, v *= r.touchRatio, o && (v = -v, w = -w);\n    var b = s.touchesDirection;\n    s.swipeDirection = v > 0 ? \"prev\" : \"next\", s.touchesDirection = w > 0 ? \"prev\" : \"next\";\n    var y = s.params.loop && !r.cssMode;\n    if (!i.isMoved) {\n      if (y && s.loopFix({\n        direction: s.swipeDirection\n      }), i.startTranslate = s.getTranslate(), s.setTransition(0), s.animating) {\n        var _e25 = new window.CustomEvent(\"transitionend\", {\n          bubbles: !0,\n          cancelable: !0\n        });\n        s.wrapperEl.dispatchEvent(_e25);\n      }\n      i.allowMomentumBounce = !1, !r.grabCursor || !0 !== s.allowSlideNext && !0 !== s.allowSlidePrev || s.setGrabCursor(!0), s.emit(\"sliderFirstMove\", c);\n    }\n    var E;\n    i.isMoved && b !== s.touchesDirection && y && Math.abs(v) >= 1 && (s.loopFix({\n      direction: s.swipeDirection,\n      setTranslate: !0\n    }), E = !0), s.emit(\"sliderMove\", c), i.isMoved = !0, i.currentTranslate = v + i.startTranslate;\n    var x = !0,\n      S = r.resistanceRatio;\n    if (r.touchReleaseOnEdges && (S = 0), v > 0 ? (y && !E && i.currentTranslate > (r.centeredSlides ? s.minTranslate() - s.size / 2 : s.minTranslate()) && s.loopFix({\n      direction: \"prev\",\n      setTranslate: !0,\n      activeSlideIndex: 0\n    }), i.currentTranslate > s.minTranslate() && (x = !1, r.resistance && (i.currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + i.startTranslate + v, S)))) : v < 0 && (y && !E && i.currentTranslate < (r.centeredSlides ? s.maxTranslate() + s.size / 2 : s.maxTranslate()) && s.loopFix({\n      direction: \"next\",\n      setTranslate: !0,\n      activeSlideIndex: s.slides.length - (\"auto\" === r.slidesPerView ? s.slidesPerViewDynamic() : Math.ceil(parseFloat(r.slidesPerView, 10)))\n    }), i.currentTranslate < s.maxTranslate() && (x = !1, r.resistance && (i.currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - i.startTranslate - v, S)))), x && (c.preventedByNestedSwiper = !0), !s.allowSlideNext && \"next\" === s.swipeDirection && i.currentTranslate < i.startTranslate && (i.currentTranslate = i.startTranslate), !s.allowSlidePrev && \"prev\" === s.swipeDirection && i.currentTranslate > i.startTranslate && (i.currentTranslate = i.startTranslate), s.allowSlidePrev || s.allowSlideNext || (i.currentTranslate = i.startTranslate), r.threshold > 0) {\n      if (!(Math.abs(v) > r.threshold || i.allowThresholdMove)) return void (i.currentTranslate = i.startTranslate);\n      if (!i.allowThresholdMove) return i.allowThresholdMove = !0, n.startX = n.currentX, n.startY = n.currentY, i.currentTranslate = i.startTranslate, void (n.diff = s.isHorizontal() ? n.currentX - n.startX : n.currentY - n.startY);\n    }\n    r.followFinger && !r.cssMode && ((r.freeMode && r.freeMode.enabled && s.freeMode || r.watchSlidesProgress) && (s.updateActiveIndex(), s.updateSlidesClasses()), r.freeMode && r.freeMode.enabled && s.freeMode && s.freeMode.onTouchMove(), s.updateProgress(i.currentTranslate), s.setTranslate(i.currentTranslate));\n  }\n  function B(e) {\n    var t = this,\n      s = t.touchEventsData,\n      a = s.evCache.findIndex(function (t) {\n        return t.pointerId === e.pointerId;\n      });\n    if (a >= 0 && s.evCache.splice(a, 1), [\"pointercancel\", \"pointerout\", \"pointerleave\"].includes(e.type)) {\n      if (!(\"pointercancel\" === e.type && (t.browser.isSafari || t.browser.isWebView))) return;\n    }\n    var i = t.params,\n      r = t.touches,\n      o = t.rtlTranslate,\n      d = t.slidesGrid,\n      c = t.enabled;\n    if (!c) return;\n    if (!i.simulateTouch && \"mouse\" === e.pointerType) return;\n    var p = e;\n    if (p.originalEvent && (p = p.originalEvent), s.allowTouchCallbacks && t.emit(\"touchEnd\", p), s.allowTouchCallbacks = !1, !s.isTouched) return s.isMoved && i.grabCursor && t.setGrabCursor(!1), s.isMoved = !1, void (s.startMoving = !1);\n    i.grabCursor && s.isMoved && s.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);\n    var u = l(),\n      m = u - s.touchStartTime;\n    if (t.allowClick) {\n      var _e26 = p.path || p.composedPath && p.composedPath();\n      t.updateClickedSlide(_e26 && _e26[0] || p.target), t.emit(\"tap click\", p), m < 300 && u - s.lastClickTime < 300 && t.emit(\"doubleTap doubleClick\", p);\n    }\n    if (s.lastClickTime = l(), n(function () {\n      t.destroyed || (t.allowClick = !0);\n    }), !s.isTouched || !s.isMoved || !t.swipeDirection || 0 === r.diff || s.currentTranslate === s.startTranslate) return s.isTouched = !1, s.isMoved = !1, void (s.startMoving = !1);\n    var h;\n    if (s.isTouched = !1, s.isMoved = !1, s.startMoving = !1, h = i.followFinger ? o ? t.translate : -t.translate : -s.currentTranslate, i.cssMode) return;\n    if (i.freeMode && i.freeMode.enabled) return void t.freeMode.onTouchEnd({\n      currentPos: h\n    });\n    var f = 0,\n      g = t.slidesSizesGrid[0];\n    for (var _e27 = 0; _e27 < d.length; _e27 += _e27 < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup) {\n      var _t18 = _e27 < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;\n      void 0 !== d[_e27 + _t18] ? h >= d[_e27] && h < d[_e27 + _t18] && (f = _e27, g = d[_e27 + _t18] - d[_e27]) : h >= d[_e27] && (f = _e27, g = d[d.length - 1] - d[d.length - 2]);\n    }\n    var v = null,\n      w = null;\n    i.rewind && (t.isBeginning ? w = i.virtual && i.virtual.enabled && t.virtual ? t.virtual.slides.length - 1 : t.slides.length - 1 : t.isEnd && (v = 0));\n    var b = (h - d[f]) / g,\n      y = f < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;\n    if (m > i.longSwipesMs) {\n      if (!i.longSwipes) return void t.slideTo(t.activeIndex);\n      \"next\" === t.swipeDirection && (b >= i.longSwipesRatio ? t.slideTo(i.rewind && t.isEnd ? v : f + y) : t.slideTo(f)), \"prev\" === t.swipeDirection && (b > 1 - i.longSwipesRatio ? t.slideTo(f + y) : null !== w && b < 0 && Math.abs(b) > i.longSwipesRatio ? t.slideTo(w) : t.slideTo(f));\n    } else {\n      if (!i.shortSwipes) return void t.slideTo(t.activeIndex);\n      t.navigation && (p.target === t.navigation.nextEl || p.target === t.navigation.prevEl) ? p.target === t.navigation.nextEl ? t.slideTo(f + y) : t.slideTo(f) : (\"next\" === t.swipeDirection && t.slideTo(null !== v ? v : f + y), \"prev\" === t.swipeDirection && t.slideTo(null !== w ? w : f));\n    }\n  }\n  function N() {\n    var e = this,\n      t = e.params,\n      s = e.el;\n    if (s && 0 === s.offsetWidth) return;\n    t.breakpoints && e.setBreakpoint();\n    var a = e.allowSlideNext,\n      i = e.allowSlidePrev,\n      r = e.snapGrid,\n      n = e.virtual && e.params.virtual.enabled;\n    e.allowSlideNext = !0, e.allowSlidePrev = !0, e.updateSize(), e.updateSlides(), e.updateSlidesClasses();\n    var l = n && t.loop;\n    !(\"auto\" === t.slidesPerView || t.slidesPerView > 1) || !e.isEnd || e.isBeginning || e.params.centeredSlides || l ? e.params.loop && !n ? e.slideToLoop(e.realIndex, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0) : e.slideTo(e.slides.length - 1, 0, !1, !0), e.autoplay && e.autoplay.running && e.autoplay.paused && (clearTimeout(e.autoplay.resizeTimeout), e.autoplay.resizeTimeout = setTimeout(function () {\n      e.autoplay && e.autoplay.running && e.autoplay.paused && e.autoplay.resume();\n    }, 500)), e.allowSlidePrev = i, e.allowSlideNext = a, e.params.watchOverflow && r !== e.snapGrid && e.checkOverflow();\n  }\n  function q(e) {\n    var t = this;\n    t.enabled && (t.allowClick || (t.params.preventClicks && e.preventDefault(), t.params.preventClicksPropagation && t.animating && (e.stopPropagation(), e.stopImmediatePropagation())));\n  }\n  function R() {\n    var e = this,\n      t = e.wrapperEl,\n      s = e.rtlTranslate,\n      a = e.enabled;\n    if (!a) return;\n    var i;\n    e.previousTranslate = e.translate, e.isHorizontal() ? e.translate = -t.scrollLeft : e.translate = -t.scrollTop, 0 === e.translate && (e.translate = 0), e.updateActiveIndex(), e.updateSlidesClasses();\n    var r = e.maxTranslate() - e.minTranslate();\n    i = 0 === r ? 0 : (e.translate - e.minTranslate()) / r, i !== e.progress && e.updateProgress(s ? -e.translate : e.translate), e.emit(\"setTranslate\", e.translate, !1);\n  }\n  function F(e) {\n    var t = this;\n    A(t, e.target), t.params.cssMode || \"auto\" !== t.params.slidesPerView && !t.params.autoHeight || t.update();\n  }\n  var _ = !1;\n  function V() {}\n  var j = function j(e, t) {\n    var s = a(),\n      i = e.params,\n      r = e.el,\n      n = e.wrapperEl,\n      l = e.device,\n      o = !!i.nested,\n      d = \"on\" === t ? \"addEventListener\" : \"removeEventListener\",\n      c = t;\n    r[d](\"pointerdown\", e.onTouchStart, {\n      passive: !1\n    }), s[d](\"pointermove\", e.onTouchMove, {\n      passive: !1,\n      capture: o\n    }), s[d](\"pointerup\", e.onTouchEnd, {\n      passive: !0\n    }), s[d](\"pointercancel\", e.onTouchEnd, {\n      passive: !0\n    }), s[d](\"pointerout\", e.onTouchEnd, {\n      passive: !0\n    }), s[d](\"pointerleave\", e.onTouchEnd, {\n      passive: !0\n    }), (i.preventClicks || i.preventClicksPropagation) && r[d](\"click\", e.onClick, !0), i.cssMode && n[d](\"scroll\", e.onScroll), i.updateOnWindowResize ? e[c](l.ios || l.android ? \"resize orientationchange observerUpdate\" : \"resize observerUpdate\", N, !0) : e[c](\"observerUpdate\", N, !0), r[d](\"load\", e.onLoad, {\n      capture: !0\n    });\n  };\n  var W = function W(e, t) {\n    return e.grid && t.grid && t.grid.rows > 1;\n  };\n  var U = {\n    init: !0,\n    direction: \"horizontal\",\n    oneWayMovement: !1,\n    touchEventsTarget: \"wrapper\",\n    initialSlide: 0,\n    speed: 300,\n    cssMode: !1,\n    updateOnWindowResize: !0,\n    resizeObserver: !0,\n    nested: !1,\n    createElements: !1,\n    enabled: !0,\n    focusableElements: \"input, select, option, textarea, button, video, label\",\n    width: null,\n    height: null,\n    preventInteractionOnTransition: !1,\n    userAgent: null,\n    url: null,\n    edgeSwipeDetection: !1,\n    edgeSwipeThreshold: 20,\n    autoHeight: !1,\n    setWrapperSize: !1,\n    virtualTranslate: !1,\n    effect: \"slide\",\n    breakpoints: void 0,\n    breakpointsBase: \"window\",\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    slidesPerGroupAuto: !1,\n    centeredSlides: !1,\n    centeredSlidesBounds: !1,\n    slidesOffsetBefore: 0,\n    slidesOffsetAfter: 0,\n    normalizeSlideIndex: !0,\n    centerInsufficientSlides: !1,\n    watchOverflow: !0,\n    roundLengths: !1,\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: !0,\n    shortSwipes: !0,\n    longSwipes: !0,\n    longSwipesRatio: .5,\n    longSwipesMs: 300,\n    followFinger: !0,\n    allowTouchMove: !0,\n    threshold: 5,\n    touchMoveStopPropagation: !1,\n    touchStartPreventDefault: !0,\n    touchStartForcePreventDefault: !1,\n    touchReleaseOnEdges: !1,\n    uniqueNavElements: !0,\n    resistance: !0,\n    resistanceRatio: .85,\n    watchSlidesProgress: !1,\n    grabCursor: !1,\n    preventClicks: !0,\n    preventClicksPropagation: !0,\n    slideToClickedSlide: !1,\n    loop: !1,\n    loopedSlides: null,\n    loopPreventsSliding: !0,\n    rewind: !1,\n    allowSlidePrev: !0,\n    allowSlideNext: !0,\n    swipeHandler: null,\n    noSwiping: !0,\n    noSwipingClass: \"swiper-no-swiping\",\n    noSwipingSelector: null,\n    passiveListeners: !0,\n    maxBackfaceHiddenSlides: 10,\n    containerModifierClass: \"swiper-\",\n    slideClass: \"swiper-slide\",\n    slideActiveClass: \"swiper-slide-active\",\n    slideVisibleClass: \"swiper-slide-visible\",\n    slideNextClass: \"swiper-slide-next\",\n    slidePrevClass: \"swiper-slide-prev\",\n    wrapperClass: \"swiper-wrapper\",\n    lazyPreloaderClass: \"swiper-lazy-preloader\",\n    lazyPreloadPrevNext: 0,\n    runCallbacksOnInit: !0,\n    _emitClasses: !1\n  };\n  function K(e, t) {\n    return function (s) {\n      void 0 === s && (s = {});\n      var a = Object.keys(s)[0],\n        i = s[a];\n      \"object\" == _typeof(i) && null !== i ? ([\"navigation\", \"pagination\", \"scrollbar\"].indexOf(a) >= 0 && !0 === e[a] && (e[a] = {\n        auto: !0\n      }), a in e && \"enabled\" in i ? (!0 === e[a] && (e[a] = {\n        enabled: !0\n      }), \"object\" != _typeof(e[a]) || \"enabled\" in e[a] || (e[a].enabled = !0), e[a] || (e[a] = {\n        enabled: !1\n      }), p(t, s)) : p(t, s)) : p(t, s);\n    };\n  }\n  var Z = {\n      eventsEmitter: z,\n      update: k,\n      translate: O,\n      transition: {\n        setTransition: function setTransition(e, t) {\n          var s = this;\n          s.params.cssMode || (s.wrapperEl.style.transitionDuration = \"\".concat(e, \"ms\")), s.emit(\"setTransition\", e, t);\n        },\n        transitionStart: function transitionStart(e, t) {\n          void 0 === e && (e = !0);\n          var s = this,\n            a = s.params;\n          a.cssMode || (a.autoHeight && s.updateAutoHeight(), D({\n            swiper: s,\n            runCallbacks: e,\n            direction: t,\n            step: \"Start\"\n          }));\n        },\n        transitionEnd: function transitionEnd(e, t) {\n          void 0 === e && (e = !0);\n          var s = this,\n            a = s.params;\n          s.animating = !1, a.cssMode || (s.setTransition(0), D({\n            swiper: s,\n            runCallbacks: e,\n            direction: t,\n            step: \"End\"\n          }));\n        }\n      },\n      slide: G,\n      loop: H,\n      grabCursor: {\n        setGrabCursor: function setGrabCursor(e) {\n          var t = this;\n          if (!t.params.simulateTouch || t.params.watchOverflow && t.isLocked || t.params.cssMode) return;\n          var s = \"container\" === t.params.touchEventsTarget ? t.el : t.wrapperEl;\n          t.isElement && (t.__preventObserver__ = !0), s.style.cursor = \"move\", s.style.cursor = e ? \"grabbing\" : \"grab\", t.isElement && requestAnimationFrame(function () {\n            t.__preventObserver__ = !1;\n          });\n        },\n        unsetGrabCursor: function unsetGrabCursor() {\n          var e = this;\n          e.params.watchOverflow && e.isLocked || e.params.cssMode || (e.isElement && (e.__preventObserver__ = !0), e[\"container\" === e.params.touchEventsTarget ? \"el\" : \"wrapperEl\"].style.cursor = \"\", e.isElement && requestAnimationFrame(function () {\n            e.__preventObserver__ = !1;\n          }));\n        }\n      },\n      events: {\n        attachEvents: function attachEvents() {\n          var e = this,\n            t = a(),\n            s = e.params;\n          e.onTouchStart = X.bind(e), e.onTouchMove = Y.bind(e), e.onTouchEnd = B.bind(e), s.cssMode && (e.onScroll = R.bind(e)), e.onClick = q.bind(e), e.onLoad = F.bind(e), _ || (t.addEventListener(\"touchstart\", V), _ = !0), j(e, \"on\");\n        },\n        detachEvents: function detachEvents() {\n          j(this, \"off\");\n        }\n      },\n      breakpoints: {\n        setBreakpoint: function setBreakpoint() {\n          var e = this,\n            t = e.realIndex,\n            s = e.initialized,\n            a = e.params,\n            i = e.el,\n            r = a.breakpoints;\n          if (!r || r && 0 === Object.keys(r).length) return;\n          var n = e.getBreakpoint(r, e.params.breakpointsBase, e.el);\n          if (!n || e.currentBreakpoint === n) return;\n          var l = (n in r ? r[n] : void 0) || e.originalParams,\n            o = W(e, a),\n            d = W(e, l),\n            c = a.enabled;\n          o && !d ? (i.classList.remove(\"\".concat(a.containerModifierClass, \"grid\"), \"\".concat(a.containerModifierClass, \"grid-column\")), e.emitContainerClasses()) : !o && d && (i.classList.add(\"\".concat(a.containerModifierClass, \"grid\")), (l.grid.fill && \"column\" === l.grid.fill || !l.grid.fill && \"column\" === a.grid.fill) && i.classList.add(\"\".concat(a.containerModifierClass, \"grid-column\")), e.emitContainerClasses()), [\"navigation\", \"pagination\", \"scrollbar\"].forEach(function (t) {\n            if (void 0 === l[t]) return;\n            var s = a[t] && a[t].enabled,\n              i = l[t] && l[t].enabled;\n            s && !i && e[t].disable(), !s && i && e[t].enable();\n          });\n          var u = l.direction && l.direction !== a.direction,\n            m = a.loop && (l.slidesPerView !== a.slidesPerView || u);\n          u && s && e.changeDirection(), p(e.params, l);\n          var h = e.params.enabled;\n          Object.assign(e, {\n            allowTouchMove: e.params.allowTouchMove,\n            allowSlideNext: e.params.allowSlideNext,\n            allowSlidePrev: e.params.allowSlidePrev\n          }), c && !h ? e.disable() : !c && h && e.enable(), e.currentBreakpoint = n, e.emit(\"_beforeBreakpoint\", l), m && s && (e.loopDestroy(), e.loopCreate(t), e.updateSlides()), e.emit(\"breakpoint\", l);\n        },\n        getBreakpoint: function getBreakpoint(e, t, s) {\n          if (void 0 === t && (t = \"window\"), !e || \"container\" === t && !s) return;\n          var a = !1;\n          var i = r(),\n            n = \"window\" === t ? i.innerHeight : s.clientHeight,\n            l = Object.keys(e).map(function (e) {\n              if (\"string\" == typeof e && 0 === e.indexOf(\"@\")) {\n                var _t19 = parseFloat(e.substr(1));\n                return {\n                  value: n * _t19,\n                  point: e\n                };\n              }\n              return {\n                value: e,\n                point: e\n              };\n            });\n          l.sort(function (e, t) {\n            return parseInt(e.value, 10) - parseInt(t.value, 10);\n          });\n          for (var _e28 = 0; _e28 < l.length; _e28 += 1) {\n            var _l$_e = l[_e28],\n              _r6 = _l$_e.point,\n              _n4 = _l$_e.value;\n            \"window\" === t ? i.matchMedia(\"(min-width: \".concat(_n4, \"px)\")).matches && (a = _r6) : _n4 <= s.clientWidth && (a = _r6);\n          }\n          return a || \"max\";\n        }\n      },\n      checkOverflow: {\n        checkOverflow: function checkOverflow() {\n          var e = this,\n            t = e.isLocked,\n            s = e.params,\n            a = s.slidesOffsetBefore;\n          if (a) {\n            var _t20 = e.slides.length - 1,\n              _s17 = e.slidesGrid[_t20] + e.slidesSizesGrid[_t20] + 2 * a;\n            e.isLocked = e.size > _s17;\n          } else e.isLocked = 1 === e.snapGrid.length;\n          !0 === s.allowSlideNext && (e.allowSlideNext = !e.isLocked), !0 === s.allowSlidePrev && (e.allowSlidePrev = !e.isLocked), t && t !== e.isLocked && (e.isEnd = !1), t !== e.isLocked && e.emit(e.isLocked ? \"lock\" : \"unlock\");\n        }\n      },\n      classes: {\n        addClasses: function addClasses() {\n          var _i$classList;\n          var e = this,\n            t = e.classNames,\n            s = e.params,\n            a = e.rtl,\n            i = e.el,\n            r = e.device,\n            n = function (e, t) {\n              var s = [];\n              return e.forEach(function (e) {\n                \"object\" == _typeof(e) ? Object.keys(e).forEach(function (a) {\n                  e[a] && s.push(t + a);\n                }) : \"string\" == typeof e && s.push(t + e);\n              }), s;\n            }([\"initialized\", s.direction, {\n              \"free-mode\": e.params.freeMode && s.freeMode.enabled\n            }, {\n              autoheight: s.autoHeight\n            }, {\n              rtl: a\n            }, {\n              grid: s.grid && s.grid.rows > 1\n            }, {\n              \"grid-column\": s.grid && s.grid.rows > 1 && \"column\" === s.grid.fill\n            }, {\n              android: r.android\n            }, {\n              ios: r.ios\n            }, {\n              \"css-mode\": s.cssMode\n            }, {\n              centered: s.cssMode && s.centeredSlides\n            }, {\n              \"watch-progress\": s.watchSlidesProgress\n            }], s.containerModifierClass);\n          t.push.apply(t, _toConsumableArray(n)), (_i$classList = i.classList).add.apply(_i$classList, _toConsumableArray(t)), e.emitContainerClasses();\n        },\n        removeClasses: function removeClasses() {\n          var _e$classList;\n          var e = this.el,\n            t = this.classNames;\n          (_e$classList = e.classList).remove.apply(_e$classList, _toConsumableArray(t)), this.emitContainerClasses();\n        }\n      }\n    },\n    Q = {};\n  var J = /*#__PURE__*/function () {\n    function J() {\n      var _i9, _i10, _l$modules;\n      _classCallCheck(this, J);\n      var e, t;\n      for (var s = arguments.length, i = new Array(s), r = 0; r < s; r++) i[r] = arguments[r];\n      1 === i.length && i[0].constructor && \"Object\" === Object.prototype.toString.call(i[0]).slice(8, -1) ? t = i[0] : (_i9 = i, _i10 = _slicedToArray(_i9, 2), e = _i10[0], t = _i10[1], _i9), t || (t = {}), t = p({}, t), e && !t.el && (t.el = e);\n      var n = a();\n      if (t.el && \"string\" == typeof t.el && n.querySelectorAll(t.el).length > 1) {\n        var _e29 = [];\n        return n.querySelectorAll(t.el).forEach(function (s) {\n          var a = p({}, t, {\n            el: s\n          });\n          _e29.push(new J(a));\n        }), _e29;\n      }\n      var l = this;\n      l.__swiper__ = !0, l.support = C(), l.device = P({\n        userAgent: t.userAgent\n      }), l.browser = L(), l.eventsListeners = {}, l.eventsAnyListeners = [], l.modules = _toConsumableArray(l.__modules__), t.modules && Array.isArray(t.modules) && (_l$modules = l.modules).push.apply(_l$modules, _toConsumableArray(t.modules));\n      var o = {};\n      l.modules.forEach(function (e) {\n        e({\n          params: t,\n          swiper: l,\n          extendParams: K(t, o),\n          on: l.on.bind(l),\n          once: l.once.bind(l),\n          off: l.off.bind(l),\n          emit: l.emit.bind(l)\n        });\n      });\n      var d = p({}, U, o);\n      return l.params = p({}, d, Q, t), l.originalParams = p({}, l.params), l.passedParams = p({}, t), l.params && l.params.on && Object.keys(l.params.on).forEach(function (e) {\n        l.on(e, l.params.on[e]);\n      }), l.params && l.params.onAny && l.onAny(l.params.onAny), Object.assign(l, {\n        enabled: l.params.enabled,\n        el: e,\n        classNames: [],\n        slides: [],\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n        isHorizontal: function isHorizontal() {\n          return \"horizontal\" === l.params.direction;\n        },\n        isVertical: function isVertical() {\n          return \"vertical\" === l.params.direction;\n        },\n        activeIndex: 0,\n        realIndex: 0,\n        isBeginning: !0,\n        isEnd: !1,\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: !1,\n        cssOverflowAdjustment: function cssOverflowAdjustment() {\n          return Math.trunc(this.translate / Math.pow(2, 23)) * Math.pow(2, 23);\n        },\n        allowSlideNext: l.params.allowSlideNext,\n        allowSlidePrev: l.params.allowSlidePrev,\n        touchEventsData: {\n          isTouched: void 0,\n          isMoved: void 0,\n          allowTouchCallbacks: void 0,\n          touchStartTime: void 0,\n          isScrolling: void 0,\n          currentTranslate: void 0,\n          startTranslate: void 0,\n          allowThresholdMove: void 0,\n          focusableElements: l.params.focusableElements,\n          lastClickTime: 0,\n          clickTimeout: void 0,\n          velocities: [],\n          allowMomentumBounce: void 0,\n          startMoving: void 0,\n          evCache: []\n        },\n        allowClick: !0,\n        allowTouchMove: l.params.allowTouchMove,\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0\n        },\n        imagesToLoad: [],\n        imagesLoaded: 0\n      }), l.emit(\"_swiper\"), l.params.init && l.init(), l;\n    }\n    _createClass(J, [{\n      key: \"getSlideIndex\",\n      value: function getSlideIndex(e) {\n        var t = this.slidesEl,\n          s = this.params,\n          a = b(f(t, \".\".concat(s.slideClass, \", swiper-slide\"))[0]);\n        return b(e) - a;\n      }\n    }, {\n      key: \"getSlideIndexByData\",\n      value: function getSlideIndexByData(e) {\n        return this.getSlideIndex(this.slides.filter(function (t) {\n          return 1 * t.getAttribute(\"data-swiper-slide-index\") === e;\n        })[0]);\n      }\n    }, {\n      key: \"recalcSlides\",\n      value: function recalcSlides() {\n        var e = this.slidesEl,\n          t = this.params;\n        this.slides = f(e, \".\".concat(t.slideClass, \", swiper-slide\"));\n      }\n    }, {\n      key: \"enable\",\n      value: function enable() {\n        var e = this;\n        e.enabled || (e.enabled = !0, e.params.grabCursor && e.setGrabCursor(), e.emit(\"enable\"));\n      }\n    }, {\n      key: \"disable\",\n      value: function disable() {\n        var e = this;\n        e.enabled && (e.enabled = !1, e.params.grabCursor && e.unsetGrabCursor(), e.emit(\"disable\"));\n      }\n    }, {\n      key: \"setProgress\",\n      value: function setProgress(e, t) {\n        var s = this;\n        e = Math.min(Math.max(e, 0), 1);\n        var a = s.minTranslate(),\n          i = (s.maxTranslate() - a) * e + a;\n        s.translateTo(i, void 0 === t ? 0 : t), s.updateActiveIndex(), s.updateSlidesClasses();\n      }\n    }, {\n      key: \"emitContainerClasses\",\n      value: function emitContainerClasses() {\n        var e = this;\n        if (!e.params._emitClasses || !e.el) return;\n        var t = e.el.className.split(\" \").filter(function (t) {\n          return 0 === t.indexOf(\"swiper\") || 0 === t.indexOf(e.params.containerModifierClass);\n        });\n        e.emit(\"_containerClasses\", t.join(\" \"));\n      }\n    }, {\n      key: \"getSlideClasses\",\n      value: function getSlideClasses(e) {\n        var t = this;\n        return t.destroyed ? \"\" : e.className.split(\" \").filter(function (e) {\n          return 0 === e.indexOf(\"swiper-slide\") || 0 === e.indexOf(t.params.slideClass);\n        }).join(\" \");\n      }\n    }, {\n      key: \"emitSlidesClasses\",\n      value: function emitSlidesClasses() {\n        var e = this;\n        if (!e.params._emitClasses || !e.el) return;\n        var t = [];\n        e.slides.forEach(function (s) {\n          var a = e.getSlideClasses(s);\n          t.push({\n            slideEl: s,\n            classNames: a\n          }), e.emit(\"_slideClass\", s, a);\n        }), e.emit(\"_slideClasses\", t);\n      }\n    }, {\n      key: \"slidesPerViewDynamic\",\n      value: function slidesPerViewDynamic(e, t) {\n        void 0 === e && (e = \"current\"), void 0 === t && (t = !1);\n        var s = this.params,\n          a = this.slides,\n          i = this.slidesGrid,\n          r = this.slidesSizesGrid,\n          n = this.size,\n          l = this.activeIndex;\n        var o = 1;\n        if (s.centeredSlides) {\n          var _e30,\n            _t21 = a[l] ? a[l].swiperSlideSize : 0;\n          for (var _s18 = l + 1; _s18 < a.length; _s18 += 1) a[_s18] && !_e30 && (_t21 += a[_s18].swiperSlideSize, o += 1, _t21 > n && (_e30 = !0));\n          for (var _s19 = l - 1; _s19 >= 0; _s19 -= 1) a[_s19] && !_e30 && (_t21 += a[_s19].swiperSlideSize, o += 1, _t21 > n && (_e30 = !0));\n        } else if (\"current\" === e) for (var _e31 = l + 1; _e31 < a.length; _e31 += 1) {\n          (t ? i[_e31] + r[_e31] - i[l] < n : i[_e31] - i[l] < n) && (o += 1);\n        } else for (var _e32 = l - 1; _e32 >= 0; _e32 -= 1) {\n          i[l] - i[_e32] < n && (o += 1);\n        }\n        return o;\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        var e = this;\n        if (!e || e.destroyed) return;\n        var t = e.snapGrid,\n          s = e.params;\n        function a() {\n          var t = e.rtlTranslate ? -1 * e.translate : e.translate,\n            s = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());\n          e.setTranslate(s), e.updateActiveIndex(), e.updateSlidesClasses();\n        }\n        var i;\n        if (s.breakpoints && e.setBreakpoint(), _toConsumableArray(e.el.querySelectorAll('[loading=\"lazy\"]')).forEach(function (t) {\n          t.complete && A(e, t);\n        }), e.updateSize(), e.updateSlides(), e.updateProgress(), e.updateSlidesClasses(), s.freeMode && s.freeMode.enabled && !s.cssMode) a(), s.autoHeight && e.updateAutoHeight();else {\n          if ((\"auto\" === s.slidesPerView || s.slidesPerView > 1) && e.isEnd && !s.centeredSlides) {\n            var _t22 = e.virtual && s.virtual.enabled ? e.virtual.slides : e.slides;\n            i = e.slideTo(_t22.length - 1, 0, !1, !0);\n          } else i = e.slideTo(e.activeIndex, 0, !1, !0);\n          i || a();\n        }\n        s.watchOverflow && t !== e.snapGrid && e.checkOverflow(), e.emit(\"update\");\n      }\n    }, {\n      key: \"changeDirection\",\n      value: function changeDirection(e, t) {\n        void 0 === t && (t = !0);\n        var s = this,\n          a = s.params.direction;\n        return e || (e = \"horizontal\" === a ? \"vertical\" : \"horizontal\"), e === a || \"horizontal\" !== e && \"vertical\" !== e || (s.el.classList.remove(\"\".concat(s.params.containerModifierClass).concat(a)), s.el.classList.add(\"\".concat(s.params.containerModifierClass).concat(e)), s.emitContainerClasses(), s.params.direction = e, s.slides.forEach(function (t) {\n          \"vertical\" === e ? t.style.width = \"\" : t.style.height = \"\";\n        }), s.emit(\"changeDirection\"), t && s.update()), s;\n      }\n    }, {\n      key: \"changeLanguageDirection\",\n      value: function changeLanguageDirection(e) {\n        var t = this;\n        t.rtl && \"rtl\" === e || !t.rtl && \"ltr\" === e || (t.rtl = \"rtl\" === e, t.rtlTranslate = \"horizontal\" === t.params.direction && t.rtl, t.rtl ? (t.el.classList.add(\"\".concat(t.params.containerModifierClass, \"rtl\")), t.el.dir = \"rtl\") : (t.el.classList.remove(\"\".concat(t.params.containerModifierClass, \"rtl\")), t.el.dir = \"ltr\"), t.update());\n      }\n    }, {\n      key: \"mount\",\n      value: function mount(e) {\n        var t = this;\n        if (t.mounted) return !0;\n        var s = e || t.params.el;\n        if (\"string\" == typeof s && (s = document.querySelector(s)), !s) return !1;\n        s.swiper = t, s.shadowEl && (t.isElement = !0);\n        var a = function a() {\n          return \".\".concat((t.params.wrapperClass || \"\").trim().split(\" \").join(\".\"));\n        };\n        var i = function () {\n          if (s && s.shadowRoot && s.shadowRoot.querySelector) {\n            return s.shadowRoot.querySelector(a());\n          }\n          return f(s, a())[0];\n        }();\n        return !i && t.params.createElements && (i = g(\"div\", t.params.wrapperClass), s.append(i), f(s, \".\".concat(t.params.slideClass)).forEach(function (e) {\n          i.append(e);\n        })), Object.assign(t, {\n          el: s,\n          wrapperEl: i,\n          slidesEl: t.isElement ? s : i,\n          mounted: !0,\n          rtl: \"rtl\" === s.dir.toLowerCase() || \"rtl\" === w(s, \"direction\"),\n          rtlTranslate: \"horizontal\" === t.params.direction && (\"rtl\" === s.dir.toLowerCase() || \"rtl\" === w(s, \"direction\")),\n          wrongRTL: \"-webkit-box\" === w(i, \"display\")\n        }), !0;\n      }\n    }, {\n      key: \"init\",\n      value: function init(e) {\n        var t = this;\n        if (t.initialized) return t;\n        return !1 === t.mount(e) || (t.emit(\"beforeInit\"), t.params.breakpoints && t.setBreakpoint(), t.addClasses(), t.updateSize(), t.updateSlides(), t.params.watchOverflow && t.checkOverflow(), t.params.grabCursor && t.enabled && t.setGrabCursor(), t.params.loop && t.virtual && t.params.virtual.enabled ? t.slideTo(t.params.initialSlide + t.virtual.slidesBefore, 0, t.params.runCallbacksOnInit, !1, !0) : t.slideTo(t.params.initialSlide, 0, t.params.runCallbacksOnInit, !1, !0), t.params.loop && t.loopCreate(), t.attachEvents(), _toConsumableArray(t.el.querySelectorAll('[loading=\"lazy\"]')).forEach(function (e) {\n          e.complete ? A(t, e) : e.addEventListener(\"load\", function (e) {\n            A(t, e.target);\n          });\n        }), I(t), t.initialized = !0, I(t), t.emit(\"init\"), t.emit(\"afterInit\")), t;\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy(e, t) {\n        void 0 === e && (e = !0), void 0 === t && (t = !0);\n        var s = this,\n          a = s.params,\n          i = s.el,\n          r = s.wrapperEl,\n          n = s.slides;\n        return void 0 === s.params || s.destroyed || (s.emit(\"beforeDestroy\"), s.initialized = !1, s.detachEvents(), a.loop && s.loopDestroy(), t && (s.removeClasses(), i.removeAttribute(\"style\"), r.removeAttribute(\"style\"), n && n.length && n.forEach(function (e) {\n          e.classList.remove(a.slideVisibleClass, a.slideActiveClass, a.slideNextClass, a.slidePrevClass), e.removeAttribute(\"style\"), e.removeAttribute(\"data-swiper-slide-index\");\n        })), s.emit(\"destroy\"), Object.keys(s.eventsListeners).forEach(function (e) {\n          s.off(e);\n        }), !1 !== e && (s.el.swiper = null, function (e) {\n          var t = e;\n          Object.keys(t).forEach(function (e) {\n            try {\n              t[e] = null;\n            } catch (e) {}\n            try {\n              delete t[e];\n            } catch (e) {}\n          });\n        }(s)), s.destroyed = !0), null;\n      }\n    }], [{\n      key: \"extendDefaults\",\n      value: function extendDefaults(e) {\n        p(Q, e);\n      }\n    }, {\n      key: \"extendedDefaults\",\n      get: function get() {\n        return Q;\n      }\n    }, {\n      key: \"defaults\",\n      get: function get() {\n        return U;\n      }\n    }, {\n      key: \"installModule\",\n      value: function installModule(e) {\n        J.prototype.__modules__ || (J.prototype.__modules__ = []);\n        var t = J.prototype.__modules__;\n        \"function\" == typeof e && t.indexOf(e) < 0 && t.push(e);\n      }\n    }, {\n      key: \"use\",\n      value: function use(e) {\n        return Array.isArray(e) ? (e.forEach(function (e) {\n          return J.installModule(e);\n        }), J) : (J.installModule(e), J);\n      }\n    }]);\n    return J;\n  }();\n  function ee(e, t, s, a) {\n    return e.params.createElements && Object.keys(a).forEach(function (i) {\n      if (!s[i] && !0 === s.auto) {\n        var _r7 = f(e.el, \".\".concat(a[i]))[0];\n        _r7 || (_r7 = g(\"div\", a[i]), _r7.className = a[i], e.el.append(_r7)), s[i] = _r7, t[i] = _r7;\n      }\n    }), s;\n  }\n  function te(e) {\n    return void 0 === e && (e = \"\"), \".\".concat(e.trim().replace(/([\\.:!+\\/])/g, \"\\\\$1\").replace(/ /g, \".\"));\n  }\n  function se(e) {\n    var t = this,\n      s = t.params,\n      a = t.slidesEl;\n    s.loop && t.loopDestroy();\n    var i = function i(e) {\n      if (\"string\" == typeof e) {\n        var _t23 = document.createElement(\"div\");\n        _t23.innerHTML = e, a.append(_t23.children[0]), _t23.innerHTML = \"\";\n      } else a.append(e);\n    };\n    if (\"object\" == _typeof(e) && \"length\" in e) for (var _t24 = 0; _t24 < e.length; _t24 += 1) e[_t24] && i(e[_t24]);else i(e);\n    t.recalcSlides(), s.loop && t.loopCreate(), s.observer && !t.isElement || t.update();\n  }\n  function ae(e) {\n    var t = this,\n      s = t.params,\n      a = t.activeIndex,\n      i = t.slidesEl;\n    s.loop && t.loopDestroy();\n    var r = a + 1;\n    var n = function n(e) {\n      if (\"string\" == typeof e) {\n        var _t25 = document.createElement(\"div\");\n        _t25.innerHTML = e, i.prepend(_t25.children[0]), _t25.innerHTML = \"\";\n      } else i.prepend(e);\n    };\n    if (\"object\" == _typeof(e) && \"length\" in e) {\n      for (var _t26 = 0; _t26 < e.length; _t26 += 1) e[_t26] && n(e[_t26]);\n      r = a + e.length;\n    } else n(e);\n    t.recalcSlides(), s.loop && t.loopCreate(), s.observer && !t.isElement || t.update(), t.slideTo(r, 0, !1);\n  }\n  function ie(e, t) {\n    var s = this,\n      a = s.params,\n      i = s.activeIndex,\n      r = s.slidesEl;\n    var n = i;\n    a.loop && (n -= s.loopedSlides, s.loopDestroy(), s.recalcSlides());\n    var l = s.slides.length;\n    if (e <= 0) return void s.prependSlide(t);\n    if (e >= l) return void s.appendSlide(t);\n    var o = n > e ? n + 1 : n;\n    var d = [];\n    for (var _t27 = l - 1; _t27 >= e; _t27 -= 1) {\n      var _e33 = s.slides[_t27];\n      _e33.remove(), d.unshift(_e33);\n    }\n    if (\"object\" == _typeof(t) && \"length\" in t) {\n      for (var _e34 = 0; _e34 < t.length; _e34 += 1) t[_e34] && r.append(t[_e34]);\n      o = n > e ? n + t.length : n;\n    } else r.append(t);\n    for (var _e35 = 0; _e35 < d.length; _e35 += 1) r.append(d[_e35]);\n    s.recalcSlides(), a.loop && s.loopCreate(), a.observer && !s.isElement || s.update(), a.loop ? s.slideTo(o + s.loopedSlides, 0, !1) : s.slideTo(o, 0, !1);\n  }\n  function re(e) {\n    var t = this,\n      s = t.params,\n      a = t.activeIndex;\n    var i = a;\n    s.loop && (i -= t.loopedSlides, t.loopDestroy());\n    var r,\n      n = i;\n    if (\"object\" == _typeof(e) && \"length\" in e) {\n      for (var _s20 = 0; _s20 < e.length; _s20 += 1) r = e[_s20], t.slides[r] && t.slides[r].remove(), r < n && (n -= 1);\n      n = Math.max(n, 0);\n    } else r = e, t.slides[r] && t.slides[r].remove(), r < n && (n -= 1), n = Math.max(n, 0);\n    t.recalcSlides(), s.loop && t.loopCreate(), s.observer && !t.isElement || t.update(), s.loop ? t.slideTo(n + t.loopedSlides, 0, !1) : t.slideTo(n, 0, !1);\n  }\n  function ne() {\n    var e = this,\n      t = [];\n    for (var _s21 = 0; _s21 < e.slides.length; _s21 += 1) t.push(_s21);\n    e.removeSlide(t);\n  }\n  function le(e) {\n    var t = e.effect,\n      s = e.swiper,\n      a = e.on,\n      i = e.setTranslate,\n      r = e.setTransition,\n      n = e.overwriteParams,\n      l = e.perspective,\n      o = e.recreateShadows,\n      d = e.getEffectParams;\n    var c;\n    a(\"beforeInit\", function () {\n      if (s.params.effect !== t) return;\n      s.classNames.push(\"\".concat(s.params.containerModifierClass).concat(t)), l && l() && s.classNames.push(\"\".concat(s.params.containerModifierClass, \"3d\"));\n      var e = n ? n() : {};\n      Object.assign(s.params, e), Object.assign(s.originalParams, e);\n    }), a(\"setTranslate\", function () {\n      s.params.effect === t && i();\n    }), a(\"setTransition\", function (e, a) {\n      s.params.effect === t && r(a);\n    }), a(\"transitionEnd\", function () {\n      if (s.params.effect === t && o) {\n        if (!d || !d().slideShadows) return;\n        s.slides.forEach(function (e) {\n          e.querySelectorAll(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").forEach(function (e) {\n            return e.remove();\n          });\n        }), o();\n      }\n    }), a(\"virtualUpdate\", function () {\n      s.params.effect === t && (s.slides.length || (c = !0), requestAnimationFrame(function () {\n        c && s.slides && s.slides.length && (i(), c = !1);\n      }));\n    });\n  }\n  function oe(e, t) {\n    var s = h(t);\n    return s !== t && (s.style.backfaceVisibility = \"hidden\", s.style[\"-webkit-backface-visibility\"] = \"hidden\"), s;\n  }\n  function de(e) {\n    var t = e.swiper,\n      s = e.duration,\n      a = e.transformElements,\n      i = e.allSlides;\n    var r = t.activeIndex;\n    if (t.params.virtualTranslate && 0 !== s) {\n      var _e36,\n        _s22 = !1;\n      _e36 = i ? a : a.filter(function (e) {\n        var s = e.classList.contains(\"swiper-slide-transform\") ? function (e) {\n          if (!e.parentElement) return t.slides.filter(function (t) {\n            return t.shadowEl && t.shadowEl === e.parentNode;\n          })[0];\n          return e.parentElement;\n        }(e) : e;\n        return t.getSlideIndex(s) === r;\n      }), _e36.forEach(function (e) {\n        E(e, function () {\n          if (_s22) return;\n          if (!t || t.destroyed) return;\n          _s22 = !0, t.animating = !1;\n          var e = new window.CustomEvent(\"transitionend\", {\n            bubbles: !0,\n            cancelable: !0\n          });\n          t.wrapperEl.dispatchEvent(e);\n        });\n      });\n    }\n  }\n  function ce(e, t, s) {\n    var a = \"swiper-slide-shadow\" + (s ? \"-\".concat(s) : \"\"),\n      i = h(t);\n    var r = i.querySelector(\".\".concat(a));\n    return r || (r = g(\"div\", \"swiper-slide-shadow\" + (s ? \"-\".concat(s) : \"\")), i.append(r)), r;\n  }\n  Object.keys(Z).forEach(function (e) {\n    Object.keys(Z[e]).forEach(function (t) {\n      J.prototype[t] = Z[e][t];\n    });\n  }), J.use([function (e) {\n    var t = e.swiper,\n      s = e.on,\n      a = e.emit;\n    var i = r();\n    var n = null,\n      l = null;\n    var o = function o() {\n        t && !t.destroyed && t.initialized && (a(\"beforeResize\"), a(\"resize\"));\n      },\n      d = function d() {\n        t && !t.destroyed && t.initialized && a(\"orientationchange\");\n      };\n    s(\"init\", function () {\n      t.params.resizeObserver && void 0 !== i.ResizeObserver ? t && !t.destroyed && t.initialized && (n = new ResizeObserver(function (e) {\n        l = i.requestAnimationFrame(function () {\n          var s = t.width,\n            a = t.height;\n          var i = s,\n            r = a;\n          e.forEach(function (e) {\n            var s = e.contentBoxSize,\n              a = e.contentRect,\n              n = e.target;\n            n && n !== t.el || (i = a ? a.width : (s[0] || s).inlineSize, r = a ? a.height : (s[0] || s).blockSize);\n          }), i === s && r === a || o();\n        });\n      }), n.observe(t.el)) : (i.addEventListener(\"resize\", o), i.addEventListener(\"orientationchange\", d));\n    }), s(\"destroy\", function () {\n      l && i.cancelAnimationFrame(l), n && n.unobserve && t.el && (n.unobserve(t.el), n = null), i.removeEventListener(\"resize\", o), i.removeEventListener(\"orientationchange\", d);\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on,\n      i = e.emit;\n    var n = [],\n      l = r(),\n      o = function o(e, s) {\n        void 0 === s && (s = {});\n        var a = new (l.MutationObserver || l.WebkitMutationObserver)(function (e) {\n          if (t.__preventObserver__) return;\n          if (1 === e.length) return void i(\"observerUpdate\", e[0]);\n          var s = function s() {\n            i(\"observerUpdate\", e[0]);\n          };\n          l.requestAnimationFrame ? l.requestAnimationFrame(s) : l.setTimeout(s, 0);\n        });\n        a.observe(e, {\n          attributes: void 0 === s.attributes || s.attributes,\n          childList: void 0 === s.childList || s.childList,\n          characterData: void 0 === s.characterData || s.characterData\n        }), n.push(a);\n      };\n    s({\n      observer: !1,\n      observeParents: !1,\n      observeSlideChildren: !1\n    }), a(\"init\", function () {\n      if (t.params.observer) {\n        if (t.params.observeParents) {\n          var _e37 = y(t.el);\n          for (var _t28 = 0; _t28 < _e37.length; _t28 += 1) o(_e37[_t28]);\n        }\n        o(t.el, {\n          childList: t.params.observeSlideChildren\n        }), o(t.wrapperEl, {\n          attributes: !1\n        });\n      }\n    }), a(\"destroy\", function () {\n      n.forEach(function (e) {\n        e.disconnect();\n      }), n.splice(0, n.length);\n    });\n  }]);\n  var pe = [function (e) {\n    var t,\n      s = e.swiper,\n      i = e.extendParams,\n      r = e.on,\n      n = e.emit;\n    i({\n      virtual: {\n        enabled: !1,\n        slides: [],\n        cache: !0,\n        renderSlide: null,\n        renderExternal: null,\n        renderExternalUpdate: !0,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0\n      }\n    });\n    var l = a();\n    s.virtual = {\n      cache: {},\n      from: void 0,\n      to: void 0,\n      slides: [],\n      offset: 0,\n      slidesGrid: []\n    };\n    var o = l.createElement(\"div\");\n    function d(e, t) {\n      var a = s.params.virtual;\n      if (a.cache && s.virtual.cache[t]) return s.virtual.cache[t];\n      var i;\n      return a.renderSlide ? (i = a.renderSlide.call(s, e, t), \"string\" == typeof i && (o.innerHTML = i, i = o.children[0])) : i = s.isElement ? g(\"swiper-slide\") : g(\"div\", s.params.slideClass), i.setAttribute(\"data-swiper-slide-index\", t), a.renderSlide || (i.innerHTML = e), a.cache && (s.virtual.cache[t] = i), i;\n    }\n    function c(e) {\n      var _s$params = s.params,\n        t = _s$params.slidesPerView,\n        a = _s$params.slidesPerGroup,\n        i = _s$params.centeredSlides,\n        r = _s$params.loop,\n        _s$params$virtual = s.params.virtual,\n        l = _s$params$virtual.addSlidesBefore,\n        o = _s$params$virtual.addSlidesAfter,\n        _s$virtual = s.virtual,\n        c = _s$virtual.from,\n        p = _s$virtual.to,\n        u = _s$virtual.slides,\n        m = _s$virtual.slidesGrid,\n        h = _s$virtual.offset;\n      s.params.cssMode || s.updateActiveIndex();\n      var g = s.activeIndex || 0;\n      var v, w, b;\n      v = s.rtlTranslate ? \"right\" : s.isHorizontal() ? \"left\" : \"top\", i ? (w = Math.floor(t / 2) + a + o, b = Math.floor(t / 2) + a + l) : (w = t + (a - 1) + o, b = (r ? t : a) + l);\n      var y = g - b,\n        E = g + w;\n      r || (y = Math.max(y, 0), E = Math.min(E, u.length - 1));\n      var x = (s.slidesGrid[y] || 0) - (s.slidesGrid[0] || 0);\n      function S() {\n        s.updateSlides(), s.updateProgress(), s.updateSlidesClasses(), n(\"virtualUpdate\");\n      }\n      if (r && g >= b ? (y -= b, i || (x += s.slidesGrid[0])) : r && g < b && (y = -b, i && (x += s.slidesGrid[0])), Object.assign(s.virtual, {\n        from: y,\n        to: E,\n        offset: x,\n        slidesGrid: s.slidesGrid,\n        slidesBefore: b,\n        slidesAfter: w\n      }), c === y && p === E && !e) return s.slidesGrid !== m && x !== h && s.slides.forEach(function (e) {\n        e.style[v] = x - Math.abs(s.cssOverflowAdjustment()) + \"px\";\n      }), s.updateProgress(), void n(\"virtualUpdate\");\n      if (s.params.virtual.renderExternal) return s.params.virtual.renderExternal.call(s, {\n        offset: x,\n        from: y,\n        to: E,\n        slides: function () {\n          var e = [];\n          for (var _t29 = y; _t29 <= E; _t29 += 1) e.push(u[_t29]);\n          return e;\n        }()\n      }), void (s.params.virtual.renderExternalUpdate ? S() : n(\"virtualUpdate\"));\n      var T = [],\n        M = [],\n        C = function C(e) {\n          var t = e;\n          return e < 0 ? t = u.length + e : t >= u.length && (t -= u.length), t;\n        };\n      if (e) s.slidesEl.querySelectorAll(\".\".concat(s.params.slideClass, \", swiper-slide\")).forEach(function (e) {\n        e.remove();\n      });else for (var _e38 = c; _e38 <= p; _e38 += 1) if (_e38 < y || _e38 > E) {\n        var _t30 = C(_e38);\n        s.slidesEl.querySelectorAll(\".\".concat(s.params.slideClass, \"[data-swiper-slide-index=\\\"\").concat(_t30, \"\\\"], swiper-slide[data-swiper-slide-index=\\\"\").concat(_t30, \"\\\"]\")).forEach(function (e) {\n          e.remove();\n        });\n      }\n      var P = r ? -u.length : 0,\n        L = r ? 2 * u.length : u.length;\n      for (var _t31 = P; _t31 < L; _t31 += 1) if (_t31 >= y && _t31 <= E) {\n        var _s23 = C(_t31);\n        void 0 === p || e ? M.push(_s23) : (_t31 > p && M.push(_s23), _t31 < c && T.push(_s23));\n      }\n      if (M.forEach(function (e) {\n        s.slidesEl.append(d(u[e], e));\n      }), r) for (var _e39 = T.length - 1; _e39 >= 0; _e39 -= 1) {\n        var _t32 = T[_e39];\n        s.slidesEl.prepend(d(u[_t32], _t32));\n      } else T.sort(function (e, t) {\n        return t - e;\n      }), T.forEach(function (e) {\n        s.slidesEl.prepend(d(u[e], e));\n      });\n      f(s.slidesEl, \".swiper-slide, swiper-slide\").forEach(function (e) {\n        e.style[v] = x - Math.abs(s.cssOverflowAdjustment()) + \"px\";\n      }), S();\n    }\n    r(\"beforeInit\", function () {\n      if (!s.params.virtual.enabled) return;\n      var e;\n      if (void 0 === s.passedParams.virtual.slides) {\n        var _t33 = _toConsumableArray(s.slidesEl.children).filter(function (e) {\n          return e.matches(\".\".concat(s.params.slideClass, \", swiper-slide\"));\n        });\n        _t33 && _t33.length && (s.virtual.slides = _toConsumableArray(_t33), e = !0, _t33.forEach(function (e, t) {\n          e.setAttribute(\"data-swiper-slide-index\", t), s.virtual.cache[t] = e, e.remove();\n        }));\n      }\n      e || (s.virtual.slides = s.params.virtual.slides), s.classNames.push(\"\".concat(s.params.containerModifierClass, \"virtual\")), s.params.watchSlidesProgress = !0, s.originalParams.watchSlidesProgress = !0, s.params.initialSlide || c();\n    }), r(\"setTranslate\", function () {\n      s.params.virtual.enabled && (s.params.cssMode && !s._immediateVirtual ? (clearTimeout(t), t = setTimeout(function () {\n        c();\n      }, 100)) : c());\n    }), r(\"init update resize\", function () {\n      s.params.virtual.enabled && s.params.cssMode && u(s.wrapperEl, \"--swiper-virtual-size\", \"\".concat(s.virtualSize, \"px\"));\n    }), Object.assign(s.virtual, {\n      appendSlide: function appendSlide(e) {\n        if (\"object\" == _typeof(e) && \"length\" in e) for (var _t34 = 0; _t34 < e.length; _t34 += 1) e[_t34] && s.virtual.slides.push(e[_t34]);else s.virtual.slides.push(e);\n        c(!0);\n      },\n      prependSlide: function prependSlide(e) {\n        var t = s.activeIndex;\n        var a = t + 1,\n          i = 1;\n        if (Array.isArray(e)) {\n          for (var _t35 = 0; _t35 < e.length; _t35 += 1) e[_t35] && s.virtual.slides.unshift(e[_t35]);\n          a = t + e.length, i = e.length;\n        } else s.virtual.slides.unshift(e);\n        if (s.params.virtual.cache) {\n          var _e40 = s.virtual.cache,\n            _t36 = {};\n          Object.keys(_e40).forEach(function (s) {\n            var a = _e40[s],\n              r = a.getAttribute(\"data-swiper-slide-index\");\n            r && a.setAttribute(\"data-swiper-slide-index\", parseInt(r, 10) + i), _t36[parseInt(s, 10) + i] = a;\n          }), s.virtual.cache = _t36;\n        }\n        c(!0), s.slideTo(a, 0);\n      },\n      removeSlide: function removeSlide(e) {\n        if (null == e) return;\n        var t = s.activeIndex;\n        if (Array.isArray(e)) for (var _a12 = e.length - 1; _a12 >= 0; _a12 -= 1) s.virtual.slides.splice(e[_a12], 1), s.params.virtual.cache && delete s.virtual.cache[e[_a12]], e[_a12] < t && (t -= 1), t = Math.max(t, 0);else s.virtual.slides.splice(e, 1), s.params.virtual.cache && delete s.virtual.cache[e], e < t && (t -= 1), t = Math.max(t, 0);\n        c(!0), s.slideTo(t, 0);\n      },\n      removeAllSlides: function removeAllSlides() {\n        s.virtual.slides = [], s.params.virtual.cache && (s.virtual.cache = {}), c(!0), s.slideTo(0, 0);\n      },\n      update: c\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      i = e.on,\n      n = e.emit;\n    var l = a(),\n      o = r();\n    function d(e) {\n      if (!t.enabled) return;\n      var s = t.rtlTranslate;\n      var a = e;\n      a.originalEvent && (a = a.originalEvent);\n      var i = a.keyCode || a.charCode,\n        r = t.params.keyboard.pageUpDown,\n        d = r && 33 === i,\n        c = r && 34 === i,\n        p = 37 === i,\n        u = 39 === i,\n        m = 38 === i,\n        h = 40 === i;\n      if (!t.allowSlideNext && (t.isHorizontal() && u || t.isVertical() && h || c)) return !1;\n      if (!t.allowSlidePrev && (t.isHorizontal() && p || t.isVertical() && m || d)) return !1;\n      if (!(a.shiftKey || a.altKey || a.ctrlKey || a.metaKey || l.activeElement && l.activeElement.nodeName && (\"input\" === l.activeElement.nodeName.toLowerCase() || \"textarea\" === l.activeElement.nodeName.toLowerCase()))) {\n        if (t.params.keyboard.onlyInViewport && (d || c || p || u || m || h)) {\n          var _e41 = !1;\n          if (y(t.el, \".\".concat(t.params.slideClass, \", swiper-slide\")).length > 0 && 0 === y(t.el, \".\".concat(t.params.slideActiveClass)).length) return;\n          var _a13 = t.el,\n            _i11 = _a13.clientWidth,\n            _r8 = _a13.clientHeight,\n            _n5 = o.innerWidth,\n            _l4 = o.innerHeight,\n            _d2 = v(_a13);\n          s && (_d2.left -= _a13.scrollLeft);\n          var _c2 = [[_d2.left, _d2.top], [_d2.left + _i11, _d2.top], [_d2.left, _d2.top + _r8], [_d2.left + _i11, _d2.top + _r8]];\n          for (var _t37 = 0; _t37 < _c2.length; _t37 += 1) {\n            var _s24 = _c2[_t37];\n            if (_s24[0] >= 0 && _s24[0] <= _n5 && _s24[1] >= 0 && _s24[1] <= _l4) {\n              if (0 === _s24[0] && 0 === _s24[1]) continue;\n              _e41 = !0;\n            }\n          }\n          if (!_e41) return;\n        }\n        t.isHorizontal() ? ((d || c || p || u) && (a.preventDefault ? a.preventDefault() : a.returnValue = !1), ((c || u) && !s || (d || p) && s) && t.slideNext(), ((d || p) && !s || (c || u) && s) && t.slidePrev()) : ((d || c || m || h) && (a.preventDefault ? a.preventDefault() : a.returnValue = !1), (c || h) && t.slideNext(), (d || m) && t.slidePrev()), n(\"keyPress\", i);\n      }\n    }\n    function c() {\n      t.keyboard.enabled || (l.addEventListener(\"keydown\", d), t.keyboard.enabled = !0);\n    }\n    function p() {\n      t.keyboard.enabled && (l.removeEventListener(\"keydown\", d), t.keyboard.enabled = !1);\n    }\n    t.keyboard = {\n      enabled: !1\n    }, s({\n      keyboard: {\n        enabled: !1,\n        onlyInViewport: !0,\n        pageUpDown: !0\n      }\n    }), i(\"init\", function () {\n      t.params.keyboard.enabled && c();\n    }), i(\"destroy\", function () {\n      t.keyboard.enabled && p();\n    }), Object.assign(t.keyboard, {\n      enable: c,\n      disable: p\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on,\n      i = e.emit;\n    var o = r();\n    var d;\n    s({\n      mousewheel: {\n        enabled: !1,\n        releaseOnEdges: !1,\n        invert: !1,\n        forceToAxis: !1,\n        sensitivity: 1,\n        eventsTarget: \"container\",\n        thresholdDelta: null,\n        thresholdTime: null,\n        noMousewheelClass: \"swiper-no-mousewheel\"\n      }\n    }), t.mousewheel = {\n      enabled: !1\n    };\n    var c,\n      p = l();\n    var u = [];\n    function m() {\n      t.enabled && (t.mouseEntered = !0);\n    }\n    function h() {\n      t.enabled && (t.mouseEntered = !1);\n    }\n    function f(e) {\n      return !(t.params.mousewheel.thresholdDelta && e.delta < t.params.mousewheel.thresholdDelta) && !(t.params.mousewheel.thresholdTime && l() - p < t.params.mousewheel.thresholdTime) && (e.delta >= 6 && l() - p < 60 || (e.direction < 0 ? t.isEnd && !t.params.loop || t.animating || (t.slideNext(), i(\"scroll\", e.raw)) : t.isBeginning && !t.params.loop || t.animating || (t.slidePrev(), i(\"scroll\", e.raw)), p = new o.Date().getTime(), !1));\n    }\n    function g(e) {\n      var s = e,\n        a = !0;\n      if (!t.enabled) return;\n      if (e.target.closest(\".\".concat(t.params.mousewheel.noMousewheelClass))) return;\n      var r = t.params.mousewheel;\n      t.params.cssMode && s.preventDefault();\n      var o = t.el;\n      \"container\" !== t.params.mousewheel.eventsTarget && (o = document.querySelector(t.params.mousewheel.eventsTarget));\n      var p = o && o.contains(s.target);\n      if (!t.mouseEntered && !p && !r.releaseOnEdges) return !0;\n      s.originalEvent && (s = s.originalEvent);\n      var m = 0;\n      var h = t.rtlTranslate ? -1 : 1,\n        g = function (e) {\n          var t = 0,\n            s = 0,\n            a = 0,\n            i = 0;\n          return \"detail\" in e && (s = e.detail), \"wheelDelta\" in e && (s = -e.wheelDelta / 120), \"wheelDeltaY\" in e && (s = -e.wheelDeltaY / 120), \"wheelDeltaX\" in e && (t = -e.wheelDeltaX / 120), \"axis\" in e && e.axis === e.HORIZONTAL_AXIS && (t = s, s = 0), a = 10 * t, i = 10 * s, \"deltaY\" in e && (i = e.deltaY), \"deltaX\" in e && (a = e.deltaX), e.shiftKey && !a && (a = i, i = 0), (a || i) && e.deltaMode && (1 === e.deltaMode ? (a *= 40, i *= 40) : (a *= 800, i *= 800)), a && !t && (t = a < 1 ? -1 : 1), i && !s && (s = i < 1 ? -1 : 1), {\n            spinX: t,\n            spinY: s,\n            pixelX: a,\n            pixelY: i\n          };\n        }(s);\n      if (r.forceToAxis) {\n        if (t.isHorizontal()) {\n          if (!(Math.abs(g.pixelX) > Math.abs(g.pixelY))) return !0;\n          m = -g.pixelX * h;\n        } else {\n          if (!(Math.abs(g.pixelY) > Math.abs(g.pixelX))) return !0;\n          m = -g.pixelY;\n        }\n      } else m = Math.abs(g.pixelX) > Math.abs(g.pixelY) ? -g.pixelX * h : -g.pixelY;\n      if (0 === m) return !0;\n      r.invert && (m = -m);\n      var v = t.getTranslate() + m * r.sensitivity;\n      if (v >= t.minTranslate() && (v = t.minTranslate()), v <= t.maxTranslate() && (v = t.maxTranslate()), a = !!t.params.loop || !(v === t.minTranslate() || v === t.maxTranslate()), a && t.params.nested && s.stopPropagation(), t.params.freeMode && t.params.freeMode.enabled) {\n        var _e42 = {\n            time: l(),\n            delta: Math.abs(m),\n            direction: Math.sign(m)\n          },\n          _a14 = c && _e42.time < c.time + 500 && _e42.delta <= c.delta && _e42.direction === c.direction;\n        if (!_a14) {\n          c = void 0;\n          var _l5 = t.getTranslate() + m * r.sensitivity;\n          var _o5 = t.isBeginning,\n            _p2 = t.isEnd;\n          if (_l5 >= t.minTranslate() && (_l5 = t.minTranslate()), _l5 <= t.maxTranslate() && (_l5 = t.maxTranslate()), t.setTransition(0), t.setTranslate(_l5), t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses(), (!_o5 && t.isBeginning || !_p2 && t.isEnd) && t.updateSlidesClasses(), t.params.loop && t.loopFix({\n            direction: _e42.direction < 0 ? \"next\" : \"prev\",\n            byMousewheel: !0\n          }), t.params.freeMode.sticky) {\n            clearTimeout(d), d = void 0, u.length >= 15 && u.shift();\n            var _s25 = u.length ? u[u.length - 1] : void 0,\n              _a15 = u[0];\n            if (u.push(_e42), _s25 && (_e42.delta > _s25.delta || _e42.direction !== _s25.direction)) u.splice(0);else if (u.length >= 15 && _e42.time - _a15.time < 500 && _a15.delta - _e42.delta >= 1 && _e42.delta <= 6) {\n              var _s26 = m > 0 ? .8 : .2;\n              c = _e42, u.splice(0), d = n(function () {\n                t.slideToClosest(t.params.speed, !0, void 0, _s26);\n              }, 0);\n            }\n            d || (d = n(function () {\n              c = _e42, u.splice(0), t.slideToClosest(t.params.speed, !0, void 0, .5);\n            }, 500));\n          }\n          if (_a14 || i(\"scroll\", s), t.params.autoplay && t.params.autoplayDisableOnInteraction && t.autoplay.stop(), _l5 === t.minTranslate() || _l5 === t.maxTranslate()) return !0;\n        }\n      } else {\n        var _s27 = {\n          time: l(),\n          delta: Math.abs(m),\n          direction: Math.sign(m),\n          raw: e\n        };\n        u.length >= 2 && u.shift();\n        var _a16 = u.length ? u[u.length - 1] : void 0;\n        if (u.push(_s27), _a16 ? (_s27.direction !== _a16.direction || _s27.delta > _a16.delta || _s27.time > _a16.time + 150) && f(_s27) : f(_s27), function (e) {\n          var s = t.params.mousewheel;\n          if (e.direction < 0) {\n            if (t.isEnd && !t.params.loop && s.releaseOnEdges) return !0;\n          } else if (t.isBeginning && !t.params.loop && s.releaseOnEdges) return !0;\n          return !1;\n        }(_s27)) return !0;\n      }\n      return s.preventDefault ? s.preventDefault() : s.returnValue = !1, !1;\n    }\n    function v(e) {\n      var s = t.el;\n      \"container\" !== t.params.mousewheel.eventsTarget && (s = document.querySelector(t.params.mousewheel.eventsTarget)), s[e](\"mouseenter\", m), s[e](\"mouseleave\", h), s[e](\"wheel\", g);\n    }\n    function w() {\n      return t.params.cssMode ? (t.wrapperEl.removeEventListener(\"wheel\", g), !0) : !t.mousewheel.enabled && (v(\"addEventListener\"), t.mousewheel.enabled = !0, !0);\n    }\n    function b() {\n      return t.params.cssMode ? (t.wrapperEl.addEventListener(event, g), !0) : !!t.mousewheel.enabled && (v(\"removeEventListener\"), t.mousewheel.enabled = !1, !0);\n    }\n    a(\"init\", function () {\n      !t.params.mousewheel.enabled && t.params.cssMode && b(), t.params.mousewheel.enabled && w();\n    }), a(\"destroy\", function () {\n      t.params.cssMode && w(), t.mousewheel.enabled && b();\n    }), Object.assign(t.mousewheel, {\n      enable: w,\n      disable: b\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on,\n      i = e.emit;\n    s({\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n        hideOnClick: !1,\n        disabledClass: \"swiper-button-disabled\",\n        hiddenClass: \"swiper-button-hidden\",\n        lockClass: \"swiper-button-lock\",\n        navigationDisabledClass: \"swiper-navigation-disabled\"\n      }\n    }), t.navigation = {\n      nextEl: null,\n      prevEl: null\n    };\n    var r = function r(e) {\n      return Array.isArray(e) || (e = [e].filter(function (e) {\n        return !!e;\n      })), e;\n    };\n    function n(e) {\n      var s;\n      return e && \"string\" == typeof e && t.isElement && (s = t.el.shadowRoot.querySelector(e), s) ? s : (e && (\"string\" == typeof e && (s = _toConsumableArray(document.querySelectorAll(e))), t.params.uniqueNavElements && \"string\" == typeof e && s.length > 1 && 1 === t.el.querySelectorAll(e).length && (s = t.el.querySelector(e))), e && !s ? e : s);\n    }\n    function l(e, s) {\n      var a = t.params.navigation;\n      (e = r(e)).forEach(function (e) {\n        var _e$classList2;\n        e && ((_e$classList2 = e.classList)[s ? \"add\" : \"remove\"].apply(_e$classList2, _toConsumableArray(a.disabledClass.split(\" \"))), \"BUTTON\" === e.tagName && (e.disabled = s), t.params.watchOverflow && t.enabled && e.classList[t.isLocked ? \"add\" : \"remove\"](a.lockClass));\n      });\n    }\n    function o() {\n      var _t$navigation = t.navigation,\n        e = _t$navigation.nextEl,\n        s = _t$navigation.prevEl;\n      if (t.params.loop) return l(s, !1), void l(e, !1);\n      l(s, t.isBeginning && !t.params.rewind), l(e, t.isEnd && !t.params.rewind);\n    }\n    function d(e) {\n      e.preventDefault(), (!t.isBeginning || t.params.loop || t.params.rewind) && (t.slidePrev(), i(\"navigationPrev\"));\n    }\n    function c(e) {\n      e.preventDefault(), (!t.isEnd || t.params.loop || t.params.rewind) && (t.slideNext(), i(\"navigationNext\"));\n    }\n    function p() {\n      var e = t.params.navigation;\n      if (t.params.navigation = ee(t, t.originalParams.navigation, t.params.navigation, {\n        nextEl: \"swiper-button-next\",\n        prevEl: \"swiper-button-prev\"\n      }), !e.nextEl && !e.prevEl) return;\n      var s = n(e.nextEl),\n        a = n(e.prevEl);\n      Object.assign(t.navigation, {\n        nextEl: s,\n        prevEl: a\n      }), s = r(s), a = r(a);\n      var i = function i(s, a) {\n        var _s$classList2;\n        s && s.addEventListener(\"click\", \"next\" === a ? c : d), !t.enabled && s && (_s$classList2 = s.classList).add.apply(_s$classList2, _toConsumableArray(e.lockClass.split(\" \")));\n      };\n      s.forEach(function (e) {\n        return i(e, \"next\");\n      }), a.forEach(function (e) {\n        return i(e, \"prev\");\n      });\n    }\n    function u() {\n      var _t$navigation2 = t.navigation,\n        e = _t$navigation2.nextEl,\n        s = _t$navigation2.prevEl;\n      e = r(e), s = r(s);\n      var a = function a(e, s) {\n        var _e$classList3;\n        e.removeEventListener(\"click\", \"next\" === s ? c : d), (_e$classList3 = e.classList).remove.apply(_e$classList3, _toConsumableArray(t.params.navigation.disabledClass.split(\" \")));\n      };\n      e.forEach(function (e) {\n        return a(e, \"next\");\n      }), s.forEach(function (e) {\n        return a(e, \"prev\");\n      });\n    }\n    a(\"init\", function () {\n      !1 === t.params.navigation.enabled ? m() : (p(), o());\n    }), a(\"toEdge fromEdge lock unlock\", function () {\n      o();\n    }), a(\"destroy\", function () {\n      u();\n    }), a(\"enable disable\", function () {\n      var _t$navigation3 = t.navigation,\n        e = _t$navigation3.nextEl,\n        s = _t$navigation3.prevEl;\n      e = r(e), s = r(s), [].concat(_toConsumableArray(e), _toConsumableArray(s)).filter(function (e) {\n        return !!e;\n      }).forEach(function (e) {\n        return e.classList[t.enabled ? \"remove\" : \"add\"](t.params.navigation.lockClass);\n      });\n    }), a(\"click\", function (e, s) {\n      var _t$navigation4 = t.navigation,\n        a = _t$navigation4.nextEl,\n        n = _t$navigation4.prevEl;\n      a = r(a), n = r(n);\n      var l = s.target;\n      if (t.params.navigation.hideOnClick && !n.includes(l) && !a.includes(l)) {\n        if (t.pagination && t.params.pagination && t.params.pagination.clickable && (t.pagination.el === l || t.pagination.el.contains(l))) return;\n        var _e43;\n        a.length ? _e43 = a[0].classList.contains(t.params.navigation.hiddenClass) : n.length && (_e43 = n[0].classList.contains(t.params.navigation.hiddenClass)), i(!0 === _e43 ? \"navigationShow\" : \"navigationHide\"), [].concat(_toConsumableArray(a), _toConsumableArray(n)).filter(function (e) {\n          return !!e;\n        }).forEach(function (e) {\n          return e.classList.toggle(t.params.navigation.hiddenClass);\n        });\n      }\n    });\n    var m = function m() {\n      var _t$el$classList;\n      (_t$el$classList = t.el.classList).add.apply(_t$el$classList, _toConsumableArray(t.params.navigation.navigationDisabledClass.split(\" \"))), u();\n    };\n    Object.assign(t.navigation, {\n      enable: function enable() {\n        var _t$el$classList2;\n        (_t$el$classList2 = t.el.classList).remove.apply(_t$el$classList2, _toConsumableArray(t.params.navigation.navigationDisabledClass.split(\" \"))), p(), o();\n      },\n      disable: m,\n      update: o,\n      init: p,\n      destroy: u\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on,\n      i = e.emit;\n    var r = \"swiper-pagination\";\n    var n;\n    s({\n      pagination: {\n        el: null,\n        bulletElement: \"span\",\n        clickable: !1,\n        hideOnClick: !1,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: !1,\n        type: \"bullets\",\n        dynamicBullets: !1,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function formatFractionCurrent(e) {\n          return e;\n        },\n        formatFractionTotal: function formatFractionTotal(e) {\n          return e;\n        },\n        bulletClass: \"\".concat(r, \"-bullet\"),\n        bulletActiveClass: \"\".concat(r, \"-bullet-active\"),\n        modifierClass: \"\".concat(r, \"-\"),\n        currentClass: \"\".concat(r, \"-current\"),\n        totalClass: \"\".concat(r, \"-total\"),\n        hiddenClass: \"\".concat(r, \"-hidden\"),\n        progressbarFillClass: \"\".concat(r, \"-progressbar-fill\"),\n        progressbarOppositeClass: \"\".concat(r, \"-progressbar-opposite\"),\n        clickableClass: \"\".concat(r, \"-clickable\"),\n        lockClass: \"\".concat(r, \"-lock\"),\n        horizontalClass: \"\".concat(r, \"-horizontal\"),\n        verticalClass: \"\".concat(r, \"-vertical\"),\n        paginationDisabledClass: \"\".concat(r, \"-disabled\")\n      }\n    }), t.pagination = {\n      el: null,\n      bullets: []\n    };\n    var l = 0;\n    var o = function o(e) {\n      return Array.isArray(e) || (e = [e].filter(function (e) {\n        return !!e;\n      })), e;\n    };\n    function d() {\n      return !t.params.pagination.el || !t.pagination.el || Array.isArray(t.pagination.el) && 0 === t.pagination.el.length;\n    }\n    function c(e, s) {\n      var a = t.params.pagination.bulletActiveClass;\n      e && (e = e[(\"prev\" === s ? \"previous\" : \"next\") + \"ElementSibling\"]) && (e.classList.add(\"\".concat(a, \"-\").concat(s)), (e = e[(\"prev\" === s ? \"previous\" : \"next\") + \"ElementSibling\"]) && e.classList.add(\"\".concat(a, \"-\").concat(s, \"-\").concat(s)));\n    }\n    function p(e) {\n      var s = e.target.closest(te(t.params.pagination.bulletClass));\n      if (!s) return;\n      e.preventDefault();\n      var a = b(s) * t.params.slidesPerGroup;\n      if (t.params.loop) {\n        if (t.realIndex === a) return;\n        var _e44 = t.getSlideIndexByData(a),\n          _s28 = t.getSlideIndexByData(t.realIndex);\n        _e44 > t.slides.length - t.loopedSlides && t.loopFix({\n          direction: _e44 > _s28 ? \"next\" : \"prev\",\n          activeSlideIndex: _e44,\n          slideTo: !1\n        }), t.slideToLoop(a);\n      } else t.slideTo(a);\n    }\n    function u() {\n      var e = t.rtl,\n        s = t.params.pagination;\n      if (d()) return;\n      var a,\n        r,\n        p = t.pagination.el;\n      p = o(p);\n      var u = t.virtual && t.params.virtual.enabled ? t.virtual.slides.length : t.slides.length,\n        m = t.params.loop ? Math.ceil(u / t.params.slidesPerGroup) : t.snapGrid.length;\n      if (t.params.loop ? (r = t.previousRealIndex || 0, a = t.params.slidesPerGroup > 1 ? Math.floor(t.realIndex / t.params.slidesPerGroup) : t.realIndex) : void 0 !== t.snapIndex ? (a = t.snapIndex, r = t.previousSnapIndex) : (r = t.previousIndex || 0, a = t.activeIndex || 0), \"bullets\" === s.type && t.pagination.bullets && t.pagination.bullets.length > 0) {\n        var _i12 = t.pagination.bullets;\n        var _o6, _d3, _u2;\n        if (s.dynamicBullets && (n = x(_i12[0], t.isHorizontal() ? \"width\" : \"height\", !0), p.forEach(function (e) {\n          e.style[t.isHorizontal() ? \"width\" : \"height\"] = n * (s.dynamicMainBullets + 4) + \"px\";\n        }), s.dynamicMainBullets > 1 && void 0 !== r && (l += a - (r || 0), l > s.dynamicMainBullets - 1 ? l = s.dynamicMainBullets - 1 : l < 0 && (l = 0)), _o6 = Math.max(a - l, 0), _d3 = _o6 + (Math.min(_i12.length, s.dynamicMainBullets) - 1), _u2 = (_d3 + _o6) / 2), _i12.forEach(function (e) {\n          var _e$classList4;\n          var t = _toConsumableArray([\"\", \"-next\", \"-next-next\", \"-prev\", \"-prev-prev\", \"-main\"].map(function (e) {\n            return \"\".concat(s.bulletActiveClass).concat(e);\n          })).map(function (e) {\n            return \"string\" == typeof e && e.includes(\" \") ? e.split(\" \") : e;\n          }).flat();\n          (_e$classList4 = e.classList).remove.apply(_e$classList4, _toConsumableArray(t));\n        }), p.length > 1) _i12.forEach(function (e) {\n          var _e$classList5, _e$classList6;\n          var i = b(e);\n          i === a ? (_e$classList5 = e.classList).add.apply(_e$classList5, _toConsumableArray(s.bulletActiveClass.split(\" \"))) : t.isElement && e.setAttribute(\"part\", \"bullet\"), s.dynamicBullets && (i >= _o6 && i <= _d3 && (_e$classList6 = e.classList).add.apply(_e$classList6, _toConsumableArray(\"\".concat(s.bulletActiveClass, \"-main\").split(\" \"))), i === _o6 && c(e, \"prev\"), i === _d3 && c(e, \"next\"));\n        });else {\n          var _e45$classList;\n          var _e45 = _i12[a];\n          if (_e45 && (_e45$classList = _e45.classList).add.apply(_e45$classList, _toConsumableArray(s.bulletActiveClass.split(\" \"))), t.isElement && _i12.forEach(function (e, t) {\n            e.setAttribute(\"part\", t === a ? \"bullet-active\" : \"bullet\");\n          }), s.dynamicBullets) {\n            var _e46 = _i12[_o6],\n              _t38 = _i12[_d3];\n            for (var _e47 = _o6; _e47 <= _d3; _e47 += 1) {\n              var _i12$_e47$classList;\n              _i12[_e47] && (_i12$_e47$classList = _i12[_e47].classList).add.apply(_i12$_e47$classList, _toConsumableArray(\"\".concat(s.bulletActiveClass, \"-main\").split(\" \")));\n            }\n            c(_e46, \"prev\"), c(_t38, \"next\");\n          }\n        }\n        if (s.dynamicBullets) {\n          var _a17 = Math.min(_i12.length, s.dynamicMainBullets + 4),\n            _r9 = (n * _a17 - n) / 2 - _u2 * n,\n            _l6 = e ? \"right\" : \"left\";\n          _i12.forEach(function (e) {\n            e.style[t.isHorizontal() ? _l6 : \"top\"] = \"\".concat(_r9, \"px\");\n          });\n        }\n      }\n      p.forEach(function (e, r) {\n        if (\"fraction\" === s.type && (e.querySelectorAll(te(s.currentClass)).forEach(function (e) {\n          e.textContent = s.formatFractionCurrent(a + 1);\n        }), e.querySelectorAll(te(s.totalClass)).forEach(function (e) {\n          e.textContent = s.formatFractionTotal(m);\n        })), \"progressbar\" === s.type) {\n          var _i13;\n          _i13 = s.progressbarOpposite ? t.isHorizontal() ? \"vertical\" : \"horizontal\" : t.isHorizontal() ? \"horizontal\" : \"vertical\";\n          var _r10 = (a + 1) / m;\n          var _n6 = 1,\n            _l7 = 1;\n          \"horizontal\" === _i13 ? _n6 = _r10 : _l7 = _r10, e.querySelectorAll(te(s.progressbarFillClass)).forEach(function (e) {\n            e.style.transform = \"translate3d(0,0,0) scaleX(\".concat(_n6, \") scaleY(\").concat(_l7, \")\"), e.style.transitionDuration = \"\".concat(t.params.speed, \"ms\");\n          });\n        }\n        \"custom\" === s.type && s.renderCustom ? (e.innerHTML = s.renderCustom(t, a + 1, m), 0 === r && i(\"paginationRender\", e)) : (0 === r && i(\"paginationRender\", e), i(\"paginationUpdate\", e)), t.params.watchOverflow && t.enabled && e.classList[t.isLocked ? \"add\" : \"remove\"](s.lockClass);\n      });\n    }\n    function m() {\n      var e = t.params.pagination;\n      if (d()) return;\n      var s = t.virtual && t.params.virtual.enabled ? t.virtual.slides.length : t.slides.length;\n      var a = t.pagination.el;\n      a = o(a);\n      var r = \"\";\n      if (\"bullets\" === e.type) {\n        var _a18 = t.params.loop ? Math.ceil(s / t.params.slidesPerGroup) : t.snapGrid.length;\n        t.params.freeMode && t.params.freeMode.enabled && _a18 > s && (_a18 = s);\n        for (var _s29 = 0; _s29 < _a18; _s29 += 1) e.renderBullet ? r += e.renderBullet.call(t, _s29, e.bulletClass) : r += \"<\".concat(e.bulletElement, \" \").concat(t.isElement ? 'part=\"bullet\"' : \"\", \" class=\\\"\").concat(e.bulletClass, \"\\\"></\").concat(e.bulletElement, \">\");\n      }\n      \"fraction\" === e.type && (r = e.renderFraction ? e.renderFraction.call(t, e.currentClass, e.totalClass) : \"<span class=\\\"\".concat(e.currentClass, \"\\\"></span> / <span class=\\\"\").concat(e.totalClass, \"\\\"></span>\")), \"progressbar\" === e.type && (r = e.renderProgressbar ? e.renderProgressbar.call(t, e.progressbarFillClass) : \"<span class=\\\"\".concat(e.progressbarFillClass, \"\\\"></span>\")), t.pagination.bullets = [], a.forEach(function (s) {\n        var _t$pagination$bullets;\n        \"custom\" !== e.type && (s.innerHTML = r || \"\"), \"bullets\" === e.type && (_t$pagination$bullets = t.pagination.bullets).push.apply(_t$pagination$bullets, _toConsumableArray(s.querySelectorAll(te(e.bulletClass))));\n      }), \"custom\" !== e.type && i(\"paginationRender\", a[0]);\n    }\n    function h() {\n      t.params.pagination = ee(t, t.originalParams.pagination, t.params.pagination, {\n        el: \"swiper-pagination\"\n      });\n      var e = t.params.pagination;\n      if (!e.el) return;\n      var s;\n      \"string\" == typeof e.el && t.isElement && (s = t.el.shadowRoot.querySelector(e.el)), s || \"string\" != typeof e.el || (s = _toConsumableArray(document.querySelectorAll(e.el))), s || (s = e.el), s && 0 !== s.length && (t.params.uniqueNavElements && \"string\" == typeof e.el && Array.isArray(s) && s.length > 1 && (s = _toConsumableArray(t.el.querySelectorAll(e.el)), s.length > 1 && (s = s.filter(function (e) {\n        return y(e, \".swiper\")[0] === t.el;\n      })[0])), Array.isArray(s) && 1 === s.length && (s = s[0]), Object.assign(t.pagination, {\n        el: s\n      }), s = o(s), s.forEach(function (s) {\n        \"bullets\" === e.type && e.clickable && s.classList.add(e.clickableClass), s.classList.add(e.modifierClass + e.type), s.classList.add(t.isHorizontal() ? e.horizontalClass : e.verticalClass), \"bullets\" === e.type && e.dynamicBullets && (s.classList.add(\"\".concat(e.modifierClass).concat(e.type, \"-dynamic\")), l = 0, e.dynamicMainBullets < 1 && (e.dynamicMainBullets = 1)), \"progressbar\" === e.type && e.progressbarOpposite && s.classList.add(e.progressbarOppositeClass), e.clickable && s.addEventListener(\"click\", p), t.enabled || s.classList.add(e.lockClass);\n      }));\n    }\n    function f() {\n      var e = t.params.pagination;\n      if (d()) return;\n      var s = t.pagination.el;\n      s && (s = o(s), s.forEach(function (s) {\n        s.classList.remove(e.hiddenClass), s.classList.remove(e.modifierClass + e.type), s.classList.remove(t.isHorizontal() ? e.horizontalClass : e.verticalClass), e.clickable && s.removeEventListener(\"click\", p);\n      })), t.pagination.bullets && t.pagination.bullets.forEach(function (t) {\n        var _t$classList;\n        return (_t$classList = t.classList).remove.apply(_t$classList, _toConsumableArray(e.bulletActiveClass.split(\" \")));\n      });\n    }\n    a(\"changeDirection\", function () {\n      if (!t.pagination || !t.pagination.el) return;\n      var e = t.params.pagination;\n      var s = t.pagination.el;\n      s = o(s), s.forEach(function (s) {\n        s.classList.remove(e.horizontalClass, e.verticalClass), s.classList.add(t.isHorizontal() ? e.horizontalClass : e.verticalClass);\n      });\n    }), a(\"init\", function () {\n      !1 === t.params.pagination.enabled ? g() : (h(), m(), u());\n    }), a(\"activeIndexChange\", function () {\n      void 0 === t.snapIndex && u();\n    }), a(\"snapIndexChange\", function () {\n      u();\n    }), a(\"snapGridLengthChange\", function () {\n      m(), u();\n    }), a(\"destroy\", function () {\n      f();\n    }), a(\"enable disable\", function () {\n      var e = t.pagination.el;\n      e && (e = o(e), e.forEach(function (e) {\n        return e.classList[t.enabled ? \"remove\" : \"add\"](t.params.pagination.lockClass);\n      }));\n    }), a(\"lock unlock\", function () {\n      u();\n    }), a(\"click\", function (e, s) {\n      var a = s.target;\n      var r = t.pagination.el;\n      if (Array.isArray(r) || (r = [r].filter(function (e) {\n        return !!e;\n      })), t.params.pagination.el && t.params.pagination.hideOnClick && r && r.length > 0 && !a.classList.contains(t.params.pagination.bulletClass)) {\n        if (t.navigation && (t.navigation.nextEl && a === t.navigation.nextEl || t.navigation.prevEl && a === t.navigation.prevEl)) return;\n        var _e48 = r[0].classList.contains(t.params.pagination.hiddenClass);\n        i(!0 === _e48 ? \"paginationShow\" : \"paginationHide\"), r.forEach(function (e) {\n          return e.classList.toggle(t.params.pagination.hiddenClass);\n        });\n      }\n    });\n    var g = function g() {\n      t.el.classList.add(t.params.pagination.paginationDisabledClass);\n      var e = t.pagination.el;\n      e && (e = o(e), e.forEach(function (e) {\n        return e.classList.add(t.params.pagination.paginationDisabledClass);\n      })), f();\n    };\n    Object.assign(t.pagination, {\n      enable: function enable() {\n        t.el.classList.remove(t.params.pagination.paginationDisabledClass);\n        var e = t.pagination.el;\n        e && (e = o(e), e.forEach(function (e) {\n          return e.classList.remove(t.params.pagination.paginationDisabledClass);\n        })), h(), m(), u();\n      },\n      disable: g,\n      render: m,\n      update: u,\n      init: h,\n      destroy: f\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      i = e.on,\n      r = e.emit;\n    var l = a();\n    var o,\n      d,\n      c,\n      p,\n      u = !1,\n      m = null,\n      h = null;\n    function f() {\n      if (!t.params.scrollbar.el || !t.scrollbar.el) return;\n      var e = t.scrollbar,\n        s = t.rtlTranslate,\n        a = e.dragEl,\n        i = e.el,\n        r = t.params.scrollbar,\n        n = t.params.loop ? t.progressLoop : t.progress;\n      var l = d,\n        o = (c - d) * n;\n      s ? (o = -o, o > 0 ? (l = d - o, o = 0) : -o + d > c && (l = c + o)) : o < 0 ? (l = d + o, o = 0) : o + d > c && (l = c - o), t.isHorizontal() ? (a.style.transform = \"translate3d(\".concat(o, \"px, 0, 0)\"), a.style.width = \"\".concat(l, \"px\")) : (a.style.transform = \"translate3d(0px, \".concat(o, \"px, 0)\"), a.style.height = \"\".concat(l, \"px\")), r.hide && (clearTimeout(m), i.style.opacity = 1, m = setTimeout(function () {\n        i.style.opacity = 0, i.style.transitionDuration = \"400ms\";\n      }, 1e3));\n    }\n    function w() {\n      if (!t.params.scrollbar.el || !t.scrollbar.el) return;\n      var e = t.scrollbar,\n        s = e.dragEl,\n        a = e.el;\n      s.style.width = \"\", s.style.height = \"\", c = t.isHorizontal() ? a.offsetWidth : a.offsetHeight, p = t.size / (t.virtualSize + t.params.slidesOffsetBefore - (t.params.centeredSlides ? t.snapGrid[0] : 0)), d = \"auto\" === t.params.scrollbar.dragSize ? c * p : parseInt(t.params.scrollbar.dragSize, 10), t.isHorizontal() ? s.style.width = \"\".concat(d, \"px\") : s.style.height = \"\".concat(d, \"px\"), a.style.display = p >= 1 ? \"none\" : \"\", t.params.scrollbar.hide && (a.style.opacity = 0), t.params.watchOverflow && t.enabled && e.el.classList[t.isLocked ? \"add\" : \"remove\"](t.params.scrollbar.lockClass);\n    }\n    function b(e) {\n      return t.isHorizontal() ? e.clientX : e.clientY;\n    }\n    function y(e) {\n      var s = t.scrollbar,\n        a = t.rtlTranslate,\n        i = s.el;\n      var r;\n      r = (b(e) - v(i)[t.isHorizontal() ? \"left\" : \"top\"] - (null !== o ? o : d / 2)) / (c - d), r = Math.max(Math.min(r, 1), 0), a && (r = 1 - r);\n      var n = t.minTranslate() + (t.maxTranslate() - t.minTranslate()) * r;\n      t.updateProgress(n), t.setTranslate(n), t.updateActiveIndex(), t.updateSlidesClasses();\n    }\n    function E(e) {\n      var s = t.params.scrollbar,\n        a = t.scrollbar,\n        i = t.wrapperEl,\n        n = a.el,\n        l = a.dragEl;\n      u = !0, o = e.target === l ? b(e) - e.target.getBoundingClientRect()[t.isHorizontal() ? \"left\" : \"top\"] : null, e.preventDefault(), e.stopPropagation(), i.style.transitionDuration = \"100ms\", l.style.transitionDuration = \"100ms\", y(e), clearTimeout(h), n.style.transitionDuration = \"0ms\", s.hide && (n.style.opacity = 1), t.params.cssMode && (t.wrapperEl.style[\"scroll-snap-type\"] = \"none\"), r(\"scrollbarDragStart\", e);\n    }\n    function x(e) {\n      var s = t.scrollbar,\n        a = t.wrapperEl,\n        i = s.el,\n        n = s.dragEl;\n      u && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, y(e), a.style.transitionDuration = \"0ms\", i.style.transitionDuration = \"0ms\", n.style.transitionDuration = \"0ms\", r(\"scrollbarDragMove\", e));\n    }\n    function S(e) {\n      var s = t.params.scrollbar,\n        a = t.scrollbar,\n        i = t.wrapperEl,\n        l = a.el;\n      u && (u = !1, t.params.cssMode && (t.wrapperEl.style[\"scroll-snap-type\"] = \"\", i.style.transitionDuration = \"\"), s.hide && (clearTimeout(h), h = n(function () {\n        l.style.opacity = 0, l.style.transitionDuration = \"400ms\";\n      }, 1e3)), r(\"scrollbarDragEnd\", e), s.snapOnRelease && t.slideToClosest());\n    }\n    function T(e) {\n      var s = t.scrollbar,\n        a = t.params,\n        i = s.el;\n      if (!i) return;\n      var r = i,\n        n = !!a.passiveListeners && {\n          passive: !1,\n          capture: !1\n        },\n        o = !!a.passiveListeners && {\n          passive: !0,\n          capture: !1\n        };\n      if (!r) return;\n      var d = \"on\" === e ? \"addEventListener\" : \"removeEventListener\";\n      r[d](\"pointerdown\", E, n), l[d](\"pointermove\", x, n), l[d](\"pointerup\", S, o);\n    }\n    function M() {\n      var e = t.scrollbar,\n        s = t.el;\n      t.params.scrollbar = ee(t, t.originalParams.scrollbar, t.params.scrollbar, {\n        el: \"swiper-scrollbar\"\n      });\n      var a = t.params.scrollbar;\n      if (!a.el) return;\n      var i, r;\n      \"string\" == typeof a.el && t.isElement && (i = t.el.shadowRoot.querySelector(a.el)), i || \"string\" != typeof a.el ? i || (i = a.el) : i = l.querySelectorAll(a.el), t.params.uniqueNavElements && \"string\" == typeof a.el && i.length > 1 && 1 === s.querySelectorAll(a.el).length && (i = s.querySelector(a.el)), i.length > 0 && (i = i[0]), i.classList.add(t.isHorizontal() ? a.horizontalClass : a.verticalClass), i && (r = i.querySelector(\".\".concat(t.params.scrollbar.dragClass)), r || (r = g(\"div\", t.params.scrollbar.dragClass), i.append(r))), Object.assign(e, {\n        el: i,\n        dragEl: r\n      }), a.draggable && t.params.scrollbar.el && t.scrollbar.el && T(\"on\"), i && i.classList[t.enabled ? \"remove\" : \"add\"](t.params.scrollbar.lockClass);\n    }\n    function C() {\n      var e = t.params.scrollbar,\n        s = t.scrollbar.el;\n      s && s.classList.remove(t.isHorizontal() ? e.horizontalClass : e.verticalClass), t.params.scrollbar.el && t.scrollbar.el && T(\"off\");\n    }\n    s({\n      scrollbar: {\n        el: null,\n        dragSize: \"auto\",\n        hide: !1,\n        draggable: !1,\n        snapOnRelease: !0,\n        lockClass: \"swiper-scrollbar-lock\",\n        dragClass: \"swiper-scrollbar-drag\",\n        scrollbarDisabledClass: \"swiper-scrollbar-disabled\",\n        horizontalClass: \"swiper-scrollbar-horizontal\",\n        verticalClass: \"swiper-scrollbar-vertical\"\n      }\n    }), t.scrollbar = {\n      el: null,\n      dragEl: null\n    }, i(\"init\", function () {\n      !1 === t.params.scrollbar.enabled ? P() : (M(), w(), f());\n    }), i(\"update resize observerUpdate lock unlock\", function () {\n      w();\n    }), i(\"setTranslate\", function () {\n      f();\n    }), i(\"setTransition\", function (e, s) {\n      !function (e) {\n        t.params.scrollbar.el && t.scrollbar.el && (t.scrollbar.dragEl.style.transitionDuration = \"\".concat(e, \"ms\"));\n      }(s);\n    }), i(\"enable disable\", function () {\n      var e = t.scrollbar.el;\n      e && e.classList[t.enabled ? \"remove\" : \"add\"](t.params.scrollbar.lockClass);\n    }), i(\"destroy\", function () {\n      C();\n    });\n    var P = function P() {\n      t.el.classList.add(t.params.scrollbar.scrollbarDisabledClass), t.scrollbar.el && t.scrollbar.el.classList.add(t.params.scrollbar.scrollbarDisabledClass), C();\n    };\n    Object.assign(t.scrollbar, {\n      enable: function enable() {\n        t.el.classList.remove(t.params.scrollbar.scrollbarDisabledClass), t.scrollbar.el && t.scrollbar.el.classList.remove(t.params.scrollbar.scrollbarDisabledClass), M(), w(), f();\n      },\n      disable: P,\n      updateSize: w,\n      setTranslate: f,\n      init: M,\n      destroy: C\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    s({\n      parallax: {\n        enabled: !1\n      }\n    });\n    var i = function i(e, s) {\n        var a = t.rtl,\n          i = a ? -1 : 1,\n          r = e.getAttribute(\"data-swiper-parallax\") || \"0\";\n        var n = e.getAttribute(\"data-swiper-parallax-x\"),\n          l = e.getAttribute(\"data-swiper-parallax-y\");\n        var o = e.getAttribute(\"data-swiper-parallax-scale\"),\n          d = e.getAttribute(\"data-swiper-parallax-opacity\"),\n          c = e.getAttribute(\"data-swiper-parallax-rotate\");\n        if (n || l ? (n = n || \"0\", l = l || \"0\") : t.isHorizontal() ? (n = r, l = \"0\") : (l = r, n = \"0\"), n = n.indexOf(\"%\") >= 0 ? parseInt(n, 10) * s * i + \"%\" : n * s * i + \"px\", l = l.indexOf(\"%\") >= 0 ? parseInt(l, 10) * s + \"%\" : l * s + \"px\", null != d) {\n          var _t39 = d - (d - 1) * (1 - Math.abs(s));\n          e.style.opacity = _t39;\n        }\n        var p = \"translate3d(\".concat(n, \", \").concat(l, \", 0px)\");\n        if (null != o) {\n          p += \" scale(\".concat(o - (o - 1) * (1 - Math.abs(s)), \")\");\n        }\n        if (c && null != c) {\n          p += \" rotate(\".concat(c * s * -1, \"deg)\");\n        }\n        e.style.transform = p;\n      },\n      r = function r() {\n        var e = t.el,\n          s = t.slides,\n          a = t.progress,\n          r = t.snapGrid;\n        f(e, \"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").forEach(function (e) {\n          i(e, a);\n        }), s.forEach(function (e, s) {\n          var n = e.progress;\n          t.params.slidesPerGroup > 1 && \"auto\" !== t.params.slidesPerView && (n += Math.ceil(s / 2) - a * (r.length - 1)), n = Math.min(Math.max(n, -1), 1), e.querySelectorAll(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]\").forEach(function (e) {\n            i(e, n);\n          });\n        });\n      };\n    a(\"beforeInit\", function () {\n      t.params.parallax.enabled && (t.params.watchSlidesProgress = !0, t.originalParams.watchSlidesProgress = !0);\n    }), a(\"init\", function () {\n      t.params.parallax.enabled && r();\n    }), a(\"setTranslate\", function () {\n      t.params.parallax.enabled && r();\n    }), a(\"setTransition\", function (e, s) {\n      t.params.parallax.enabled && function (e) {\n        void 0 === e && (e = t.params.speed);\n        var s = t.el;\n        s.querySelectorAll(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").forEach(function (t) {\n          var s = parseInt(t.getAttribute(\"data-swiper-parallax-duration\"), 10) || e;\n          0 === e && (s = 0), t.style.transitionDuration = \"\".concat(s, \"ms\");\n        });\n      }(s);\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on,\n      i = e.emit;\n    var n = r();\n    s({\n      zoom: {\n        enabled: !1,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: !0,\n        containerClass: \"swiper-zoom-container\",\n        zoomedSlideClass: \"swiper-slide-zoomed\"\n      }\n    }), t.zoom = {\n      enabled: !1\n    };\n    var l,\n      d,\n      c = 1,\n      p = !1;\n    var u = [],\n      m = {\n        originX: 0,\n        originY: 0,\n        slideEl: void 0,\n        slideWidth: void 0,\n        slideHeight: void 0,\n        imageEl: void 0,\n        imageWrapEl: void 0,\n        maxRatio: 3\n      },\n      h = {\n        isTouched: void 0,\n        isMoved: void 0,\n        currentX: void 0,\n        currentY: void 0,\n        minX: void 0,\n        minY: void 0,\n        maxX: void 0,\n        maxY: void 0,\n        width: void 0,\n        height: void 0,\n        startX: void 0,\n        startY: void 0,\n        touchesStart: {},\n        touchesCurrent: {}\n      },\n      g = {\n        x: void 0,\n        y: void 0,\n        prevPositionX: void 0,\n        prevPositionY: void 0,\n        prevTime: void 0\n      };\n    var w = 1;\n    function b() {\n      if (u.length < 2) return 1;\n      var e = u[0].pageX,\n        t = u[0].pageY,\n        s = u[1].pageX,\n        a = u[1].pageY;\n      return Math.sqrt(Math.pow(s - e, 2) + Math.pow(a - t, 2));\n    }\n    function E(e) {\n      var s = t.isElement ? \"swiper-slide\" : \".\".concat(t.params.slideClass);\n      return !!e.target.matches(s) || t.slides.filter(function (t) {\n        return t.contains(e.target);\n      }).length > 0;\n    }\n    function x(e) {\n      if (\"mouse\" === e.pointerType && u.splice(0, u.length), !E(e)) return;\n      var s = t.params.zoom;\n      if (l = !1, d = !1, u.push(e), !(u.length < 2)) {\n        if (l = !0, m.scaleStart = b(), !m.slideEl) {\n          m.slideEl = e.target.closest(\".\".concat(t.params.slideClass, \", swiper-slide\")), m.slideEl || (m.slideEl = t.slides[t.activeIndex]);\n          var _a19 = m.slideEl.querySelector(\".\".concat(s.containerClass));\n          if (_a19 && (_a19 = _a19.querySelectorAll(\"picture, img, svg, canvas, .swiper-zoom-target\")[0]), m.imageEl = _a19, m.imageWrapEl = _a19 ? y(m.imageEl, \".\".concat(s.containerClass))[0] : void 0, !m.imageWrapEl) return void (m.imageEl = void 0);\n          m.maxRatio = m.imageWrapEl.getAttribute(\"data-swiper-zoom\") || s.maxRatio;\n        }\n        if (m.imageEl) {\n          var _ref3 = function () {\n              if (u.length < 2) return {\n                x: null,\n                y: null\n              };\n              var e = m.imageEl.getBoundingClientRect();\n              return [(u[0].pageX + (u[1].pageX - u[0].pageX) / 2 - e.x) / c, (u[0].pageY + (u[1].pageY - u[0].pageY) / 2 - e.y) / c];\n            }(),\n            _ref4 = _slicedToArray(_ref3, 2),\n            _e49 = _ref4[0],\n            _t40 = _ref4[1];\n          m.originX = _e49, m.originY = _t40, m.imageEl.style.transitionDuration = \"0ms\";\n        }\n        p = !0;\n      }\n    }\n    function S(e) {\n      if (!E(e)) return;\n      var s = t.params.zoom,\n        a = t.zoom,\n        i = u.findIndex(function (t) {\n          return t.pointerId === e.pointerId;\n        });\n      i >= 0 && (u[i] = e), u.length < 2 || (d = !0, m.scaleMove = b(), m.imageEl && (a.scale = m.scaleMove / m.scaleStart * c, a.scale > m.maxRatio && (a.scale = m.maxRatio - 1 + Math.pow(a.scale - m.maxRatio + 1, .5)), a.scale < s.minRatio && (a.scale = s.minRatio + 1 - Math.pow(s.minRatio - a.scale + 1, .5)), m.imageEl.style.transform = \"translate3d(0,0,0) scale(\".concat(a.scale, \")\")));\n    }\n    function T(e) {\n      if (!E(e)) return;\n      if (\"mouse\" === e.pointerType && \"pointerout\" === e.type) return;\n      var s = t.params.zoom,\n        a = t.zoom,\n        i = u.findIndex(function (t) {\n          return t.pointerId === e.pointerId;\n        });\n      i >= 0 && u.splice(i, 1), l && d && (l = !1, d = !1, m.imageEl && (a.scale = Math.max(Math.min(a.scale, m.maxRatio), s.minRatio), m.imageEl.style.transitionDuration = \"\".concat(t.params.speed, \"ms\"), m.imageEl.style.transform = \"translate3d(0,0,0) scale(\".concat(a.scale, \")\"), c = a.scale, p = !1, a.scale > 1 && m.slideEl ? m.slideEl.classList.add(\"\".concat(s.zoomedSlideClass)) : a.scale <= 1 && m.slideEl && m.slideEl.classList.remove(\"\".concat(s.zoomedSlideClass)), 1 === a.scale && (m.originX = 0, m.originY = 0, m.slideEl = void 0)));\n    }\n    function M(e) {\n      if (!E(e) || !function (e) {\n        var s = \".\".concat(t.params.zoom.containerClass);\n        return !!e.target.matches(s) || _toConsumableArray(t.el.querySelectorAll(s)).filter(function (t) {\n          return t.contains(e.target);\n        }).length > 0;\n      }(e)) return;\n      var s = t.zoom;\n      if (!m.imageEl) return;\n      if (!h.isTouched || !m.slideEl) return;\n      h.isMoved || (h.width = m.imageEl.offsetWidth, h.height = m.imageEl.offsetHeight, h.startX = o(m.imageWrapEl, \"x\") || 0, h.startY = o(m.imageWrapEl, \"y\") || 0, m.slideWidth = m.slideEl.offsetWidth, m.slideHeight = m.slideEl.offsetHeight, m.imageWrapEl.style.transitionDuration = \"0ms\");\n      var a = h.width * s.scale,\n        i = h.height * s.scale;\n      if (a < m.slideWidth && i < m.slideHeight) return;\n      h.minX = Math.min(m.slideWidth / 2 - a / 2, 0), h.maxX = -h.minX, h.minY = Math.min(m.slideHeight / 2 - i / 2, 0), h.maxY = -h.minY, h.touchesCurrent.x = u.length > 0 ? u[0].pageX : e.pageX, h.touchesCurrent.y = u.length > 0 ? u[0].pageY : e.pageY;\n      if (Math.max(Math.abs(h.touchesCurrent.x - h.touchesStart.x), Math.abs(h.touchesCurrent.y - h.touchesStart.y)) > 5 && (t.allowClick = !1), !h.isMoved && !p) {\n        if (t.isHorizontal() && (Math.floor(h.minX) === Math.floor(h.startX) && h.touchesCurrent.x < h.touchesStart.x || Math.floor(h.maxX) === Math.floor(h.startX) && h.touchesCurrent.x > h.touchesStart.x)) return void (h.isTouched = !1);\n        if (!t.isHorizontal() && (Math.floor(h.minY) === Math.floor(h.startY) && h.touchesCurrent.y < h.touchesStart.y || Math.floor(h.maxY) === Math.floor(h.startY) && h.touchesCurrent.y > h.touchesStart.y)) return void (h.isTouched = !1);\n      }\n      e.cancelable && e.preventDefault(), e.stopPropagation(), h.isMoved = !0;\n      var r = (s.scale - c) / (m.maxRatio - t.params.zoom.minRatio),\n        n = m.originX,\n        l = m.originY;\n      h.currentX = h.touchesCurrent.x - h.touchesStart.x + h.startX + r * (h.width - 2 * n), h.currentY = h.touchesCurrent.y - h.touchesStart.y + h.startY + r * (h.height - 2 * l), h.currentX < h.minX && (h.currentX = h.minX + 1 - Math.pow(h.minX - h.currentX + 1, .8)), h.currentX > h.maxX && (h.currentX = h.maxX - 1 + Math.pow(h.currentX - h.maxX + 1, .8)), h.currentY < h.minY && (h.currentY = h.minY + 1 - Math.pow(h.minY - h.currentY + 1, .8)), h.currentY > h.maxY && (h.currentY = h.maxY - 1 + Math.pow(h.currentY - h.maxY + 1, .8)), g.prevPositionX || (g.prevPositionX = h.touchesCurrent.x), g.prevPositionY || (g.prevPositionY = h.touchesCurrent.y), g.prevTime || (g.prevTime = Date.now()), g.x = (h.touchesCurrent.x - g.prevPositionX) / (Date.now() - g.prevTime) / 2, g.y = (h.touchesCurrent.y - g.prevPositionY) / (Date.now() - g.prevTime) / 2, Math.abs(h.touchesCurrent.x - g.prevPositionX) < 2 && (g.x = 0), Math.abs(h.touchesCurrent.y - g.prevPositionY) < 2 && (g.y = 0), g.prevPositionX = h.touchesCurrent.x, g.prevPositionY = h.touchesCurrent.y, g.prevTime = Date.now(), m.imageWrapEl.style.transform = \"translate3d(\".concat(h.currentX, \"px, \").concat(h.currentY, \"px,0)\");\n    }\n    function C() {\n      var e = t.zoom;\n      m.slideEl && t.activeIndex !== t.slides.indexOf(m.slideEl) && (m.imageEl && (m.imageEl.style.transform = \"translate3d(0,0,0) scale(1)\"), m.imageWrapEl && (m.imageWrapEl.style.transform = \"translate3d(0,0,0)\"), m.slideEl.classList.remove(\"\".concat(t.params.zoom.zoomedSlideClass)), e.scale = 1, c = 1, m.slideEl = void 0, m.imageEl = void 0, m.imageWrapEl = void 0, m.originX = 0, m.originY = 0);\n    }\n    function P(e) {\n      var s = t.zoom,\n        a = t.params.zoom;\n      if (!m.slideEl) {\n        e && e.target && (m.slideEl = e.target.closest(\".\".concat(t.params.slideClass, \", swiper-slide\"))), m.slideEl || (t.params.virtual && t.params.virtual.enabled && t.virtual ? m.slideEl = f(t.slidesEl, \".\".concat(t.params.slideActiveClass))[0] : m.slideEl = t.slides[t.activeIndex]);\n        var _s30 = m.slideEl.querySelector(\".\".concat(a.containerClass));\n        _s30 && (_s30 = _s30.querySelectorAll(\"picture, img, svg, canvas, .swiper-zoom-target\")[0]), m.imageEl = _s30, m.imageWrapEl = _s30 ? y(m.imageEl, \".\".concat(a.containerClass))[0] : void 0;\n      }\n      if (!m.imageEl || !m.imageWrapEl) return;\n      var i, r, l, o, d, p, u, g, w, b, E, x, S, T, M, C, P, L;\n      t.params.cssMode && (t.wrapperEl.style.overflow = \"hidden\", t.wrapperEl.style.touchAction = \"none\"), m.slideEl.classList.add(\"\".concat(a.zoomedSlideClass)), void 0 === h.touchesStart.x && e ? (i = e.pageX, r = e.pageY) : (i = h.touchesStart.x, r = h.touchesStart.y);\n      var z = \"number\" == typeof e ? e : null;\n      1 === c && z && (i = void 0, r = void 0), s.scale = z || m.imageWrapEl.getAttribute(\"data-swiper-zoom\") || a.maxRatio, c = z || m.imageWrapEl.getAttribute(\"data-swiper-zoom\") || a.maxRatio, !e || 1 === c && z ? (u = 0, g = 0) : (P = m.slideEl.offsetWidth, L = m.slideEl.offsetHeight, l = v(m.slideEl).left + n.scrollX, o = v(m.slideEl).top + n.scrollY, d = l + P / 2 - i, p = o + L / 2 - r, w = m.imageEl.offsetWidth, b = m.imageEl.offsetHeight, E = w * s.scale, x = b * s.scale, S = Math.min(P / 2 - E / 2, 0), T = Math.min(L / 2 - x / 2, 0), M = -S, C = -T, u = d * s.scale, g = p * s.scale, u < S && (u = S), u > M && (u = M), g < T && (g = T), g > C && (g = C)), z && 1 === s.scale && (m.originX = 0, m.originY = 0), m.imageWrapEl.style.transitionDuration = \"300ms\", m.imageWrapEl.style.transform = \"translate3d(\".concat(u, \"px, \").concat(g, \"px,0)\"), m.imageEl.style.transitionDuration = \"300ms\", m.imageEl.style.transform = \"translate3d(0,0,0) scale(\".concat(s.scale, \")\");\n    }\n    function L() {\n      var e = t.zoom,\n        s = t.params.zoom;\n      if (!m.slideEl) {\n        t.params.virtual && t.params.virtual.enabled && t.virtual ? m.slideEl = f(t.slidesEl, \".\".concat(t.params.slideActiveClass))[0] : m.slideEl = t.slides[t.activeIndex];\n        var _e50 = m.slideEl.querySelector(\".\".concat(s.containerClass));\n        _e50 && (_e50 = _e50.querySelectorAll(\"picture, img, svg, canvas, .swiper-zoom-target\")[0]), m.imageEl = _e50, m.imageWrapEl = _e50 ? y(m.imageEl, \".\".concat(s.containerClass))[0] : void 0;\n      }\n      m.imageEl && m.imageWrapEl && (t.params.cssMode && (t.wrapperEl.style.overflow = \"\", t.wrapperEl.style.touchAction = \"\"), e.scale = 1, c = 1, m.imageWrapEl.style.transitionDuration = \"300ms\", m.imageWrapEl.style.transform = \"translate3d(0,0,0)\", m.imageEl.style.transitionDuration = \"300ms\", m.imageEl.style.transform = \"translate3d(0,0,0) scale(1)\", m.slideEl.classList.remove(\"\".concat(s.zoomedSlideClass)), m.slideEl = void 0, m.originX = 0, m.originY = 0);\n    }\n    function z(e) {\n      var s = t.zoom;\n      s.scale && 1 !== s.scale ? L() : P(e);\n    }\n    function A() {\n      return {\n        passiveListener: !!t.params.passiveListeners && {\n          passive: !0,\n          capture: !1\n        },\n        activeListenerWithCapture: !t.params.passiveListeners || {\n          passive: !1,\n          capture: !0\n        }\n      };\n    }\n    function $() {\n      var e = t.zoom;\n      if (e.enabled) return;\n      e.enabled = !0;\n      var _A = A(),\n        s = _A.passiveListener,\n        a = _A.activeListenerWithCapture;\n      t.wrapperEl.addEventListener(\"pointerdown\", x, s), t.wrapperEl.addEventListener(\"pointermove\", S, a), [\"pointerup\", \"pointercancel\", \"pointerout\"].forEach(function (e) {\n        t.wrapperEl.addEventListener(e, T, s);\n      }), t.wrapperEl.addEventListener(\"pointermove\", M, a);\n    }\n    function I() {\n      var e = t.zoom;\n      if (!e.enabled) return;\n      e.enabled = !1;\n      var _A2 = A(),\n        s = _A2.passiveListener,\n        a = _A2.activeListenerWithCapture;\n      t.wrapperEl.removeEventListener(\"pointerdown\", x, s), t.wrapperEl.removeEventListener(\"pointermove\", S, a), [\"pointerup\", \"pointercancel\", \"pointerout\"].forEach(function (e) {\n        t.wrapperEl.removeEventListener(e, T, s);\n      }), t.wrapperEl.removeEventListener(\"pointermove\", M, a);\n    }\n    Object.defineProperty(t.zoom, \"scale\", {\n      get: function get() {\n        return w;\n      },\n      set: function set(e) {\n        if (w !== e) {\n          var _t41 = m.imageEl,\n            _s31 = m.slideEl;\n          i(\"zoomChange\", e, _t41, _s31);\n        }\n        w = e;\n      }\n    }), a(\"init\", function () {\n      t.params.zoom.enabled && $();\n    }), a(\"destroy\", function () {\n      I();\n    }), a(\"touchStart\", function (e, s) {\n      t.zoom.enabled && function (e) {\n        var s = t.device;\n        if (!m.imageEl) return;\n        if (h.isTouched) return;\n        s.android && e.cancelable && e.preventDefault(), h.isTouched = !0;\n        var a = u.length > 0 ? u[0] : e;\n        h.touchesStart.x = a.pageX, h.touchesStart.y = a.pageY;\n      }(s);\n    }), a(\"touchEnd\", function (e, s) {\n      t.zoom.enabled && function () {\n        var e = t.zoom;\n        if (!m.imageEl) return;\n        if (!h.isTouched || !h.isMoved) return h.isTouched = !1, void (h.isMoved = !1);\n        h.isTouched = !1, h.isMoved = !1;\n        var s = 300,\n          a = 300;\n        var i = g.x * s,\n          r = h.currentX + i,\n          n = g.y * a,\n          l = h.currentY + n;\n        0 !== g.x && (s = Math.abs((r - h.currentX) / g.x)), 0 !== g.y && (a = Math.abs((l - h.currentY) / g.y));\n        var o = Math.max(s, a);\n        h.currentX = r, h.currentY = l;\n        var d = h.width * e.scale,\n          c = h.height * e.scale;\n        h.minX = Math.min(m.slideWidth / 2 - d / 2, 0), h.maxX = -h.minX, h.minY = Math.min(m.slideHeight / 2 - c / 2, 0), h.maxY = -h.minY, h.currentX = Math.max(Math.min(h.currentX, h.maxX), h.minX), h.currentY = Math.max(Math.min(h.currentY, h.maxY), h.minY), m.imageWrapEl.style.transitionDuration = \"\".concat(o, \"ms\"), m.imageWrapEl.style.transform = \"translate3d(\".concat(h.currentX, \"px, \").concat(h.currentY, \"px,0)\");\n      }();\n    }), a(\"doubleTap\", function (e, s) {\n      !t.animating && t.params.zoom.enabled && t.zoom.enabled && t.params.zoom.toggle && z(s);\n    }), a(\"transitionEnd\", function () {\n      t.zoom.enabled && t.params.zoom.enabled && C();\n    }), a(\"slideChange\", function () {\n      t.zoom.enabled && t.params.zoom.enabled && t.params.cssMode && C();\n    }), Object.assign(t.zoom, {\n      enable: $,\n      disable: I,\n      in: P,\n      out: L,\n      toggle: z\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    function i(e, t) {\n      var s = function () {\n        var e, t, s;\n        return function (a, i) {\n          for (t = -1, e = a.length; e - t > 1;) s = e + t >> 1, a[s] <= i ? t = s : e = s;\n          return e;\n        };\n      }();\n      var a, i;\n      return this.x = e, this.y = t, this.lastIndex = e.length - 1, this.interpolate = function (e) {\n        return e ? (i = s(this.x, e), a = i - 1, (e - this.x[a]) * (this.y[i] - this.y[a]) / (this.x[i] - this.x[a]) + this.y[a]) : 0;\n      }, this;\n    }\n    function r() {\n      t.controller.control && t.controller.spline && (t.controller.spline = void 0, delete t.controller.spline);\n    }\n    s({\n      controller: {\n        control: void 0,\n        inverse: !1,\n        by: \"slide\"\n      }\n    }), t.controller = {\n      control: void 0\n    }, a(\"beforeInit\", function () {\n      if (\"undefined\" != typeof window && (\"string\" == typeof t.params.controller.control || t.params.controller.control instanceof HTMLElement)) {\n        var _e51 = document.querySelector(t.params.controller.control);\n        if (_e51 && _e51.swiper) t.controller.control = _e51.swiper;else if (_e51) {\n          var _s32 = function _s32(a) {\n            t.controller.control = a.detail[0], t.update(), _e51.removeEventListener(\"init\", _s32);\n          };\n          _e51.addEventListener(\"init\", _s32);\n        }\n      } else t.controller.control = t.params.controller.control;\n    }), a(\"update\", function () {\n      r();\n    }), a(\"resize\", function () {\n      r();\n    }), a(\"observerUpdate\", function () {\n      r();\n    }), a(\"setTranslate\", function (e, s, a) {\n      t.controller.control && !t.controller.control.destroyed && t.controller.setTranslate(s, a);\n    }), a(\"setTransition\", function (e, s, a) {\n      t.controller.control && !t.controller.control.destroyed && t.controller.setTransition(s, a);\n    }), Object.assign(t.controller, {\n      setTranslate: function setTranslate(e, s) {\n        var a = t.controller.control;\n        var r, n;\n        var l = t.constructor;\n        function o(e) {\n          if (e.destroyed) return;\n          var s = t.rtlTranslate ? -t.translate : t.translate;\n          \"slide\" === t.params.controller.by && (!function (e) {\n            t.controller.spline = t.params.loop ? new i(t.slidesGrid, e.slidesGrid) : new i(t.snapGrid, e.snapGrid);\n          }(e), n = -t.controller.spline.interpolate(-s)), n && \"container\" !== t.params.controller.by || (r = (e.maxTranslate() - e.minTranslate()) / (t.maxTranslate() - t.minTranslate()), !Number.isNaN(r) && Number.isFinite(r) || (r = 1), n = (s - t.minTranslate()) * r + e.minTranslate()), t.params.controller.inverse && (n = e.maxTranslate() - n), e.updateProgress(n), e.setTranslate(n, t), e.updateActiveIndex(), e.updateSlidesClasses();\n        }\n        if (Array.isArray(a)) for (var _e52 = 0; _e52 < a.length; _e52 += 1) a[_e52] !== s && a[_e52] instanceof l && o(a[_e52]);else a instanceof l && s !== a && o(a);\n      },\n      setTransition: function setTransition(e, s) {\n        var a = t.constructor,\n          i = t.controller.control;\n        var r;\n        function l(s) {\n          s.destroyed || (s.setTransition(e, t), 0 !== e && (s.transitionStart(), s.params.autoHeight && n(function () {\n            s.updateAutoHeight();\n          }), E(s.wrapperEl, function () {\n            i && s.transitionEnd();\n          })));\n        }\n        if (Array.isArray(i)) for (r = 0; r < i.length; r += 1) i[r] !== s && i[r] instanceof a && l(i[r]);else i instanceof a && s !== i && l(i);\n      }\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    s({\n      a11y: {\n        enabled: !0,\n        notificationClass: \"swiper-notification\",\n        prevSlideMessage: \"Previous slide\",\n        nextSlideMessage: \"Next slide\",\n        firstSlideMessage: \"This is the first slide\",\n        lastSlideMessage: \"This is the last slide\",\n        paginationBulletMessage: \"Go to slide {{index}}\",\n        slideLabelMessage: \"{{index}} / {{slidesLength}}\",\n        containerMessage: null,\n        containerRoleDescriptionMessage: null,\n        itemRoleDescriptionMessage: null,\n        slideRole: \"group\",\n        id: null\n      }\n    }), t.a11y = {\n      clicked: !1\n    };\n    var i = null;\n    function r(e) {\n      var t = i;\n      0 !== t.length && (t.innerHTML = \"\", t.innerHTML = e);\n    }\n    var n = function n(e) {\n      return Array.isArray(e) || (e = [e].filter(function (e) {\n        return !!e;\n      })), e;\n    };\n    function l(e) {\n      (e = n(e)).forEach(function (e) {\n        e.setAttribute(\"tabIndex\", \"0\");\n      });\n    }\n    function o(e) {\n      (e = n(e)).forEach(function (e) {\n        e.setAttribute(\"tabIndex\", \"-1\");\n      });\n    }\n    function d(e, t) {\n      (e = n(e)).forEach(function (e) {\n        e.setAttribute(\"role\", t);\n      });\n    }\n    function c(e, t) {\n      (e = n(e)).forEach(function (e) {\n        e.setAttribute(\"aria-roledescription\", t);\n      });\n    }\n    function p(e, t) {\n      (e = n(e)).forEach(function (e) {\n        e.setAttribute(\"aria-label\", t);\n      });\n    }\n    function u(e) {\n      (e = n(e)).forEach(function (e) {\n        e.setAttribute(\"aria-disabled\", !0);\n      });\n    }\n    function m(e) {\n      (e = n(e)).forEach(function (e) {\n        e.setAttribute(\"aria-disabled\", !1);\n      });\n    }\n    function h(e) {\n      if (13 !== e.keyCode && 32 !== e.keyCode) return;\n      var s = t.params.a11y,\n        a = e.target;\n      t.pagination && t.pagination.el && (a === t.pagination.el || t.pagination.el.contains(e.target)) && !e.target.matches(te(t.params.pagination.bulletClass)) || (t.navigation && t.navigation.nextEl && a === t.navigation.nextEl && (t.isEnd && !t.params.loop || t.slideNext(), t.isEnd ? r(s.lastSlideMessage) : r(s.nextSlideMessage)), t.navigation && t.navigation.prevEl && a === t.navigation.prevEl && (t.isBeginning && !t.params.loop || t.slidePrev(), t.isBeginning ? r(s.firstSlideMessage) : r(s.prevSlideMessage)), t.pagination && a.matches(te(t.params.pagination.bulletClass)) && a.click());\n    }\n    function f() {\n      return t.pagination && t.pagination.bullets && t.pagination.bullets.length;\n    }\n    function v() {\n      return f() && t.params.pagination.clickable;\n    }\n    var w = function w(e, t, s) {\n        l(e), \"BUTTON\" !== e.tagName && (d(e, \"button\"), e.addEventListener(\"keydown\", h)), p(e, s), function (e, t) {\n          (e = n(e)).forEach(function (e) {\n            e.setAttribute(\"aria-controls\", t);\n          });\n        }(e, t);\n      },\n      y = function y() {\n        t.a11y.clicked = !0;\n      },\n      E = function E() {\n        requestAnimationFrame(function () {\n          requestAnimationFrame(function () {\n            t.destroyed || (t.a11y.clicked = !1);\n          });\n        });\n      },\n      x = function x(e) {\n        if (t.a11y.clicked) return;\n        var s = e.target.closest(\".\".concat(t.params.slideClass, \", swiper-slide\"));\n        if (!s || !t.slides.includes(s)) return;\n        var a = t.slides.indexOf(s) === t.activeIndex,\n          i = t.params.watchSlidesProgress && t.visibleSlides && t.visibleSlides.includes(s);\n        a || i || e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents || (t.isHorizontal() ? t.el.scrollLeft = 0 : t.el.scrollTop = 0, t.slideTo(t.slides.indexOf(s), 0));\n      },\n      S = function S() {\n        var e = t.params.a11y;\n        e.itemRoleDescriptionMessage && c(t.slides, e.itemRoleDescriptionMessage), e.slideRole && d(t.slides, e.slideRole);\n        var s = t.slides.length;\n        e.slideLabelMessage && t.slides.forEach(function (a, i) {\n          var r = t.params.loop ? parseInt(a.getAttribute(\"data-swiper-slide-index\"), 10) : i;\n          p(a, e.slideLabelMessage.replace(/\\{\\{index\\}\\}/, r + 1).replace(/\\{\\{slidesLength\\}\\}/, s));\n        });\n      },\n      T = function T() {\n        var e = t.params.a11y;\n        t.isElement ? t.el.shadowEl.append(i) : t.el.append(i);\n        var s = t.el;\n        e.containerRoleDescriptionMessage && c(s, e.containerRoleDescriptionMessage), e.containerMessage && p(s, e.containerMessage);\n        var a = t.wrapperEl,\n          r = e.id || a.getAttribute(\"id\") || \"swiper-wrapper-\".concat((l = 16, void 0 === l && (l = 16), \"x\".repeat(l).replace(/x/g, function () {\n            return Math.round(16 * Math.random()).toString(16);\n          })));\n        var l;\n        var o = t.params.autoplay && t.params.autoplay.enabled ? \"off\" : \"polite\";\n        var d;\n        d = r, n(a).forEach(function (e) {\n          e.setAttribute(\"id\", d);\n        }), function (e, t) {\n          (e = n(e)).forEach(function (e) {\n            e.setAttribute(\"aria-live\", t);\n          });\n        }(a, o), S();\n        var _ref5 = t.navigation ? t.navigation : {},\n          u = _ref5.nextEl,\n          m = _ref5.prevEl;\n        if (u = n(u), m = n(m), u && u.forEach(function (t) {\n          return w(t, r, e.nextSlideMessage);\n        }), m && m.forEach(function (t) {\n          return w(t, r, e.prevSlideMessage);\n        }), v()) {\n          (Array.isArray(t.pagination.el) ? t.pagination.el : [t.pagination.el]).forEach(function (e) {\n            e.addEventListener(\"keydown\", h);\n          });\n        }\n        t.el.addEventListener(\"focus\", x, !0), t.el.addEventListener(\"pointerdown\", y, !0), t.el.addEventListener(\"pointerup\", E, !0);\n      };\n    a(\"beforeInit\", function () {\n      i = g(\"span\", t.params.a11y.notificationClass), i.setAttribute(\"aria-live\", \"assertive\"), i.setAttribute(\"aria-atomic\", \"true\");\n    }), a(\"afterInit\", function () {\n      t.params.a11y.enabled && T();\n    }), a(\"slidesLengthChange snapGridLengthChange slidesGridLengthChange\", function () {\n      t.params.a11y.enabled && S();\n    }), a(\"fromEdge toEdge afterInit lock unlock\", function () {\n      t.params.a11y.enabled && function () {\n        if (t.params.loop || t.params.rewind || !t.navigation) return;\n        var _t$navigation5 = t.navigation,\n          e = _t$navigation5.nextEl,\n          s = _t$navigation5.prevEl;\n        s && (t.isBeginning ? (u(s), o(s)) : (m(s), l(s))), e && (t.isEnd ? (u(e), o(e)) : (m(e), l(e)));\n      }();\n    }), a(\"paginationUpdate\", function () {\n      t.params.a11y.enabled && function () {\n        var e = t.params.a11y;\n        f() && t.pagination.bullets.forEach(function (s) {\n          t.params.pagination.clickable && (l(s), t.params.pagination.renderBullet || (d(s, \"button\"), p(s, e.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, b(s) + 1)))), s.matches(te(t.params.pagination.bulletActiveClass)) ? s.setAttribute(\"aria-current\", \"true\") : s.removeAttribute(\"aria-current\");\n        });\n      }();\n    }), a(\"destroy\", function () {\n      t.params.a11y.enabled && function () {\n        i && i.remove();\n        var _ref6 = t.navigation ? t.navigation : {},\n          e = _ref6.nextEl,\n          s = _ref6.prevEl;\n        e = n(e), s = n(s), e && e.forEach(function (e) {\n          return e.removeEventListener(\"keydown\", h);\n        }), s && s.forEach(function (e) {\n          return e.removeEventListener(\"keydown\", h);\n        }), v() && (Array.isArray(t.pagination.el) ? t.pagination.el : [t.pagination.el]).forEach(function (e) {\n          e.removeEventListener(\"keydown\", h);\n        });\n        t.el.removeEventListener(\"focus\", x, !0), t.el.removeEventListener(\"pointerdown\", y, !0), t.el.removeEventListener(\"pointerup\", E, !0);\n      }();\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    s({\n      history: {\n        enabled: !1,\n        root: \"\",\n        replaceState: !1,\n        key: \"slides\",\n        keepQuery: !1\n      }\n    });\n    var i = !1,\n      n = {};\n    var l = function l(e) {\n        return e.toString().replace(/\\s+/g, \"-\").replace(/[^\\w-]+/g, \"\").replace(/--+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n      },\n      o = function o(e) {\n        var t = r();\n        var s;\n        s = e ? new URL(e) : t.location;\n        var a = s.pathname.slice(1).split(\"/\").filter(function (e) {\n            return \"\" !== e;\n          }),\n          i = a.length;\n        return {\n          key: a[i - 2],\n          value: a[i - 1]\n        };\n      },\n      d = function d(e, s) {\n        var a = r();\n        if (!i || !t.params.history.enabled) return;\n        var n;\n        n = t.params.url ? new URL(t.params.url) : a.location;\n        var o = t.slides[s];\n        var d = l(o.getAttribute(\"data-history\"));\n        if (t.params.history.root.length > 0) {\n          var _s33 = t.params.history.root;\n          \"/\" === _s33[_s33.length - 1] && (_s33 = _s33.slice(0, _s33.length - 1)), d = \"\".concat(_s33, \"/\").concat(e ? \"\".concat(e, \"/\") : \"\").concat(d);\n        } else n.pathname.includes(e) || (d = \"\".concat(e ? \"\".concat(e, \"/\") : \"\").concat(d));\n        t.params.history.keepQuery && (d += n.search);\n        var c = a.history.state;\n        c && c.value === d || (t.params.history.replaceState ? a.history.replaceState({\n          value: d\n        }, null, d) : a.history.pushState({\n          value: d\n        }, null, d));\n      },\n      c = function c(e, s, a) {\n        if (s) for (var _i14 = 0, _r11 = t.slides.length; _i14 < _r11; _i14 += 1) {\n          var _r12 = t.slides[_i14];\n          if (l(_r12.getAttribute(\"data-history\")) === s) {\n            var _s34 = t.getSlideIndex(_r12);\n            t.slideTo(_s34, e, a);\n          }\n        } else t.slideTo(0, e, a);\n      },\n      p = function p() {\n        n = o(t.params.url), c(t.params.speed, n.value, !1);\n      };\n    a(\"init\", function () {\n      t.params.history.enabled && function () {\n        var e = r();\n        if (t.params.history) {\n          if (!e.history || !e.history.pushState) return t.params.history.enabled = !1, void (t.params.hashNavigation.enabled = !0);\n          i = !0, n = o(t.params.url), n.key || n.value ? (c(0, n.value, t.params.runCallbacksOnInit), t.params.history.replaceState || e.addEventListener(\"popstate\", p)) : t.params.history.replaceState || e.addEventListener(\"popstate\", p);\n        }\n      }();\n    }), a(\"destroy\", function () {\n      t.params.history.enabled && function () {\n        var e = r();\n        t.params.history.replaceState || e.removeEventListener(\"popstate\", p);\n      }();\n    }), a(\"transitionEnd _freeModeNoMomentumRelease\", function () {\n      i && d(t.params.history.key, t.activeIndex);\n    }), a(\"slideChange\", function () {\n      i && t.params.cssMode && d(t.params.history.key, t.activeIndex);\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      i = e.emit,\n      n = e.on,\n      l = !1;\n    var o = a(),\n      d = r();\n    s({\n      hashNavigation: {\n        enabled: !1,\n        replaceState: !1,\n        watchState: !1,\n        getSlideIndex: function getSlideIndex(e, s) {\n          if (t.virtual && t.params.virtual.enabled) {\n            var _e53 = t.slides.filter(function (e) {\n              return e.getAttribute(\"data-hash\") === s;\n            })[0];\n            if (!_e53) return 0;\n            return parseInt(_e53.getAttribute(\"data-swiper-slide-index\"), 10);\n          }\n          return t.getSlideIndex(f(t.slidesEl, \".\".concat(t.params.slideClass, \"[data-hash=\\\"\").concat(s, \"\\\"], swiper-slide[data-hash=\\\"\").concat(s, \"\\\"]\"))[0]);\n        }\n      }\n    });\n    var c = function c() {\n        i(\"hashChange\");\n        var e = o.location.hash.replace(\"#\", \"\"),\n          s = t.virtual && t.params.virtual.enabled ? t.slidesEl.querySelector(\"[data-swiper-slide-index=\\\"\".concat(t.activeIndex, \"\\\"]\")) : t.slides[t.activeIndex];\n        if (e !== (s ? s.getAttribute(\"data-hash\") : \"\")) {\n          var _s35 = t.params.hashNavigation.getSlideIndex(t, e);\n          if (void 0 === _s35 || Number.isNaN(_s35)) return;\n          t.slideTo(_s35);\n        }\n      },\n      p = function p() {\n        if (!l || !t.params.hashNavigation.enabled) return;\n        var e = t.virtual && t.params.virtual.enabled ? t.slidesEl.querySelector(\"[data-swiper-slide-index=\\\"\".concat(t.activeIndex, \"\\\"]\")) : t.slides[t.activeIndex],\n          s = e ? e.getAttribute(\"data-hash\") || e.getAttribute(\"data-history\") : \"\";\n        t.params.hashNavigation.replaceState && d.history && d.history.replaceState ? (d.history.replaceState(null, null, \"#\".concat(s) || 0), i(\"hashSet\")) : (o.location.hash = s || \"\", i(\"hashSet\"));\n      };\n    n(\"init\", function () {\n      t.params.hashNavigation.enabled && function () {\n        if (!t.params.hashNavigation.enabled || t.params.history && t.params.history.enabled) return;\n        l = !0;\n        var e = o.location.hash.replace(\"#\", \"\");\n        if (e) {\n          var _s36 = 0,\n            _a20 = t.params.hashNavigation.getSlideIndex(t, e);\n          t.slideTo(_a20 || 0, _s36, t.params.runCallbacksOnInit, !0);\n        }\n        t.params.hashNavigation.watchState && d.addEventListener(\"hashchange\", c);\n      }();\n    }), n(\"destroy\", function () {\n      t.params.hashNavigation.enabled && t.params.hashNavigation.watchState && d.removeEventListener(\"hashchange\", c);\n    }), n(\"transitionEnd _freeModeNoMomentumRelease\", function () {\n      l && p();\n    }), n(\"slideChange\", function () {\n      l && t.params.cssMode && p();\n    });\n  }, function (e) {\n    var t,\n      s,\n      i = e.swiper,\n      r = e.extendParams,\n      n = e.on,\n      l = e.emit,\n      o = e.params;\n    i.autoplay = {\n      running: !1,\n      paused: !1,\n      timeLeft: 0\n    }, r({\n      autoplay: {\n        enabled: !1,\n        delay: 3e3,\n        waitForTransition: !0,\n        disableOnInteraction: !0,\n        stopOnLastSlide: !1,\n        reverseDirection: !1,\n        pauseOnMouseEnter: !1\n      }\n    });\n    var d,\n      c,\n      p,\n      u,\n      m,\n      h,\n      f,\n      g = o && o.autoplay ? o.autoplay.delay : 3e3,\n      v = o && o.autoplay ? o.autoplay.delay : 3e3,\n      w = new Date().getTime;\n    function b(e) {\n      i && !i.destroyed && i.wrapperEl && e.target === i.wrapperEl && (i.wrapperEl.removeEventListener(\"transitionend\", b), M());\n    }\n    var y = function y() {\n        if (i.destroyed || !i.autoplay.running) return;\n        i.autoplay.paused ? c = !0 : c && (v = d, c = !1);\n        var e = i.autoplay.paused ? d : w + v - new Date().getTime();\n        i.autoplay.timeLeft = e, l(\"autoplayTimeLeft\", e, e / g), s = requestAnimationFrame(function () {\n          y();\n        });\n      },\n      E = function E(e) {\n        if (i.destroyed || !i.autoplay.running) return;\n        cancelAnimationFrame(s), y();\n        var a = void 0 === e ? i.params.autoplay.delay : e;\n        g = i.params.autoplay.delay, v = i.params.autoplay.delay;\n        var r = function () {\n          var e;\n          if (e = i.virtual && i.params.virtual.enabled ? i.slides.filter(function (e) {\n            return e.classList.contains(\"swiper-slide-active\");\n          })[0] : i.slides[i.activeIndex], !e) return;\n          return parseInt(e.getAttribute(\"data-swiper-autoplay\"), 10);\n        }();\n        !Number.isNaN(r) && r > 0 && void 0 === e && (a = r, g = r, v = r), d = a;\n        var n = i.params.speed,\n          o = function o() {\n            i && !i.destroyed && (i.params.autoplay.reverseDirection ? !i.isBeginning || i.params.loop || i.params.rewind ? (i.slidePrev(n, !0, !0), l(\"autoplay\")) : i.params.autoplay.stopOnLastSlide || (i.slideTo(i.slides.length - 1, n, !0, !0), l(\"autoplay\")) : !i.isEnd || i.params.loop || i.params.rewind ? (i.slideNext(n, !0, !0), l(\"autoplay\")) : i.params.autoplay.stopOnLastSlide || (i.slideTo(0, n, !0, !0), l(\"autoplay\")), i.params.cssMode && (w = new Date().getTime(), requestAnimationFrame(function () {\n              E();\n            })));\n          };\n        return a > 0 ? (clearTimeout(t), t = setTimeout(function () {\n          o();\n        }, a)) : requestAnimationFrame(function () {\n          o();\n        }), a;\n      },\n      x = function x() {\n        i.autoplay.running = !0, E(), l(\"autoplayStart\");\n      },\n      S = function S() {\n        i.autoplay.running = !1, clearTimeout(t), cancelAnimationFrame(s), l(\"autoplayStop\");\n      },\n      T = function T(e, s) {\n        if (i.destroyed || !i.autoplay.running) return;\n        clearTimeout(t), e || (f = !0);\n        var a = function a() {\n          l(\"autoplayPause\"), i.params.autoplay.waitForTransition ? i.wrapperEl.addEventListener(\"transitionend\", b) : M();\n        };\n        if (i.autoplay.paused = !0, s) return h && (d = i.params.autoplay.delay), h = !1, void a();\n        var r = d || i.params.autoplay.delay;\n        d = r - (new Date().getTime() - w), i.isEnd && d < 0 && !i.params.loop || (d < 0 && (d = 0), a());\n      },\n      M = function M() {\n        i.isEnd && d < 0 && !i.params.loop || i.destroyed || !i.autoplay.running || (w = new Date().getTime(), f ? (f = !1, E(d)) : E(), i.autoplay.paused = !1, l(\"autoplayResume\"));\n      },\n      C = function C() {\n        if (i.destroyed || !i.autoplay.running) return;\n        var e = a();\n        \"hidden\" === e.visibilityState && (f = !0, T(!0)), \"visible\" === e.visibilityState && M();\n      },\n      P = function P(e) {\n        \"mouse\" === e.pointerType && (f = !0, T(!0));\n      },\n      L = function L(e) {\n        \"mouse\" === e.pointerType && i.autoplay.paused && M();\n      };\n    n(\"init\", function () {\n      i.params.autoplay.enabled && (i.params.autoplay.pauseOnMouseEnter && (i.el.addEventListener(\"pointerenter\", P), i.el.addEventListener(\"pointerleave\", L)), a().addEventListener(\"visibilitychange\", C), w = new Date().getTime(), x());\n    }), n(\"destroy\", function () {\n      i.el.removeEventListener(\"pointerenter\", P), i.el.removeEventListener(\"pointerleave\", L), a().removeEventListener(\"visibilitychange\", C), i.autoplay.running && S();\n    }), n(\"beforeTransitionStart\", function (e, t, s) {\n      !i.destroyed && i.autoplay.running && (s || !i.params.autoplay.disableOnInteraction ? T(!0, !0) : S());\n    }), n(\"sliderFirstMove\", function () {\n      !i.destroyed && i.autoplay.running && (i.params.autoplay.disableOnInteraction ? S() : (p = !0, u = !1, f = !1, m = setTimeout(function () {\n        f = !0, u = !0, T(!0);\n      }, 200)));\n    }), n(\"touchEnd\", function () {\n      if (!i.destroyed && i.autoplay.running && p) {\n        if (clearTimeout(m), clearTimeout(t), i.params.autoplay.disableOnInteraction) return u = !1, void (p = !1);\n        u && i.params.cssMode && M(), u = !1, p = !1;\n      }\n    }), n(\"slideChange\", function () {\n      !i.destroyed && i.autoplay.running && (h = !0);\n    }), Object.assign(i.autoplay, {\n      start: x,\n      stop: S,\n      pause: T,\n      resume: M\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      i = e.on;\n    s({\n      thumbs: {\n        swiper: null,\n        multipleActiveThumbs: !0,\n        autoScrollOffset: 0,\n        slideThumbActiveClass: \"swiper-slide-thumb-active\",\n        thumbsContainerClass: \"swiper-thumbs\"\n      }\n    });\n    var r = !1,\n      n = !1;\n    function l() {\n      var e = t.thumbs.swiper;\n      if (!e || e.destroyed) return;\n      var s = e.clickedIndex,\n        a = e.clickedSlide;\n      if (a && a.classList.contains(t.params.thumbs.slideThumbActiveClass)) return;\n      if (null == s) return;\n      var i;\n      i = e.params.loop ? parseInt(e.clickedSlide.getAttribute(\"data-swiper-slide-index\"), 10) : s, t.params.loop ? t.slideToLoop(i) : t.slideTo(i);\n    }\n    function o() {\n      var e = t.params.thumbs;\n      if (r) return !1;\n      r = !0;\n      var s = t.constructor;\n      if (e.swiper instanceof s) t.thumbs.swiper = e.swiper, Object.assign(t.thumbs.swiper.originalParams, {\n        watchSlidesProgress: !0,\n        slideToClickedSlide: !1\n      }), Object.assign(t.thumbs.swiper.params, {\n        watchSlidesProgress: !0,\n        slideToClickedSlide: !1\n      }), t.thumbs.swiper.update();else if (d(e.swiper)) {\n        var _a21 = Object.assign({}, e.swiper);\n        Object.assign(_a21, {\n          watchSlidesProgress: !0,\n          slideToClickedSlide: !1\n        }), t.thumbs.swiper = new s(_a21), n = !0;\n      }\n      return t.thumbs.swiper.el.classList.add(t.params.thumbs.thumbsContainerClass), t.thumbs.swiper.on(\"tap\", l), !0;\n    }\n    function c(e) {\n      var s = t.thumbs.swiper;\n      if (!s || s.destroyed) return;\n      var a = \"auto\" === s.params.slidesPerView ? s.slidesPerViewDynamic() : s.params.slidesPerView;\n      var i = 1;\n      var r = t.params.thumbs.slideThumbActiveClass;\n      if (t.params.slidesPerView > 1 && !t.params.centeredSlides && (i = t.params.slidesPerView), t.params.thumbs.multipleActiveThumbs || (i = 1), i = Math.floor(i), s.slides.forEach(function (e) {\n        return e.classList.remove(r);\n      }), s.params.loop || s.params.virtual && s.params.virtual.enabled) for (var _e54 = 0; _e54 < i; _e54 += 1) f(s.slidesEl, \"[data-swiper-slide-index=\\\"\".concat(t.realIndex + _e54, \"\\\"]\")).forEach(function (e) {\n        e.classList.add(r);\n      });else for (var _e55 = 0; _e55 < i; _e55 += 1) s.slides[t.realIndex + _e55] && s.slides[t.realIndex + _e55].classList.add(r);\n      var n = t.params.thumbs.autoScrollOffset,\n        l = n && !s.params.loop;\n      if (t.realIndex !== s.realIndex || l) {\n        var _i15 = s.activeIndex;\n        var _r13, _o7;\n        if (s.params.loop) {\n          var _e56 = s.slides.filter(function (e) {\n            return e.getAttribute(\"data-swiper-slide-index\") === \"\".concat(t.realIndex);\n          })[0];\n          _r13 = s.slides.indexOf(_e56), _o7 = t.activeIndex > t.previousIndex ? \"next\" : \"prev\";\n        } else _r13 = t.realIndex, _o7 = _r13 > t.previousIndex ? \"next\" : \"prev\";\n        l && (_r13 += \"next\" === _o7 ? n : -1 * n), s.visibleSlidesIndexes && s.visibleSlidesIndexes.indexOf(_r13) < 0 && (s.params.centeredSlides ? _r13 = _r13 > _i15 ? _r13 - Math.floor(a / 2) + 1 : _r13 + Math.floor(a / 2) - 1 : _r13 > _i15 && s.params.slidesPerGroup, s.slideTo(_r13, e ? 0 : void 0));\n      }\n    }\n    t.thumbs = {\n      swiper: null\n    }, i(\"beforeInit\", function () {\n      var e = t.params.thumbs;\n      if (e && e.swiper) if (\"string\" == typeof e.swiper || e.swiper instanceof HTMLElement) {\n        var _s37 = a(),\n          _i16 = function _i16() {\n            var a = \"string\" == typeof e.swiper ? _s37.querySelector(e.swiper) : e.swiper;\n            if (a && a.swiper) e.swiper = a.swiper, o(), c(!0);else if (a) {\n              var _s38 = function _s38(i) {\n                e.swiper = i.detail[0], a.removeEventListener(\"init\", _s38), o(), c(!0), e.swiper.update(), t.update();\n              };\n              a.addEventListener(\"init\", _s38);\n            }\n            return a;\n          },\n          _r14 = function _r14() {\n            if (t.destroyed) return;\n            _i16() || requestAnimationFrame(_r14);\n          };\n        requestAnimationFrame(_r14);\n      } else o(), c(!0);\n    }), i(\"slideChange update resize observerUpdate\", function () {\n      c();\n    }), i(\"setTransition\", function (e, s) {\n      var a = t.thumbs.swiper;\n      a && !a.destroyed && a.setTransition(s);\n    }), i(\"beforeDestroy\", function () {\n      var e = t.thumbs.swiper;\n      e && !e.destroyed && n && e.destroy();\n    }), Object.assign(t.thumbs, {\n      init: o,\n      update: c\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.emit,\n      i = e.once;\n    s({\n      freeMode: {\n        enabled: !1,\n        momentum: !0,\n        momentumRatio: 1,\n        momentumBounce: !0,\n        momentumBounceRatio: 1,\n        momentumVelocityRatio: 1,\n        sticky: !1,\n        minimumVelocity: .02\n      }\n    }), Object.assign(t, {\n      freeMode: {\n        onTouchStart: function onTouchStart() {\n          if (t.params.cssMode) return;\n          var e = t.getTranslate();\n          t.setTranslate(e), t.setTransition(0), t.touchEventsData.velocities.length = 0, t.freeMode.onTouchEnd({\n            currentPos: t.rtl ? t.translate : -t.translate\n          });\n        },\n        onTouchMove: function onTouchMove() {\n          if (t.params.cssMode) return;\n          var e = t.touchEventsData,\n            s = t.touches;\n          0 === e.velocities.length && e.velocities.push({\n            position: s[t.isHorizontal() ? \"startX\" : \"startY\"],\n            time: e.touchStartTime\n          }), e.velocities.push({\n            position: s[t.isHorizontal() ? \"currentX\" : \"currentY\"],\n            time: l()\n          });\n        },\n        onTouchEnd: function onTouchEnd(e) {\n          var s = e.currentPos;\n          if (t.params.cssMode) return;\n          var r = t.params,\n            n = t.wrapperEl,\n            o = t.rtlTranslate,\n            d = t.snapGrid,\n            c = t.touchEventsData,\n            p = l() - c.touchStartTime;\n          if (s < -t.minTranslate()) t.slideTo(t.activeIndex);else if (s > -t.maxTranslate()) t.slides.length < d.length ? t.slideTo(d.length - 1) : t.slideTo(t.slides.length - 1);else {\n            if (r.freeMode.momentum) {\n              if (c.velocities.length > 1) {\n                var _e57 = c.velocities.pop(),\n                  _s39 = c.velocities.pop(),\n                  _a22 = _e57.position - _s39.position,\n                  _i17 = _e57.time - _s39.time;\n                t.velocity = _a22 / _i17, t.velocity /= 2, Math.abs(t.velocity) < r.freeMode.minimumVelocity && (t.velocity = 0), (_i17 > 150 || l() - _e57.time > 300) && (t.velocity = 0);\n              } else t.velocity = 0;\n              t.velocity *= r.freeMode.momentumVelocityRatio, c.velocities.length = 0;\n              var _e58 = 1e3 * r.freeMode.momentumRatio;\n              var _s40 = t.velocity * _e58;\n              var _p3 = t.translate + _s40;\n              o && (_p3 = -_p3);\n              var _u3,\n                _m2 = !1;\n              var _h = 20 * Math.abs(t.velocity) * r.freeMode.momentumBounceRatio;\n              var _f;\n              if (_p3 < t.maxTranslate()) r.freeMode.momentumBounce ? (_p3 + t.maxTranslate() < -_h && (_p3 = t.maxTranslate() - _h), _u3 = t.maxTranslate(), _m2 = !0, c.allowMomentumBounce = !0) : _p3 = t.maxTranslate(), r.loop && r.centeredSlides && (_f = !0);else if (_p3 > t.minTranslate()) r.freeMode.momentumBounce ? (_p3 - t.minTranslate() > _h && (_p3 = t.minTranslate() + _h), _u3 = t.minTranslate(), _m2 = !0, c.allowMomentumBounce = !0) : _p3 = t.minTranslate(), r.loop && r.centeredSlides && (_f = !0);else if (r.freeMode.sticky) {\n                var _e59;\n                for (var _t42 = 0; _t42 < d.length; _t42 += 1) if (d[_t42] > -_p3) {\n                  _e59 = _t42;\n                  break;\n                }\n                _p3 = Math.abs(d[_e59] - _p3) < Math.abs(d[_e59 - 1] - _p3) || \"next\" === t.swipeDirection ? d[_e59] : d[_e59 - 1], _p3 = -_p3;\n              }\n              if (_f && i(\"transitionEnd\", function () {\n                t.loopFix();\n              }), 0 !== t.velocity) {\n                if (_e58 = o ? Math.abs((-_p3 - t.translate) / t.velocity) : Math.abs((_p3 - t.translate) / t.velocity), r.freeMode.sticky) {\n                  var _s41 = Math.abs((o ? -_p3 : _p3) - t.translate),\n                    _a23 = t.slidesSizesGrid[t.activeIndex];\n                  _e58 = _s41 < _a23 ? r.speed : _s41 < 2 * _a23 ? 1.5 * r.speed : 2.5 * r.speed;\n                }\n              } else if (r.freeMode.sticky) return void t.slideToClosest();\n              r.freeMode.momentumBounce && _m2 ? (t.updateProgress(_u3), t.setTransition(_e58), t.setTranslate(_p3), t.transitionStart(!0, t.swipeDirection), t.animating = !0, E(n, function () {\n                t && !t.destroyed && c.allowMomentumBounce && (a(\"momentumBounce\"), t.setTransition(r.speed), setTimeout(function () {\n                  t.setTranslate(_u3), E(n, function () {\n                    t && !t.destroyed && t.transitionEnd();\n                  });\n                }, 0));\n              })) : t.velocity ? (a(\"_freeModeNoMomentumRelease\"), t.updateProgress(_p3), t.setTransition(_e58), t.setTranslate(_p3), t.transitionStart(!0, t.swipeDirection), t.animating || (t.animating = !0, E(n, function () {\n                t && !t.destroyed && t.transitionEnd();\n              }))) : t.updateProgress(_p3), t.updateActiveIndex(), t.updateSlidesClasses();\n            } else {\n              if (r.freeMode.sticky) return void t.slideToClosest();\n              r.freeMode && a(\"_freeModeNoMomentumRelease\");\n            }\n            (!r.freeMode.momentum || p >= r.longSwipesMs) && (t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses());\n          }\n        }\n      }\n    });\n  }, function (e) {\n    var t,\n      s,\n      a,\n      i = e.swiper,\n      r = e.extendParams;\n    r({\n      grid: {\n        rows: 1,\n        fill: \"column\"\n      }\n    });\n    var n = function n() {\n      var e = i.params.spaceBetween;\n      return \"string\" == typeof e && e.indexOf(\"%\") >= 0 ? e = parseFloat(e.replace(\"%\", \"\")) / 100 * i.size : \"string\" == typeof e && (e = parseFloat(e)), e;\n    };\n    i.grid = {\n      initSlides: function initSlides(e) {\n        var r = i.params.slidesPerView,\n          _i$params$grid = i.params.grid,\n          n = _i$params$grid.rows,\n          l = _i$params$grid.fill;\n        a = Math.floor(e / n), t = Math.floor(e / n) === e / n ? e : Math.ceil(e / n) * n, \"auto\" !== r && \"row\" === l && (t = Math.max(t, r * n)), s = t / n;\n      },\n      updateSlide: function updateSlide(e, r, l, o) {\n        var d = i.params.slidesPerGroup,\n          c = n(),\n          _i$params$grid2 = i.params.grid,\n          p = _i$params$grid2.rows,\n          u = _i$params$grid2.fill;\n        var m, h, f;\n        if (\"row\" === u && d > 1) {\n          var _s42 = Math.floor(e / (d * p)),\n            _a24 = e - p * d * _s42,\n            _i18 = 0 === _s42 ? d : Math.min(Math.ceil((l - _s42 * p * d) / p), d);\n          f = Math.floor(_a24 / _i18), h = _a24 - f * _i18 + _s42 * d, m = h + f * t / p, r.style.order = m;\n        } else \"column\" === u ? (h = Math.floor(e / p), f = e - h * p, (h > a || h === a && f === p - 1) && (f += 1, f >= p && (f = 0, h += 1))) : (f = Math.floor(e / s), h = e - f * s);\n        r.row = f, r.column = h, r.style[o(\"margin-top\")] = 0 !== f ? c && \"\".concat(c, \"px\") : \"\";\n      },\n      updateWrapperSize: function updateWrapperSize(e, s, a) {\n        var _i$params = i.params,\n          r = _i$params.centeredSlides,\n          l = _i$params.roundLengths,\n          o = n(),\n          d = i.params.grid.rows;\n        if (i.virtualSize = (e + o) * t, i.virtualSize = Math.ceil(i.virtualSize / d) - o, i.wrapperEl.style[a(\"width\")] = \"\".concat(i.virtualSize + o, \"px\"), r) {\n          var _e60 = [];\n          for (var _t43 = 0; _t43 < s.length; _t43 += 1) {\n            var _a25 = s[_t43];\n            l && (_a25 = Math.floor(_a25)), s[_t43] < i.virtualSize + s[0] && _e60.push(_a25);\n          }\n          s.splice(0, s.length), s.push.apply(s, _e60);\n        }\n      }\n    };\n  }, function (e) {\n    var t = e.swiper;\n    Object.assign(t, {\n      appendSlide: se.bind(t),\n      prependSlide: ae.bind(t),\n      addSlide: ie.bind(t),\n      removeSlide: re.bind(t),\n      removeAllSlides: ne.bind(t)\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    s({\n      fadeEffect: {\n        crossFade: !1\n      }\n    }), le({\n      effect: \"fade\",\n      swiper: t,\n      on: a,\n      setTranslate: function setTranslate() {\n        var e = t.slides;\n        t.params.fadeEffect;\n        for (var _s43 = 0; _s43 < e.length; _s43 += 1) {\n          var _e61 = t.slides[_s43];\n          var _a26 = -_e61.swiperSlideOffset;\n          t.params.virtualTranslate || (_a26 -= t.translate);\n          var _i19 = 0;\n          t.isHorizontal() || (_i19 = _a26, _a26 = 0);\n          var _r15 = t.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(_e61.progress), 0) : 1 + Math.min(Math.max(_e61.progress, -1), 0),\n            _n7 = oe(0, _e61);\n          _n7.style.opacity = _r15, _n7.style.transform = \"translate3d(\".concat(_a26, \"px, \").concat(_i19, \"px, 0px)\");\n        }\n      },\n      setTransition: function setTransition(e) {\n        var s = t.slides.map(function (e) {\n          return h(e);\n        });\n        s.forEach(function (t) {\n          t.style.transitionDuration = \"\".concat(e, \"ms\");\n        }), de({\n          swiper: t,\n          duration: e,\n          transformElements: s,\n          allSlides: !0\n        });\n      },\n      overwriteParams: function overwriteParams() {\n        return {\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: !0,\n          spaceBetween: 0,\n          virtualTranslate: !t.params.cssMode\n        };\n      }\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    s({\n      cubeEffect: {\n        slideShadows: !0,\n        shadow: !0,\n        shadowOffset: 20,\n        shadowScale: .94\n      }\n    });\n    var i = function i(e, t, s) {\n      var a = s ? e.querySelector(\".swiper-slide-shadow-left\") : e.querySelector(\".swiper-slide-shadow-top\"),\n        i = s ? e.querySelector(\".swiper-slide-shadow-right\") : e.querySelector(\".swiper-slide-shadow-bottom\");\n      a || (a = g(\"div\", \"swiper-slide-shadow-\" + (s ? \"left\" : \"top\")), e.append(a)), i || (i = g(\"div\", \"swiper-slide-shadow-\" + (s ? \"right\" : \"bottom\")), e.append(i)), a && (a.style.opacity = Math.max(-t, 0)), i && (i.style.opacity = Math.max(t, 0));\n    };\n    le({\n      effect: \"cube\",\n      swiper: t,\n      on: a,\n      setTranslate: function setTranslate() {\n        var e = t.el,\n          s = t.wrapperEl,\n          a = t.slides,\n          r = t.width,\n          n = t.height,\n          l = t.rtlTranslate,\n          o = t.size,\n          d = t.browser,\n          c = t.params.cubeEffect,\n          p = t.isHorizontal(),\n          u = t.virtual && t.params.virtual.enabled;\n        var m,\n          h = 0;\n        c.shadow && (p ? (m = t.slidesEl.querySelector(\".swiper-cube-shadow\"), m || (m = g(\"div\", \"swiper-cube-shadow\"), t.slidesEl.append(m)), m.style.height = \"\".concat(r, \"px\")) : (m = e.querySelector(\".swiper-cube-shadow\"), m || (m = g(\"div\", \"swiper-cube-shadow\"), e.append(m))));\n        for (var _e62 = 0; _e62 < a.length; _e62 += 1) {\n          var _t44 = a[_e62];\n          var _s44 = _e62;\n          u && (_s44 = parseInt(_t44.getAttribute(\"data-swiper-slide-index\"), 10));\n          var _r16 = 90 * _s44,\n            _n8 = Math.floor(_r16 / 360);\n          l && (_r16 = -_r16, _n8 = Math.floor(-_r16 / 360));\n          var _d4 = Math.max(Math.min(_t44.progress, 1), -1);\n          var _m3 = 0,\n            _f2 = 0,\n            _g = 0;\n          _s44 % 4 == 0 ? (_m3 = 4 * -_n8 * o, _g = 0) : (_s44 - 1) % 4 == 0 ? (_m3 = 0, _g = 4 * -_n8 * o) : (_s44 - 2) % 4 == 0 ? (_m3 = o + 4 * _n8 * o, _g = o) : (_s44 - 3) % 4 == 0 && (_m3 = -o, _g = 3 * o + 4 * o * _n8), l && (_m3 = -_m3), p || (_f2 = _m3, _m3 = 0);\n          var _v = \"rotateX(\".concat(p ? 0 : -_r16, \"deg) rotateY(\").concat(p ? _r16 : 0, \"deg) translate3d(\").concat(_m3, \"px, \").concat(_f2, \"px, \").concat(_g, \"px)\");\n          _d4 <= 1 && _d4 > -1 && (h = 90 * _s44 + 90 * _d4, l && (h = 90 * -_s44 - 90 * _d4)), _t44.style.transform = _v, c.slideShadows && i(_t44, _d4, p);\n        }\n        if (s.style.transformOrigin = \"50% 50% -\".concat(o / 2, \"px\"), s.style[\"-webkit-transform-origin\"] = \"50% 50% -\".concat(o / 2, \"px\"), c.shadow) if (p) m.style.transform = \"translate3d(0px, \".concat(r / 2 + c.shadowOffset, \"px, \").concat(-r / 2, \"px) rotateX(90deg) rotateZ(0deg) scale(\").concat(c.shadowScale, \")\");else {\n          var _e63 = Math.abs(h) - 90 * Math.floor(Math.abs(h) / 90),\n            _t45 = 1.5 - (Math.sin(2 * _e63 * Math.PI / 360) / 2 + Math.cos(2 * _e63 * Math.PI / 360) / 2),\n            _s45 = c.shadowScale,\n            _a27 = c.shadowScale / _t45,\n            _i20 = c.shadowOffset;\n          m.style.transform = \"scale3d(\".concat(_s45, \", 1, \").concat(_a27, \") translate3d(0px, \").concat(n / 2 + _i20, \"px, \").concat(-n / 2 / _a27, \"px) rotateX(-90deg)\");\n        }\n        var f = (d.isSafari || d.isWebView) && d.needPerspectiveFix ? -o / 2 : 0;\n        s.style.transform = \"translate3d(0px,0,\".concat(f, \"px) rotateX(\").concat(t.isHorizontal() ? 0 : h, \"deg) rotateY(\").concat(t.isHorizontal() ? -h : 0, \"deg)\"), s.style.setProperty(\"--swiper-cube-translate-z\", \"\".concat(f, \"px\"));\n      },\n      setTransition: function setTransition(e) {\n        var s = t.el,\n          a = t.slides;\n        if (a.forEach(function (t) {\n          t.style.transitionDuration = \"\".concat(e, \"ms\"), t.querySelectorAll(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").forEach(function (t) {\n            t.style.transitionDuration = \"\".concat(e, \"ms\");\n          });\n        }), t.params.cubeEffect.shadow && !t.isHorizontal()) {\n          var _t46 = s.querySelector(\".swiper-cube-shadow\");\n          _t46 && (_t46.style.transitionDuration = \"\".concat(e, \"ms\"));\n        }\n      },\n      recreateShadows: function recreateShadows() {\n        var e = t.isHorizontal();\n        t.slides.forEach(function (t) {\n          var s = Math.max(Math.min(t.progress, 1), -1);\n          i(t, s, e);\n        });\n      },\n      getEffectParams: function getEffectParams() {\n        return t.params.cubeEffect;\n      },\n      perspective: function perspective() {\n        return !0;\n      },\n      overwriteParams: function overwriteParams() {\n        return {\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: !0,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: !1,\n          virtualTranslate: !0\n        };\n      }\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    s({\n      flipEffect: {\n        slideShadows: !0,\n        limitRotation: !0\n      }\n    });\n    var i = function i(e, s, a) {\n      var i = t.isHorizontal() ? e.querySelector(\".swiper-slide-shadow-left\") : e.querySelector(\".swiper-slide-shadow-top\"),\n        r = t.isHorizontal() ? e.querySelector(\".swiper-slide-shadow-right\") : e.querySelector(\".swiper-slide-shadow-bottom\");\n      i || (i = ce(0, e, t.isHorizontal() ? \"left\" : \"top\")), r || (r = ce(0, e, t.isHorizontal() ? \"right\" : \"bottom\")), i && (i.style.opacity = Math.max(-s, 0)), r && (r.style.opacity = Math.max(s, 0));\n    };\n    le({\n      effect: \"flip\",\n      swiper: t,\n      on: a,\n      setTranslate: function setTranslate() {\n        var e = t.slides,\n          s = t.rtlTranslate,\n          a = t.params.flipEffect;\n        for (var _r17 = 0; _r17 < e.length; _r17 += 1) {\n          var _n9 = e[_r17];\n          var _l8 = _n9.progress;\n          t.params.flipEffect.limitRotation && (_l8 = Math.max(Math.min(_n9.progress, 1), -1));\n          var _o8 = _n9.swiperSlideOffset;\n          var _d5 = -180 * _l8,\n            _c3 = 0,\n            _p4 = t.params.cssMode ? -_o8 - t.translate : -_o8,\n            _u4 = 0;\n          t.isHorizontal() ? s && (_d5 = -_d5) : (_u4 = _p4, _p4 = 0, _c3 = -_d5, _d5 = 0), _n9.style.zIndex = -Math.abs(Math.round(_l8)) + e.length, a.slideShadows && i(_n9, _l8);\n          var _m4 = \"translate3d(\".concat(_p4, \"px, \").concat(_u4, \"px, 0px) rotateX(\").concat(_c3, \"deg) rotateY(\").concat(_d5, \"deg)\");\n          oe(0, _n9).style.transform = _m4;\n        }\n      },\n      setTransition: function setTransition(e) {\n        var s = t.slides.map(function (e) {\n          return h(e);\n        });\n        s.forEach(function (t) {\n          t.style.transitionDuration = \"\".concat(e, \"ms\"), t.querySelectorAll(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").forEach(function (t) {\n            t.style.transitionDuration = \"\".concat(e, \"ms\");\n          });\n        }), de({\n          swiper: t,\n          duration: e,\n          transformElements: s\n        });\n      },\n      recreateShadows: function recreateShadows() {\n        t.params.flipEffect;\n        t.slides.forEach(function (e) {\n          var s = e.progress;\n          t.params.flipEffect.limitRotation && (s = Math.max(Math.min(e.progress, 1), -1)), i(e, s);\n        });\n      },\n      getEffectParams: function getEffectParams() {\n        return t.params.flipEffect;\n      },\n      perspective: function perspective() {\n        return !0;\n      },\n      overwriteParams: function overwriteParams() {\n        return {\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: !0,\n          spaceBetween: 0,\n          virtualTranslate: !t.params.cssMode\n        };\n      }\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    s({\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        scale: 1,\n        modifier: 1,\n        slideShadows: !0\n      }\n    }), le({\n      effect: \"coverflow\",\n      swiper: t,\n      on: a,\n      setTranslate: function setTranslate() {\n        var e = t.width,\n          s = t.height,\n          a = t.slides,\n          i = t.slidesSizesGrid,\n          r = t.params.coverflowEffect,\n          n = t.isHorizontal(),\n          l = t.translate,\n          o = n ? e / 2 - l : s / 2 - l,\n          d = n ? r.rotate : -r.rotate,\n          c = r.depth;\n        for (var _e64 = 0, _t47 = a.length; _e64 < _t47; _e64 += 1) {\n          var _t48 = a[_e64],\n            _s46 = i[_e64],\n            _l9 = (o - _t48.swiperSlideOffset - _s46 / 2) / _s46,\n            _p5 = \"function\" == typeof r.modifier ? r.modifier(_l9) : _l9 * r.modifier;\n          var _u5 = n ? d * _p5 : 0,\n            _m5 = n ? 0 : d * _p5,\n            _h2 = -c * Math.abs(_p5),\n            _f3 = r.stretch;\n          \"string\" == typeof _f3 && -1 !== _f3.indexOf(\"%\") && (_f3 = parseFloat(r.stretch) / 100 * _s46);\n          var _g2 = n ? 0 : _f3 * _p5,\n            _v2 = n ? _f3 * _p5 : 0,\n            _w = 1 - (1 - r.scale) * Math.abs(_p5);\n          Math.abs(_v2) < .001 && (_v2 = 0), Math.abs(_g2) < .001 && (_g2 = 0), Math.abs(_h2) < .001 && (_h2 = 0), Math.abs(_u5) < .001 && (_u5 = 0), Math.abs(_m5) < .001 && (_m5 = 0), Math.abs(_w) < .001 && (_w = 0);\n          var _b = \"translate3d(\".concat(_v2, \"px,\").concat(_g2, \"px,\").concat(_h2, \"px)  rotateX(\").concat(_m5, \"deg) rotateY(\").concat(_u5, \"deg) scale(\").concat(_w, \")\");\n          if (oe(0, _t48).style.transform = _b, _t48.style.zIndex = 1 - Math.abs(Math.round(_p5)), r.slideShadows) {\n            var _e65 = n ? _t48.querySelector(\".swiper-slide-shadow-left\") : _t48.querySelector(\".swiper-slide-shadow-top\"),\n              _s47 = n ? _t48.querySelector(\".swiper-slide-shadow-right\") : _t48.querySelector(\".swiper-slide-shadow-bottom\");\n            _e65 || (_e65 = ce(0, _t48, n ? \"left\" : \"top\")), _s47 || (_s47 = ce(0, _t48, n ? \"right\" : \"bottom\")), _e65 && (_e65.style.opacity = _p5 > 0 ? _p5 : 0), _s47 && (_s47.style.opacity = -_p5 > 0 ? -_p5 : 0);\n          }\n        }\n      },\n      setTransition: function setTransition(e) {\n        t.slides.map(function (e) {\n          return h(e);\n        }).forEach(function (t) {\n          t.style.transitionDuration = \"\".concat(e, \"ms\"), t.querySelectorAll(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").forEach(function (t) {\n            t.style.transitionDuration = \"\".concat(e, \"ms\");\n          });\n        });\n      },\n      perspective: function perspective() {\n        return !0;\n      },\n      overwriteParams: function overwriteParams() {\n        return {\n          watchSlidesProgress: !0\n        };\n      }\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    s({\n      creativeEffect: {\n        limitProgress: 1,\n        shadowPerProgress: !1,\n        progressMultiplier: 1,\n        perspective: !0,\n        prev: {\n          translate: [0, 0, 0],\n          rotate: [0, 0, 0],\n          opacity: 1,\n          scale: 1\n        },\n        next: {\n          translate: [0, 0, 0],\n          rotate: [0, 0, 0],\n          opacity: 1,\n          scale: 1\n        }\n      }\n    });\n    var i = function i(e) {\n      return \"string\" == typeof e ? e : \"\".concat(e, \"px\");\n    };\n    le({\n      effect: \"creative\",\n      swiper: t,\n      on: a,\n      setTranslate: function setTranslate() {\n        var e = t.slides,\n          s = t.wrapperEl,\n          a = t.slidesSizesGrid,\n          r = t.params.creativeEffect,\n          n = r.progressMultiplier,\n          l = t.params.centeredSlides;\n        if (l) {\n          var _e66 = a[0] / 2 - t.params.slidesOffsetBefore || 0;\n          s.style.transform = \"translateX(calc(50% - \".concat(_e66, \"px))\");\n        }\n        var _loop = function _loop() {\n          var a = e[_s48],\n            o = a.progress,\n            d = Math.min(Math.max(a.progress, -r.limitProgress), r.limitProgress);\n          var c = d;\n          l || (c = Math.min(Math.max(a.originalProgress, -r.limitProgress), r.limitProgress));\n          var p = a.swiperSlideOffset,\n            u = [t.params.cssMode ? -p - t.translate : -p, 0, 0],\n            m = [0, 0, 0];\n          var h = !1;\n          t.isHorizontal() || (u[1] = u[0], u[0] = 0);\n          var f = {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            scale: 1,\n            opacity: 1\n          };\n          d < 0 ? (f = r.next, h = !0) : d > 0 && (f = r.prev, h = !0), u.forEach(function (e, t) {\n            u[t] = \"calc(\".concat(e, \"px + (\").concat(i(f.translate[t]), \" * \").concat(Math.abs(d * n), \"))\");\n          }), m.forEach(function (e, t) {\n            m[t] = f.rotate[t] * Math.abs(d * n);\n          }), a.style.zIndex = -Math.abs(Math.round(o)) + e.length;\n          var g = u.join(\", \"),\n            v = \"rotateX(\".concat(m[0], \"deg) rotateY(\").concat(m[1], \"deg) rotateZ(\").concat(m[2], \"deg)\"),\n            w = c < 0 ? \"scale(\".concat(1 + (1 - f.scale) * c * n, \")\") : \"scale(\".concat(1 - (1 - f.scale) * c * n, \")\"),\n            b = c < 0 ? 1 + (1 - f.opacity) * c * n : 1 - (1 - f.opacity) * c * n,\n            y = \"translate3d(\".concat(g, \") \").concat(v, \" \").concat(w);\n          if (h && f.shadow || !h) {\n            var _e67 = a.querySelector(\".swiper-slide-shadow\");\n            if (!_e67 && f.shadow && (_e67 = ce(0, a)), _e67) {\n              var _t49 = r.shadowPerProgress ? d * (1 / r.limitProgress) : d;\n              _e67.style.opacity = Math.min(Math.max(Math.abs(_t49), 0), 1);\n            }\n          }\n          var E = oe(0, a);\n          E.style.transform = y, E.style.opacity = b, f.origin && (E.style.transformOrigin = f.origin);\n        };\n        for (var _s48 = 0; _s48 < e.length; _s48 += 1) {\n          _loop();\n        }\n      },\n      setTransition: function setTransition(e) {\n        var s = t.slides.map(function (e) {\n          return h(e);\n        });\n        s.forEach(function (t) {\n          t.style.transitionDuration = \"\".concat(e, \"ms\"), t.querySelectorAll(\".swiper-slide-shadow\").forEach(function (t) {\n            t.style.transitionDuration = \"\".concat(e, \"ms\");\n          });\n        }), de({\n          swiper: t,\n          duration: e,\n          transformElements: s,\n          allSlides: !0\n        });\n      },\n      perspective: function perspective() {\n        return t.params.creativeEffect.perspective;\n      },\n      overwriteParams: function overwriteParams() {\n        return {\n          watchSlidesProgress: !0,\n          virtualTranslate: !t.params.cssMode\n        };\n      }\n    });\n  }, function (e) {\n    var t = e.swiper,\n      s = e.extendParams,\n      a = e.on;\n    s({\n      cardsEffect: {\n        slideShadows: !0,\n        rotate: !0,\n        perSlideRotate: 2,\n        perSlideOffset: 8\n      }\n    }), le({\n      effect: \"cards\",\n      swiper: t,\n      on: a,\n      setTranslate: function setTranslate() {\n        var e = t.slides,\n          s = t.activeIndex,\n          a = t.rtlTranslate,\n          i = t.params.cardsEffect,\n          _t$touchEventsData = t.touchEventsData,\n          r = _t$touchEventsData.startTranslate,\n          n = _t$touchEventsData.isTouched,\n          l = a ? -t.translate : t.translate;\n        for (var _o9 = 0; _o9 < e.length; _o9 += 1) {\n          var _d6 = e[_o9],\n            _c4 = _d6.progress,\n            _p6 = Math.min(Math.max(_c4, -4), 4);\n          var _u6 = _d6.swiperSlideOffset;\n          t.params.centeredSlides && !t.params.cssMode && (t.wrapperEl.style.transform = \"translateX(\".concat(t.minTranslate(), \"px)\")), t.params.centeredSlides && t.params.cssMode && (_u6 -= e[0].swiperSlideOffset);\n          var _m6 = t.params.cssMode ? -_u6 - t.translate : -_u6,\n            _h3 = 0;\n          var _f4 = -100 * Math.abs(_p6);\n          var _g3 = 1,\n            _v3 = -i.perSlideRotate * _p6,\n            _w2 = i.perSlideOffset - .75 * Math.abs(_p6);\n          var _b2 = t.virtual && t.params.virtual.enabled ? t.virtual.from + _o9 : _o9,\n            _y = (_b2 === s || _b2 === s - 1) && _p6 > 0 && _p6 < 1 && (n || t.params.cssMode) && l < r,\n            _E = (_b2 === s || _b2 === s + 1) && _p6 < 0 && _p6 > -1 && (n || t.params.cssMode) && l > r;\n          if (_y || _E) {\n            var _e68 = Math.pow(1 - Math.abs((Math.abs(_p6) - .5) / .5), .5);\n            _v3 += -28 * _p6 * _e68, _g3 += -.5 * _e68, _w2 += 96 * _e68, _h3 = -25 * _e68 * Math.abs(_p6) + \"%\";\n          }\n          if (_m6 = _p6 < 0 ? \"calc(\".concat(_m6, \"px \").concat(a ? \"-\" : \"+\", \" (\").concat(_w2 * Math.abs(_p6), \"%))\") : _p6 > 0 ? \"calc(\".concat(_m6, \"px \").concat(a ? \"-\" : \"+\", \" (-\").concat(_w2 * Math.abs(_p6), \"%))\") : \"\".concat(_m6, \"px\"), !t.isHorizontal()) {\n            var _e69 = _h3;\n            _h3 = _m6, _m6 = _e69;\n          }\n          var _x = _p6 < 0 ? \"\" + (1 + (1 - _g3) * _p6) : \"\" + (1 - (1 - _g3) * _p6),\n            _S = \"\\n        translate3d(\".concat(_m6, \", \").concat(_h3, \", \").concat(_f4, \"px)\\n        rotateZ(\").concat(i.rotate ? a ? -_v3 : _v3 : 0, \"deg)\\n        scale(\").concat(_x, \")\\n      \");\n          if (i.slideShadows) {\n            var _e70 = _d6.querySelector(\".swiper-slide-shadow\");\n            _e70 || (_e70 = ce(0, _d6)), _e70 && (_e70.style.opacity = Math.min(Math.max((Math.abs(_p6) - .5) / .5, 0), 1));\n          }\n          _d6.style.zIndex = -Math.abs(Math.round(_c4)) + e.length;\n          oe(0, _d6).style.transform = _S;\n        }\n      },\n      setTransition: function setTransition(e) {\n        var s = t.slides.map(function (e) {\n          return h(e);\n        });\n        s.forEach(function (t) {\n          t.style.transitionDuration = \"\".concat(e, \"ms\"), t.querySelectorAll(\".swiper-slide-shadow\").forEach(function (t) {\n            t.style.transitionDuration = \"\".concat(e, \"ms\");\n          });\n        }), de({\n          swiper: t,\n          duration: e,\n          transformElements: s\n        });\n      },\n      perspective: function perspective() {\n        return !0;\n      },\n      overwriteParams: function overwriteParams() {\n        return {\n          watchSlidesProgress: !0,\n          virtualTranslate: !t.params.cssMode\n        };\n      }\n    });\n  }];\n  return J.use(pe), J;\n});\n\n/*!\r\n * imagesLoaded PACKAGED v5.0.0\r\n * JavaScript is all like \"You images are done yet or what?\"\r\n * MIT License\r\n */\n!function (t, e) {\n  \"object\" == (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) && module.exports ? module.exports = e() : t.EvEmitter = e();\n}(\"undefined\" != typeof window ? window : undefined, function () {\n  function t() {}\n  var e = t.prototype;\n  return e.on = function (t, e) {\n    if (!t || !e) return this;\n    var i = this._events = this._events || {},\n      s = i[t] = i[t] || [];\n    return s.includes(e) || s.push(e), this;\n  }, e.once = function (t, e) {\n    if (!t || !e) return this;\n    this.on(t, e);\n    var i = this._onceEvents = this._onceEvents || {};\n    return (i[t] = i[t] || {})[e] = !0, this;\n  }, e.off = function (t, e) {\n    var i = this._events && this._events[t];\n    if (!i || !i.length) return this;\n    var s = i.indexOf(e);\n    return -1 != s && i.splice(s, 1), this;\n  }, e.emitEvent = function (t, e) {\n    var i = this._events && this._events[t];\n    if (!i || !i.length) return this;\n    i = i.slice(0), e = e || [];\n    var s = this._onceEvents && this._onceEvents[t];\n    var _iterator = _createForOfIteratorHelper(i),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var n = _step.value;\n        s && s[n] && (this.off(t, n), delete s[n]), n.apply(this, e);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return this;\n  }, e.allOff = function () {\n    return delete this._events, delete this._onceEvents, this;\n  }, t;\n}),\n/*!\r\n * imagesLoaded v5.0.0\r\n * JavaScript is all like \"You images are done yet or what?\"\r\n * MIT License\r\n */\nfunction (t, e) {\n  \"object\" == (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) && module.exports ? module.exports = e(t, require(\"ev-emitter\")) : t.imagesLoaded = e(t, t.EvEmitter);\n}(\"undefined\" != typeof window ? window : undefined, function (t, e) {\n  var i = t.jQuery,\n    s = t.console;\n  function n(t, e, o) {\n    if (!(this instanceof n)) return new n(t, e, o);\n    var r = t;\n    var h;\n    (\"string\" == typeof t && (r = document.querySelectorAll(t)), r) ? (this.elements = (h = r, Array.isArray(h) ? h : \"object\" == _typeof(h) && \"number\" == typeof h.length ? _toConsumableArray(h) : [h]), this.options = {}, \"function\" == typeof e ? o = e : Object.assign(this.options, e), o && this.on(\"always\", o), this.getImages(), i && (this.jqDeferred = new i.Deferred()), setTimeout(this.check.bind(this))) : s.error(\"Bad element for imagesLoaded \".concat(r || t));\n  }\n  n.prototype = Object.create(e.prototype), n.prototype.getImages = function () {\n    this.images = [], this.elements.forEach(this.addElementImages, this);\n  };\n  var o = [1, 9, 11];\n  n.prototype.addElementImages = function (t) {\n    \"IMG\" === t.nodeName && this.addImage(t), !0 === this.options.background && this.addElementBackgroundImages(t);\n    var e = t.nodeType;\n    if (!e || !o.includes(e)) return;\n    var i = t.querySelectorAll(\"img\");\n    var _iterator2 = _createForOfIteratorHelper(i),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _t51 = _step2.value;\n        this.addImage(_t51);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (\"string\" == typeof this.options.background) {\n      var _e71 = t.querySelectorAll(this.options.background);\n      var _iterator3 = _createForOfIteratorHelper(_e71),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _t50 = _step3.value;\n          this.addElementBackgroundImages(_t50);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  };\n  var r = /url\\((['\"])?(.*?)\\1\\)/gi;\n  function h(t) {\n    this.img = t;\n  }\n  function d(t, e) {\n    this.url = t, this.element = e, this.img = new Image();\n  }\n  return n.prototype.addElementBackgroundImages = function (t) {\n    var e = getComputedStyle(t);\n    if (!e) return;\n    var i = r.exec(e.backgroundImage);\n    for (; null !== i;) {\n      var _s49 = i && i[2];\n      _s49 && this.addBackground(_s49, t), i = r.exec(e.backgroundImage);\n    }\n  }, n.prototype.addImage = function (t) {\n    var e = new h(t);\n    this.images.push(e);\n  }, n.prototype.addBackground = function (t, e) {\n    var i = new d(t, e);\n    this.images.push(i);\n  }, n.prototype.check = function () {\n    var _this = this;\n    if (this.progressedCount = 0, this.hasAnyBroken = !1, !this.images.length) return void this.complete();\n    var t = function t(_t52, e, i) {\n      setTimeout(function () {\n        _this.progress(_t52, e, i);\n      });\n    };\n    this.images.forEach(function (e) {\n      e.once(\"progress\", t), e.check();\n    });\n  }, n.prototype.progress = function (t, e, i) {\n    this.progressedCount++, this.hasAnyBroken = this.hasAnyBroken || !t.isLoaded, this.emitEvent(\"progress\", [this, t, e]), this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, t), this.progressedCount === this.images.length && this.complete(), this.options.debug && s && s.log(\"progress: \".concat(i), t, e);\n  }, n.prototype.complete = function () {\n    var t = this.hasAnyBroken ? \"fail\" : \"done\";\n    if (this.isComplete = !0, this.emitEvent(t, [this]), this.emitEvent(\"always\", [this]), this.jqDeferred) {\n      var _t53 = this.hasAnyBroken ? \"reject\" : \"resolve\";\n      this.jqDeferred[_t53](this);\n    }\n  }, h.prototype = Object.create(e.prototype), h.prototype.check = function () {\n    this.getIsImageComplete() ? this.confirm(0 !== this.img.naturalWidth, \"naturalWidth\") : (this.proxyImage = new Image(), this.img.crossOrigin && (this.proxyImage.crossOrigin = this.img.crossOrigin), this.proxyImage.addEventListener(\"load\", this), this.proxyImage.addEventListener(\"error\", this), this.img.addEventListener(\"load\", this), this.img.addEventListener(\"error\", this), this.proxyImage.src = this.img.currentSrc || this.img.src);\n  }, h.prototype.getIsImageComplete = function () {\n    return this.img.complete && this.img.naturalWidth;\n  }, h.prototype.confirm = function (t, e) {\n    this.isLoaded = t;\n    var i = this.img.parentNode,\n      s = \"PICTURE\" === i.nodeName ? i : this.img;\n    this.emitEvent(\"progress\", [this, s, e]);\n  }, h.prototype.handleEvent = function (t) {\n    var e = \"on\" + t.type;\n    this[e] && this[e](t);\n  }, h.prototype.onload = function () {\n    this.confirm(!0, \"onload\"), this.unbindEvents();\n  }, h.prototype.onerror = function () {\n    this.confirm(!1, \"onerror\"), this.unbindEvents();\n  }, h.prototype.unbindEvents = function () {\n    this.proxyImage.removeEventListener(\"load\", this), this.proxyImage.removeEventListener(\"error\", this), this.img.removeEventListener(\"load\", this), this.img.removeEventListener(\"error\", this);\n  }, d.prototype = Object.create(h.prototype), d.prototype.check = function () {\n    this.img.addEventListener(\"load\", this), this.img.addEventListener(\"error\", this), this.img.src = this.url, this.getIsImageComplete() && (this.confirm(0 !== this.img.naturalWidth, \"naturalWidth\"), this.unbindEvents());\n  }, d.prototype.unbindEvents = function () {\n    this.img.removeEventListener(\"load\", this), this.img.removeEventListener(\"error\", this);\n  }, d.prototype.confirm = function (t, e) {\n    this.isLoaded = t, this.emitEvent(\"progress\", [this, this.element, e]);\n  }, n.makeJQueryPlugin = function (e) {\n    (e = e || t.jQuery) && (i = e, i.fn.imagesLoaded = function (t, e) {\n      return new n(this, t, e).jqDeferred.promise(i(this));\n    });\n  }, n.makeJQueryPlugin(), n;\n});\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  // Define the media query\n  // imagesLoaded( document.querySelector('.case-item-img-wrapper'), function( instance ) {\n  //     new Splide('.splide-weapons', {\n  //         drag: false,  \n  //         type   : 'loop',\n  //         perMove: 1,\n  //         perPage: 1,\n  //         // rewind : true,\n  //         isNavigation: false,\n  //         direction: 'ttb',\n  //         height: document.querySelector(\".case-item-img-wrapper\").offsetHeight,\n  //         pagination: false,\n  //         arrows: false,\n  //         gap: 0,\n  //         wheel: true,\n  //         // wheelMinThreshold: 2,\n  //         speed: 600,\n  //         wheelSleep: 1000,\n  //         easing: 'ease-in-out'\n  //     }).mount();\n  // });\n  var mobileHelpMenu = new Swiper('.splide-weapons', {\n    // mod: [Mousewheel],\n    speed: 1000,\n    loop: true,\n    direction: \"vertical\",\n    mousewheel: true,\n    slidesPerView: 1,\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev'\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./main.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./main.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;